<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kn0sky&#39;wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kn0sky.com/"/>
  <updated>2020-05-13T11:07:11.000Z</updated>
  <id>http://kn0sky.com/</id>
  
  <author>
    <name>kn0sky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo联动Typora</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo%E8%81%94%E5%8A%A8Typora/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo%E8%81%94%E5%8A%A8Typora/</id>
    <published>2020-05-13T10:40:49.000Z</published>
    <updated>2020-05-13T11:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo联动Typora-插入图片"><a href="#hexo联动Typora-插入图片" class="headerlink" title="hexo联动Typora 插入图片"></a>hexo联动Typora 插入图片</h2><p>使用Typora这款软件来写作hexo博客的时候，经常遇到了一个烦人的问题，那就是插入图片的时候，hexo要用的图片路径和Typora写作用的图片路径不一样</p><p>有两条思路来解决这个问题</p><ol><li>将hexo和Typora存放图片的路径设置为相同的</li><li>改变hexo或者Typora读取图片的路径</li></ol><p>第一种方法网上很好搜到，就不说了，这里谈谈第二种方法</p><hr><p>我这里hexo设置了，hexo-post-asset，好像是这个名字，反正就是图片会从同文章名文件夹里读取</p><p>在每个文件的YAML里添加如下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typora-root-url: 装图片的文件夹名</span><br></pre></td></tr></table></figure><p>然后文章内插入图片,例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可行：</span><br><span class="line">![<span class="string">image-20200513185515393</span>](<span class="link">image-20200513185515393.png</span>)</span><br><span class="line">不可行:</span><br><span class="line">![<span class="string">image-20200513185515393</span>](<span class="link">/image-20200513185515393.png</span>)</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="image-20200513185515393.png" alt="image-20200513185515393"></p><p>这样图片既可以在hexo直接显示，也可以在typora编辑器上看到</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo联动Typora-插入图片&quot;&gt;&lt;a href=&quot;#hexo联动Typora-插入图片&quot; class=&quot;headerlink&quot; title=&quot;hexo联动Typora 插入图片&quot;&gt;&lt;/a&gt;hexo联动Typora 插入图片&lt;/h2&gt;&lt;p&gt;使用Typora这款
      
    
    </summary>
    
    
      <category term="计算机使用入门学习" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="博客搭建" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门03--按键</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A803--%E6%8C%89%E9%94%AE/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A803--%E6%8C%89%E9%94%AE/</id>
    <published>2020-05-13T05:27:19.000Z</published>
    <updated>2020-05-13T12:46:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="51单片机入门03–按键"><a href="#51单片机入门03–按键" class="headerlink" title="51单片机入门03–按键"></a>51单片机入门03–按键</h1><h3 id="键盘的原理"><a href="#键盘的原理" class="headerlink" title="键盘的原理"></a>键盘的原理</h3><p><img src="image-20200513133011891.png" alt="image-20200513133011891"></p><p>按键需要一个上拉电阻，当没有按下去的时候，由于上拉电阻，左边的端口是高电平，当按键闭合后，左边的端口会变成低电平</p><p>这里按下的瞬间存在一个电平抖动的问题，所以需要消除抖动：</p><ol><li>硬件消抖：锁存器</li><li>软件消抖：延时程序</li></ol><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>分为两类：</p><ol><li>独立式键盘<ul><li>每个按键占用一根并口线</li><li>用于键位较少的情况，处理简单</li></ul></li><li>矩阵键盘<ul><li>键位分布在行列交叉点上</li><li>占用并口少，键位越多越明显</li></ul></li></ol><p>后面将以示例介绍两种键盘</p><h4 id="键位的识别"><a href="#键位的识别" class="headerlink" title="键位的识别"></a>键位的识别</h4><p>对于独立式键盘：直接识别对应并口即可</p><p>对于矩阵键盘：</p><ol><li>先检测键盘上是否有键被按下</li><li>然后识别按下的是哪一个按键</li></ol><h3 id="示例：每次按下按键试数码管数字加一（独立键盘）"><a href="#示例：每次按下按键试数码管数字加一（独立键盘）" class="headerlink" title="示例：每次按下按键试数码管数字加一（独立键盘）"></a>示例：每次按下按键试数码管数字加一（独立键盘）</h3><p>原理图：</p><p><img src="image-20200513193902218.png" alt="image-20200513193902218"></p><blockquote><p>P1~P3自带上拉电阻，P0需要自己加上拉电阻</p></blockquote><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line">sbit key0=P0^<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num=<span class="number">0</span>;flag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序消抖</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(key0==<span class="number">0</span>&amp;&amp;flag==<span class="number">0</span>)&#123;<span class="comment">//判断按键是否按下</span></span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(key0==<span class="number">1</span>&amp;&amp;flag==<span class="number">1</span>)&#123;<span class="comment">//判断按键是否从按下状态中弹起，如果是，则实现功能</span></span><br><span class="line">num++;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">9</span>)num=<span class="number">0</span>;</span><br><span class="line">P2 = s[num];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">key();</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例：按下不同的按键显示不同的数字（矩阵键盘）"><a href="#示例：按下不同的按键显示不同的数字（矩阵键盘）" class="headerlink" title="示例：按下不同的按键显示不同的数字（矩阵键盘）"></a>示例：按下不同的按键显示不同的数字（矩阵键盘）</h3><p>原理图：</p><p><img src="image-20200513204000884.png" alt="image-20200513204000884"></p><p>如何判断按下的按键是哪个按键？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L3 L2 L1 L0 H3 H2 H1 H0  hex</span><br><span class="line">0  0  0  0  1  1  1  1   0x0f  默认情况</span><br><span class="line">0  0  0  0  1  1  1  0   0x0e  判断按下按键的行，H0</span><br><span class="line">1  1  1  1  0  0  0  0   0xf0  默认情况取反</span><br><span class="line">1  1  0  1  0  0  0  0   0xd0  判断按下按键的列，L1</span><br><span class="line">将第二行和第四行的值相加：0xde 即为(H0,L1)按键在P2中的值</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num=<span class="number">99</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_scan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tmp=<span class="number">0</span>,tmp0=<span class="number">0</span>,tmp1=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断按下去的按键</span></span><br><span class="line">P1=<span class="number">0x0f</span>;</span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0x0f</span>)&#123;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">20</span>);<span class="comment">//还是这样消除抖动最方便</span></span><br><span class="line">tmp0 = P1;</span><br><span class="line">P1=<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0xf0</span>) tmp1 = P1;</span><br><span class="line">&#125;</span><br><span class="line">tmp = tmp1+tmp0;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现功能</span></span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0xee</span>)num=<span class="number">0</span>; <span class="comment">//display 0</span></span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0xde</span>)num=<span class="number">1</span>; <span class="comment">//display 1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">P2=s[num];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">key_scan();</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;51单片机入门03–按键&quot;&gt;&lt;a href=&quot;#51单片机入门03–按键&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门03–按键&quot;&gt;&lt;/a&gt;51单片机入门03–按键&lt;/h1&gt;&lt;h3 id=&quot;键盘的原理&quot;&gt;&lt;a href=&quot;#键盘的原理&quot; c
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>王道计组笔记01--计算机系统概述</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E7%AC%94%E8%AE%B001--%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E7%AC%94%E8%AE%B001--%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2020-05-13T02:17:33.000Z</published>
    <updated>2020-05-13T01:54:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="王道计组笔记01–计算机系统概述"><a href="#王道计组笔记01–计算机系统概述" class="headerlink" title="王道计组笔记01–计算机系统概述"></a>王道计组笔记01–计算机系统概述</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;王道计组笔记01–计算机系统概述&quot;&gt;&lt;a href=&quot;#王道计组笔记01–计算机系统概述&quot; class=&quot;headerlink&quot; title=&quot;王道计组笔记01–计算机系统概述&quot;&gt;&lt;/a&gt;王道计组笔记01–计算机系统概述&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="王道计组书学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门02--数码管</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A802--%E6%95%B0%E7%A0%81%E7%AE%A1/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A802--%E6%95%B0%E7%A0%81%E7%AE%A1/</id>
    <published>2020-05-12T09:27:19.000Z</published>
    <updated>2020-05-13T10:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="51单片机入门02–数码管"><a href="#51单片机入门02–数码管" class="headerlink" title="51单片机入门02–数码管"></a>51单片机入门02–数码管</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><ul><li>Protues</li><li>Keil</li></ul><h2 id="数码管结构和原理"><a href="#数码管结构和原理" class="headerlink" title="数码管结构和原理"></a>数码管结构和原理</h2><p>原理图：</p><p><img src="image-20200512164114318.png" alt="image-20200512164114318"></p><p>不同字符对应16进制断码为：</p><p><img src="image-20200512164342327.png" alt="image-20200512164342327"></p><h2 id="数码管的显示方式"><a href="#数码管的显示方式" class="headerlink" title="数码管的显示方式"></a>数码管的显示方式</h2><p>显示方式分为静态显示和动态显示，其中：</p><ul><li><p>静态显示</p><ul><li>每个数码管的段选线与一组I/O接口线连接</li><li>每个数码管一直显示</li><li>公共端接地或电源</li></ul></li><li><p>动态显示</p><ul><li>所有数码管的段选线与一组I/O接口线并联</li><li>每个数码管的公共端由一根I/O线控制</li><li>显示为逐个显示</li></ul></li></ul><blockquote><p>只显示一位的话，那就不做区分了，因为都一样</p></blockquote><h2 id="示例1：循环显示0-9（静态显示）"><a href="#示例1：循环显示0-9（静态显示）" class="headerlink" title="示例1：循环显示0~9（静态显示）"></a>示例1：循环显示0~9（静态显示）</h2><h3 id="电路图及源码"><a href="#电路图及源码" class="headerlink" title="电路图及源码"></a>电路图及源码</h3><p><img src="image-20200512171852130.png" alt="image-20200512171852130"></p><p>代码如下：通过数组来控制依次显示的字符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">P2 = s[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="示例2：用多位数码管显示selph字样（动态显示）"><a href="#示例2：用多位数码管显示selph字样（动态显示）" class="headerlink" title="示例2：用多位数码管显示selph字样（动态显示）"></a>示例2：用多位数码管显示selph字样（动态显示）</h2><p>电路图&amp;效果图如下：</p><p><img src="image-20200512173832213.png" alt="image-20200512173832213"></p><p>代码如下：通过一个数组来定义显示的字符，另一个数组来定义显示的顺序，从而实现动态显示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> anode[]=&#123;<span class="number">0x92</span>,<span class="number">0x86</span>,<span class="number">0xc7</span>,<span class="number">0x8c</span>,<span class="number">0x89</span>&#125;;<span class="comment">//SELPH</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> nu[]=&#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        P3 = nu[i];<span class="comment">//P2和P3的顺序不能反，不然残留的内容会出问题</span></span><br><span class="line">P2 = anode[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">10</span>);<span class="comment">//利用视觉残留产生同时显示多位不同的字符的效果</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简化版电路图&amp;效果图：</p><p><img src="image-20200512192750129.png" alt="image-20200512192750129"></p><p>这里使用74LS137译码器(74LS138也可以)进行译码操作（功能表及使用方法自行百度），通过P3.1-P3.3 的3个端口来表示全部8位的内容，有效节约了单片机的端口使用。</p><blockquote><p>这里使用的是共阴的数码管，如果使用共阳则需要在译码器的8个输出端口加一个反相器</p></blockquote><p>代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> cathode[]=&#123;<span class="number">0x6d</span>,<span class="number">0x79</span>,<span class="number">0x38</span>,<span class="number">0x73</span>,<span class="number">0x76</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ym[]=&#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">P3 = ym[i];</span><br><span class="line">P2 = cathode[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;51单片机入门02–数码管&quot;&gt;&lt;a href=&quot;#51单片机入门02–数码管&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门02–数码管&quot;&gt;&lt;/a&gt;51单片机入门02–数码管&lt;/h1&gt;&lt;h2 id=&quot;实验环境&quot;&gt;&lt;a href=&quot;#实验环境&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编作业--电话簿</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A--%E7%94%B5%E8%AF%9D%E7%B0%BF/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A--%E7%94%B5%E8%AF%9D%E7%B0%BF/</id>
    <published>2020-05-03T06:27:19.000Z</published>
    <updated>2020-05-14T05:40:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编作业–电话簿"><a href="#汇编作业–电话簿" class="headerlink" title="汇编作业–电话簿"></a>汇编作业–电话簿</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**项目名称：**</span>汇编语言电话本</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目背景：**</span>基于同学们学习汇编语言后没有练习的问题，特以该项目作为阶段性练习。</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目目的：**</span>熟悉汇编语言编程，练习编程逻辑，熟悉Win32 API调用模式</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目要求：**</span>编写一个具有增删改查功能的电话本，基于控制台。具体要求如下：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>基本功能：电话本具有姓名与电话号码两项属性，并且使用数据结构作为存储</span><br><span class="line"><span class="bullet">2. </span>增加功能：插入姓名与电话号码到数据结构的最后。</span><br><span class="line"><span class="bullet">3. </span>查询功能：输入姓名，以此作为依据，到数据结构中查找，将找到的信息打印到控制台。</span><br><span class="line"><span class="bullet">4. </span>删除功能：输入姓名或电话号码，以此作为依据，到数据结构中查找，且删除该条信息。</span><br><span class="line"><span class="bullet">5. </span>修改功能：输入姓名或电话号码，以此作为依据，到数据结构中查找，找到后打印信息，要求输入新的姓名或电话，接受后修改原有条目。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**编写指南：**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**1.**</span><span class="strong">**数组的编写方式**</span></span><br><span class="line"></span><br><span class="line">TelephoneNumber dd 30 DUP(?)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**2.**</span><span class="strong">**结构体的编写方式**</span></span><br><span class="line"></span><br><span class="line">Name STRUCT</span><br><span class="line"></span><br><span class="line">具体成员信息</span><br><span class="line"></span><br><span class="line">Name ENDS</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**3.**</span><span class="strong">**控制台相关的API**</span></span><br><span class="line"></span><br><span class="line">GetStdHandle 获得标准输入输出的窗口句柄</span><br><span class="line"></span><br><span class="line">SetConsoleTextAttribute是设置控制台字体颜色和背景色</span><br><span class="line"></span><br><span class="line">CONSOLE<span class="emphasis">_CURSOR_</span>INFO用于存放控制光标信息</span><br><span class="line"></span><br><span class="line">SetConsoleCursorInfo设置光标的信息</span><br><span class="line"></span><br><span class="line">GetConsoleScreenBufferInfo取得控制台屏幕信息</span><br><span class="line"></span><br><span class="line">SetConsoleCursorPosition设置光标位置</span><br><span class="line"></span><br><span class="line">WriteConsoleOutput直接写输入缓冲区</span><br><span class="line"></span><br><span class="line">SetConsoleTitle设置控制台的标题</span><br><span class="line"></span><br><span class="line">ReadConsole 读控制台</span><br><span class="line"></span><br><span class="line">WriteConsole 写控制台</span><br></pre></td></tr></table></figure><h2 id="实现基本功能"><a href="#实现基本功能" class="headerlink" title="实现基本功能"></a>实现基本功能</h2><p>首先，根据前面所学的知识不能够完成本项目，目前以本项目为最终目标，将目标分解成小目标逐个击破</p><p>第一步———-基本功能：电话本具有姓名与电话号码两项属性，并且使用数据结构作为存储</p><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p>首先要了解数据结构要怎么弄，我们的数据包括姓名和电话两部分，姓名是字符串，电话是数组，应该先弄清楚这两样东西怎么用</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>定义一个字符串并通过调用消息框输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat,stdcall</span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line">ExitProcess PROTO, dwExitCode:DWORD</span><br><span class="line">MessageBoxA PROTO, hWnd:DWORD ,lpText:BYTE ,lpCaption:BYTE ,uType:DWORD</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">name1 db &quot;警告&quot; ,0</span><br><span class="line">name2 db &quot;你菜爆了&quot; ,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push 0</span><br><span class="line">lea eax ,name1</span><br><span class="line">push eax</span><br><span class="line">lea eax ,name2</span><br><span class="line">push eax</span><br><span class="line">push 0</span><br><span class="line">call MessageBoxA</span><br><span class="line">add esp,16</span><br><span class="line">call ExitProcess</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>通过控制台输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">    szText db &#39;Hello World!&#39;, 0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">    invoke crt_printf, addr szText;类似于call，但比call方便，可直接在后面跟参数</span><br><span class="line">    mov eax ,eax</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>定义一个数组赋值并输出到控制台：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;定义数组</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">testext db &quot;hello world!&quot;,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;给数组赋值</span><br><span class="line">lea edi ,offset user</span><br><span class="line">lea esi ,offset testext</span><br><span class="line">    mov ecx,20</span><br><span class="line">rep movsb</span><br><span class="line">;打印</span><br><span class="line">push offset user</span><br><span class="line">call crt_printf</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line"></span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h4 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h4><p>到这里我们已经会使用字符串和数组了，接下来了解一下如何使用数据结构作为存储。</p><p>示例：创建一个结构体，包含两项内容，插入值并输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;定义结构体</span><br><span class="line">Contact struct</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">tel db 20 dup(0)</span><br><span class="line">Contact ends</span><br><span class="line"></span><br><span class="line">person1 Contact &lt;&gt;</span><br><span class="line">person2 Contact &lt;&#39;john&#39;,&#39;12312312312&#39;&gt;</span><br><span class="line"></span><br><span class="line">tsname db &quot;Li Hua&quot;,0</span><br><span class="line">tstel db &quot;12312345678&quot;,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;给结构体数组赋值</span><br><span class="line">lea edi ,offset person1.tel</span><br><span class="line">lea esi ,offset tstel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">lea edi ,offset person1.user</span><br><span class="line">lea esi ,offset tsname</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">push offset person1.user</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">push offset person1.tel</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line"></span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>到此，基本功能已经实现，下一步，实现增加功能</p><h2 id="实现增加功能"><a href="#实现增加功能" class="headerlink" title="实现增加功能"></a>实现增加功能</h2><p>增加功能：插入姓名与电话号码到数据结构的最后。</p><p>这里要解决两个问题</p><ol><li>如何输入数据</li><li>如何将数据加到数据结构的最后</li></ol><h3 id="输入功能"><a href="#输入功能" class="headerlink" title="输入功能"></a>输入功能</h3><p>输入一个字符数并输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat ,stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;输入格式</span><br><span class="line">input_format_str db &quot;%s&quot;,0</span><br><span class="line"></span><br><span class="line">;存放输入的变量</span><br><span class="line">inputstr db 0,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf;输入函数需要两个参数，一个是输入格式，一个用来保存输入的值</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">invoke crt_printf ,offset inputstr</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h3 id="添加数据函数"><a href="#添加数据函数" class="headerlink" title="添加数据函数"></a>添加数据函数</h3><p>据此，我们可以用一个变量来计数，来计算数组最后一个位置的偏移量，通过上面的方法来实现添加数据。</p><p>初步完成添加数据功能函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">;结构体存储名字电话</span><br><span class="line">Contact struct</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">tel db 20 dup(0)</span><br><span class="line">Contact ends</span><br><span class="line"></span><br><span class="line">;定义一个结构体数组存储所有联系人</span><br><span class="line">ContactList Contact 100 dup(&lt;&#39;0&#39;&gt;)</span><br><span class="line"></span><br><span class="line">;定义一个临时结构用来传送数据</span><br><span class="line">tmpContact Contact &lt;&#39;john&#39;,&#39;123123123123&#39;&gt;</span><br><span class="line"></span><br><span class="line">;输入格式</span><br><span class="line">input_format_str db &quot;%s&quot;,0</span><br><span class="line"></span><br><span class="line">;存放输入的变量</span><br><span class="line">inputstr db 20 dup(0)</span><br><span class="line"></span><br><span class="line">;现有数据数</span><br><span class="line">count dd 1 dup(0)</span><br><span class="line"></span><br><span class="line">;问候语</span><br><span class="line">input_user_text db &quot;请输入联系人姓名：&quot;,0</span><br><span class="line">input_tel_text db &quot;请输入联系人电话：&quot;,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">addContact proc</span><br><span class="line">;消息提示1：请输入联系人姓名</span><br><span class="line">push offset input_user_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;----------------------------------------</span><br><span class="line"></span><br><span class="line">;消息提示2：请输入联系人电话</span><br><span class="line">push offset input_tel_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;-----------------------------------------</span><br><span class="line"></span><br><span class="line">;保存到数据结构的最后</span><br><span class="line">lea esi ,offset tmpContact</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line"></span><br><span class="line">;计算偏移,并移动</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;总数+1</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line">;返回</span><br><span class="line">retn</span><br><span class="line">addContact endp</span><br></pre></td></tr></table></figure><h2 id="实现查询功能"><a href="#实现查询功能" class="headerlink" title="实现查询功能"></a>实现查询功能</h2><p>查询功能：输入姓名，以此作为依据，到数据结构中查找，将找到的信息打印到控制台。</p><h2 id="遇到的问题及其解决方案"><a href="#遇到的问题及其解决方案" class="headerlink" title="遇到的问题及其解决方案"></a>遇到的问题及其解决方案</h2><h4 id="0X01-找不到msvcrt-inv文件"><a href="#0X01-找不到msvcrt-inv文件" class="headerlink" title="0X01 找不到msvcrt.inv文件"></a>0X01 找不到<code>msvcrt.inv</code>文件</h4><ol><li>下载<code>MASM SDK</code>文件（<a href="http://www.masm32.com/）" target="_blank" rel="external nofollow noopener noreferrer">http://www.masm32.com/）</a></li><li>安装，C盘装不上装其他盘也可以</li><li>在<code>masm32</code>文件夹下找到lib目录中找到<code>msvcrt.lib</code>文件，在include目录中找到<code>msvcrt.inc</code>文件，将它们复制到项目目录下</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><p><a href="https://www.cnblogs.com/yangcs/p/5087490.html" target="_blank" rel="external nofollow noopener noreferrer">VS常见错误之一：error LNK2019: 无法解析的外部符号</a></p><p><a href="https://blog.csdn.net/u014399084/java/article/details/79679446" target="_blank" rel="external nofollow noopener noreferrer">安装masm32 问题：Delete Operation of EXE file has Failed!的解决办法</a></p><p><a href="[https://www.wuj1n9.cn/2020/04/20/%E6%B1%87%E7%BC%96%E5%AE%9E%E7%8E%B0%E7%94%B5%E8%AF%9D%E6%9C%AC-Tips/](https://www.wuj1n9.cn/2020/04/20/汇编实现电话本-Tips/)">汇编实现电话本 Tips</a></p><p><a href="https://blog.csdn.net/jiangwei0512/article/details/50609083" target="_blank" rel="external nofollow noopener noreferrer">asm基础–汇编中的结构体</a></p><p><a href="https://blog.csdn.net/baoli1008/article/details/46691497" target="_blank" rel="external nofollow noopener noreferrer">汇编语言LEA和OFFSET的区别</a></p><p><a href="https://blog.csdn.net/zhenyongyuan123/article/details/8364011" target="_blank" rel="external nofollow noopener noreferrer">汇编语言：movsb/w/d</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编作业–电话簿&quot;&gt;&lt;a href=&quot;#汇编作业–电话簿&quot; class=&quot;headerlink&quot; title=&quot;汇编作业–电话簿&quot;&gt;&lt;/a&gt;汇编作业–电话簿&lt;/h1&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>半导体物理01--能带理论</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%8601--%E8%83%BD%E5%B8%A6%E7%90%86%E8%AE%BA/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%8601--%E8%83%BD%E5%B8%A6%E7%90%86%E8%AE%BA/</id>
    <published>2020-04-26T14:37:19.000Z</published>
    <updated>2020-04-27T08:12:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="半导体物理01-–-能带理论"><a href="#半导体物理01-–-能带理论" class="headerlink" title="半导体物理01 – 能带理论"></a>半导体物理01 – 能带理论</h1><h2 id="认识半导体"><a href="#认识半导体" class="headerlink" title="认识半导体"></a>认识半导体</h2><p>半导体的主要特征：电阻率可在很大范围内变化</p><p>半导体的分类：</p><ul><li>元素半导体（单质，比如Si、Ge）</li><li>化合物半导体（比如：GaAs、InP）</li><li>固溶半导体（混合晶体）</li><li>非晶态半导体</li><li>有机半导体</li></ul><p>半导体的晶格结构：</p><ul><li>金刚石结构（共价键 | Si、Ge）</li><li>闪锌矿结构（混合键）</li><li>纤锌矿结构（混合键）</li><li>NaCl结构（共价键）</li></ul><h2 id="能带理论"><a href="#能带理论" class="headerlink" title="能带理论"></a>能带理论</h2><h3 id="原子中的电子状态–能级"><a href="#原子中的电子状态–能级" class="headerlink" title="原子中的电子状态–能级"></a>原子中的电子状态–能级</h3><p>电子运动处于量子态，要完全描述电子的运动需要4个量子数（<strong>唯一确定</strong>）：</p><ul><li>主量子数n（主能级）：表征量子态具有的能量大小，n=1,2,3…</li><li>角量子数l（次能级）：表征电子运动的角动量大小，  l=0,1,2,3…</li><li>磁量子数m：决定轨道角动量在空间的方位，m=0,±1,±2…</li><li>自旋量子数s：决定自旋角动量在空间的方位，s=±1/2</li></ul><blockquote><p>主能级n的值决定有多少次能级l</p><p>次能级轨道依次为<code>s p d f</code></p><p>磁量子数m和次能级轨道数有关，后面的轨道比前面的轨道m多2</p><p>自旋量子数说明电子有两种自旋方向</p></blockquote><p><strong>简并度</strong>：指量子态数（由对应能级的磁量子数决定）</p><h4 id="电子在量子态上的分布"><a href="#电子在量子态上的分布" class="headerlink" title="电子在量子态上的分布"></a>电子在量子态上的分布</h4><p>电子填充量子态需遵从2个原则：</p><ol><li><strong>泡利不相容原理</strong>（计入自旋）：原子中每个量子态最多只能容纳一个电子</li><li><strong>能量最低原理</strong>：原子中的电子，在不违背泡利不相容原理的前提下，总是先占据能量低的量子态</li></ol><h3 id="晶体中的电子状态–能带"><a href="#晶体中的电子状态–能带" class="headerlink" title="晶体中的电子状态–能带"></a>晶体中的电子状态–能带</h3><p>电子共有化运动：</p><ol><li>原子靠近组成晶体，越外层的层壳交叠越多</li><li>电子不再局限于某一原子，可以转移到相邻原子上</li><li>电子的转移只能在不同原子的相似壳层</li></ol><p>电子共有化运动 —&gt; 分裂出若干个相近的能级 —&gt; 形成一个<strong>准连续的能带</strong></p><p>能带重组：</p><p><img src="1.png" alt></p><p> <img src="%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%8601--%E8%83%BD%E5%B8%A6%E7%90%86%E8%AE%BA%5C1.png" alt></p><h4 id="绝对零度时（0K），半导体、绝缘体、金属的能带区别"><a href="#绝对零度时（0K），半导体、绝缘体、金属的能带区别" class="headerlink" title="绝对零度时（0K），半导体、绝缘体、金属的能带区别"></a>绝对零度时（0K），半导体、绝缘体、金属的能带区别</h4><p>半导体，绝缘体，金属能带的区别：</p><ul><li>绝缘体：导带是空带，价带是满带，禁带距离大</li><li>半导体：导带是空带，价带是满带，禁带距离小</li><li>金    属：导带是半满，价带是满带，禁带距离无</li></ul><blockquote><p>电子从价带跃迁到导带，使晶体拥有导电特性</p><ul><li><p>满带、空带：不导电</p></li><li><p>半满带：导电</p></li></ul></blockquote><p>绝缘体和半导体结构类似，在0K时不导电，</p><p>在室温环境下，由于本征激发，半导体有一定的导电性（掺杂之后可以强导电）</p><h2 id="半导体中电子的状态和能带"><a href="#半导体中电子的状态和能带" class="headerlink" title="半导体中电子的状态和能带"></a>半导体中电子的状态和能带</h2><p>单电子近似：晶体中的电子是在晶格的周期性势场（原子核与电子的平均势场）中运动的</p><p>布洛赫定理：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;半导体物理01-–-能带理论&quot;&gt;&lt;a href=&quot;#半导体物理01-–-能带理论&quot; class=&quot;headerlink&quot; title=&quot;半导体物理01 – 能带理论&quot;&gt;&lt;/a&gt;半导体物理01 – 能带理论&lt;/h1&gt;&lt;h2 id=&quot;认识半导体&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="半导体物理学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%89%A9%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础10--使用函数</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8010--%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8010--%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <published>2020-04-18T06:27:19.000Z</published>
    <updated>2020-04-18T07:13:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础10-–-使用函数"><a href="#汇编基础10-–-使用函数" class="headerlink" title="汇编基础10 – 使用函数"></a>汇编基础10 – 使用函数</h1><h2 id="函数编写"><a href="#函数编写" class="headerlink" title="函数编写"></a>函数编写</h2><p>函数格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function proc</span><br><span class="line">code</span><br><span class="line">function endp</span><br></pre></td></tr></table></figure><p>传参方式：</p><ol><li>寄存器</li><li>堆栈</li></ol><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><p>调用指令：CALL</p><p>格式：CALL OPRD</p><p>相当于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push EIP</span><br><span class="line">jmp OPRD</span><br></pre></td></tr></table></figure><p>返回指令：RETN</p><p>格式：RETN</p><p>相当于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pop EIP</span><br><span class="line">jmp EIP</span><br></pre></td></tr></table></figure><p>示例1：通过栈传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line"></span><br><span class="line">addx proc</span><br><span class="line">mov eax ,[esp+4] ;先进栈的，地址位置大，后进的，地址小（小端序）</span><br><span class="line">mov ebx ,[esp+8]</span><br><span class="line">add eax ,ebx</span><br><span class="line">retn</span><br><span class="line">addx endp</span><br><span class="line"></span><br><span class="line">main proc</span><br><span class="line">push 1</span><br><span class="line">push 2;通过栈传参</span><br><span class="line">call addx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>示例2：通过寄存器传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line"></span><br><span class="line">addx proc</span><br><span class="line">add eax ,ebx</span><br><span class="line">retn</span><br><span class="line">addx endp</span><br><span class="line"></span><br><span class="line">main proc</span><br><span class="line">mov eax ,2</span><br><span class="line">mov ebx ,1</span><br><span class="line">call addx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>示例3：加减乘除函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line"></span><br><span class="line">addx proc</span><br><span class="line">add eax ,ebx</span><br><span class="line">retn</span><br><span class="line">addx endp</span><br><span class="line"></span><br><span class="line">subt proc</span><br><span class="line">sub eax ,ebx</span><br><span class="line">retn</span><br><span class="line">subt endp</span><br><span class="line"></span><br><span class="line">mult proc</span><br><span class="line">mov ebx,[esp+4]</span><br><span class="line">mul ebx</span><br><span class="line">ret</span><br><span class="line">mult endp</span><br><span class="line"></span><br><span class="line">divi proc</span><br><span class="line">div ebx</span><br><span class="line">mov ah,ah</span><br><span class="line">mov al,al</span><br><span class="line">ret</span><br><span class="line">divi endp</span><br><span class="line"></span><br><span class="line">main proc</span><br><span class="line">mov eax ,2</span><br><span class="line">mov ebx ,2</span><br><span class="line">push 15</span><br><span class="line">call addx</span><br><span class="line">call subt</span><br><span class="line">call mult</span><br><span class="line">mov ebx ,1;把ebx清0，方便观察看出栈数据</span><br><span class="line">pop ebx</span><br><span class="line">call divi</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础10-–-使用函数&quot;&gt;&lt;a href=&quot;#汇编基础10-–-使用函数&quot; class=&quot;headerlink&quot; title=&quot;汇编基础10 – 使用函数&quot;&gt;&lt;/a&gt;汇编基础10 – 使用函数&lt;/h1&gt;&lt;h2 id=&quot;函数编写&quot;&gt;&lt;a href=&quot;#函数编写&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础11--win32汇编</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8011--win32%E6%B1%87%E7%BC%96/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8011--win32%E6%B1%87%E7%BC%96/</id>
    <published>2020-04-18T06:27:19.000Z</published>
    <updated>2020-04-18T08:17:15.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础11-–-win32汇编"><a href="#汇编基础11-–-win32汇编" class="headerlink" title="汇编基础11 – win32汇编"></a>汇编基础11 – win32汇编</h1><p><strong>API</strong>：（Application Programming Interface，<a href="https://baike.baidu.com/item/应用程序" target="_blank" rel="external nofollow noopener noreferrer">应用程序</a>接口）是一些预先定义的<a href="https://baike.baidu.com/item/函数" target="_blank" rel="external nofollow noopener noreferrer">函数</a>，或指软件系统不同组成部分衔接的约定。 [1] 目的是提供<a href="https://baike.baidu.com/item/应用程序" target="_blank" rel="external nofollow noopener noreferrer">应用程序</a>与开发人员基于某<a href="https://baike.baidu.com/item/软件" target="_blank" rel="external nofollow noopener noreferrer">软件</a>或硬件得以访问一组<a href="https://baike.baidu.com/item/例程" target="_blank" rel="external nofollow noopener noreferrer">例程</a>的能力，而又无需访问原码，或理解内部工作<a href="https://baike.baidu.com/item/机制" target="_blank" rel="external nofollow noopener noreferrer">机制</a>的细节。</p><p><strong>win32汇编</strong>是通过使用Windows提供的接口进行编程</p><p>示例：hello world！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line"></span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line"></span><br><span class="line">;声明函数</span><br><span class="line">ExitProcess PROTO, dwExitCode:DWORD</span><br><span class="line">MessageBoxA PROTO, hWnd:DWORD ,lpText:BYTE ,lpCaption:BYTE ,uType:DWORD</span><br><span class="line">;参数从栈中调用出来，左边的参数在栈下面，右边的在上面</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">str1 db &quot;Hello world&quot; ,0;需要,0结尾，不然报错</span><br><span class="line">;db是一个占了8位的类型，db后面的内容视为数据而不视为代码</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push 1</span><br><span class="line">lea eax ,str1</span><br><span class="line">push eax</span><br><span class="line">push eax</span><br><span class="line">push 0</span><br><span class="line">call MessageBoxA</span><br><span class="line">add esp ,16 ;堆栈平衡</span><br><span class="line">call ExitProcess</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础11-–-win32汇编&quot;&gt;&lt;a href=&quot;#汇编基础11-–-win32汇编&quot; class=&quot;headerlink&quot; title=&quot;汇编基础11 – win32汇编&quot;&gt;&lt;/a&gt;汇编基础11 – win32汇编&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;API&lt;/s
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础12--数组和结构体</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8012--%E6%95%B0%E7%BB%84%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8012--%E6%95%B0%E7%BB%84%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93/</id>
    <published>2020-04-18T06:27:19.000Z</published>
    <updated>2020-04-18T08:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础12-–-数组和结构体"><a href="#汇编基础12-–-数组和结构体" class="headerlink" title="汇编基础12 – 数组和结构体"></a>汇编基础12 – 数组和结构体</h1><p>数组的声明和使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat ,stdcall</span><br><span class="line"></span><br><span class="line">.Data</span><br><span class="line">valu dd 11,22,33</span><br><span class="line">;声明并初始化有三个元素的 DWORD 数组; 该数组每个元素是 4 字节</span><br><span class="line">;也可以按如下方式写</span><br><span class="line">;valu dd 11</span><br><span class="line">;  dd 22,33</span><br><span class="line"></span><br><span class="line">.Code</span><br><span class="line">main PROC</span><br><span class="line">mov eax,valu;0x0B</span><br><span class="line">mov eax,valu[4];0x16</span><br><span class="line">mov eax,valu[8];0x21</span><br><span class="line">;mov eax,valu[4*0]   ;0x0B</span><br><span class="line">;mov eax,valu[4*1];0x16</span><br><span class="line">;mov eax,valu[4*2];0x21</span><br><span class="line">mov eax,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>使用伪指令DUP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat ,stdcall</span><br><span class="line"></span><br><span class="line">.Data</span><br><span class="line"></span><br><span class="line">valu dd 3 dup(0)</span><br><span class="line"></span><br><span class="line">.Code</span><br><span class="line">main PROC</span><br><span class="line">mov eax,valu</span><br><span class="line">mov eax,valu[4]</span><br><span class="line">mov eax,valu[8]</span><br><span class="line">mov eax,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://www.cnblogs.com/del/archive/2010/04/04/1704257.html" target="_blank" rel="external nofollow noopener noreferrer">学 Win32 汇编6: 伪指令 DUP 与数组</a></li><li></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础12-–-数组和结构体&quot;&gt;&lt;a href=&quot;#汇编基础12-–-数组和结构体&quot; class=&quot;headerlink&quot; title=&quot;汇编基础12 – 数组和结构体&quot;&gt;&lt;/a&gt;汇编基础12 – 数组和结构体&lt;/h1&gt;&lt;p&gt;数组的声明和使用：&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础09--传送指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8009--%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8009--%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-17T23:27:19.000Z</published>
    <updated>2020-04-18T06:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础09-–-传送指令"><a href="#汇编基础09-–-传送指令" class="headerlink" title="汇编基础09 – 传送指令"></a>汇编基础09 – 传送指令</h1><p>指令：MOVS</p><p>格式：MOVS OPRD1,OPRD2</p><p>功能：把DS:SI指向的存储单元中的数据装入ES:DI指向的存储单元中，然后根据DF标志分别增减SI和DI</p><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov edi ,esp</span><br><span class="line">mov dword ptr ss:[esp],0;给edi清零</span><br><span class="line">mov esi ,ebp</span><br><span class="line">movs dword ptr es:[edi],dword ptr ds:[esi];把esi中的数据存储到edi中</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><blockquote><p>寄存器存储的是内存地址，内存地址里存储的是数据</p></blockquote><p>指令：STOS</p><p>格式：STOS OPRD</p><p>功能：把AL/AX/EAX/RAX等中的数据存储到DI/EDI（这种为目的串的地址）中，每次执行后，会根据DF的值进行自动调整</p><p>把AL或AX中的数据装入ES:DI指向的存储单元，然后根据DF标志增减DI</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax,11223344</span><br><span class="line">mov edi ,esp</span><br><span class="line">stos dword ptr es:[edi]</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><blockquote><p>将EAX的值放到目的地址中</p></blockquote><p>指令：REP</p><p>格式：REP</p><p>功能：重复其后的字符串操作指令。重复前先判断CX是否为0，为0就结束重复，否则CX减1，重复其后的串操作指令。主要用在MOVS和STOS前。一般不用在LODS前。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ecx,4</span><br><span class="line">mov edi ,esp</span><br><span class="line">mov dword ptr ss:[esp],0;给edi清零</span><br><span class="line">mov esi ,ebp</span><br><span class="line">movs dword ptr es:[edi],dword ptr ds:[esi]</span><br><span class="line">rep movsb</span><br><span class="line">mov eax,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><blockquote><p>将esi的4个位传送到edi，每重复一次，往后多传送一位</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础09-–-传送指令&quot;&gt;&lt;a href=&quot;#汇编基础09-–-传送指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础09 – 传送指令&quot;&gt;&lt;/a&gt;汇编基础09 – 传送指令&lt;/h1&gt;&lt;p&gt;指令：MOVS&lt;/p&gt;
&lt;p&gt;格式：MOVS OPR
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础08： JCC 转移指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8008--JCC%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8008--JCC%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-17T22:27:19.000Z</published>
    <updated>2020-04-17T23:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础08：-JCC-转移指令"><a href="#汇编基础08：-JCC-转移指令" class="headerlink" title="汇编基础08： JCC 转移指令"></a>汇编基础08： JCC 转移指令</h1><p>常用的<code>JCC</code>指令</p><ul><li><p><code>JMP</code>：无条件跳转</p></li><li><p><code>JZ/JE</code>：ZF =1,也就是比较结果=0[cmp通过相减的方式进行比较(相等)]时跳转</p></li><li><p><code>JNZ/JNE</code>：ZF =0，也就是比较结果≠0（不相等）时跳转</p></li><li><p><code>JBE/JNA</code>：CF=1/ZF=1  ，低于等于/不高于等于跳转(前面数小于等于后面数)</p></li><li><p><code>JNBE/JA</code>：CF=0/ZF=0  ，不低于等于/高于等于跳转（前面数大于等于后面数）</p></li><li><p><code>JL/JNGE</code>：SF!=OF  ，小于/不大于等于跳转</p></li><li><p><code>JNL/JGE</code>：SF=OF ,不小于/大于等于跳转</p></li></ul><blockquote><p>注意：</p><p>使用JCC指令的时候，前面不要跟影响标志位的指令</p><p>一般JCC和CMP指令一起用</p></blockquote><p>JCC指令表</p><p><img src="1.png" alt></p><p><img src="%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8008--JCC%E6%8C%87%E4%BB%A4/1.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础08：-JCC-转移指令&quot;&gt;&lt;a href=&quot;#汇编基础08：-JCC-转移指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础08： JCC 转移指令&quot;&gt;&lt;/a&gt;汇编基础08： JCC 转移指令&lt;/h1&gt;&lt;p&gt;常用的&lt;code&gt;JCC&lt;/
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>使用电脑控制手机</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/%E4%BD%BF%E7%94%A8%E7%94%B5%E8%84%91%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/%E4%BD%BF%E7%94%A8%E7%94%B5%E8%84%91%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/</id>
    <published>2020-04-17T07:38:51.000Z</published>
    <updated>2020-05-02T03:00:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用电脑控制-Android-手机"><a href="#使用电脑控制-Android-手机" class="headerlink" title="使用电脑控制 Android 手机"></a>使用电脑控制 Android 手机</h2><h3 id="scrcpy（适用Windows、Linux、MacOS）"><a href="#scrcpy（适用Windows、Linux、MacOS）" class="headerlink" title="scrcpy（适用Windows、Linux、MacOS）"></a>scrcpy（适用Windows、Linux、MacOS）</h3><p><strong>scrcpy</strong> 是免费开源的投屏软件，支持将安卓手机屏幕投放在 Windows、macOS、GNU/Linux 上，并可直接借助鼠标在投屏窗口中进行交互和录制。</p><p>项目地址：<a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Genymobile/scrcpy</a></p><p>Windows软件下载：<a href="https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win64-v1.12.1.zip" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Genymobile/scrcpy/releases/download/v1.12.1/scrcpy-win64-v1.12.1.zip</a></p><h4 id="Windows-下-有线连接"><a href="#Windows-下-有线连接" class="headerlink" title="Windows 下 有线连接"></a>Windows 下 有线连接</h4><ol><li>手机开启<code>开发者模式</code></li><li>手机开启<code>USB调试模式</code></li><li>手机和电脑通过数据线连接</li><li>双击软件中的<code>scrcpy.exe</code></li></ol><p>即可完成有线连接下的电脑控制手机（手机投屏电脑）</p><h4 id="Windows-下-无线连接"><a href="#Windows-下-无线连接" class="headerlink" title="Windows 下 无线连接"></a>Windows 下 无线连接</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a.将代码目录定位到 scrcpy 文件夹</span></span><br><span class="line">cd D:\Libraries\Desktop\scrcpy<span class="literal">-win64</span><span class="literal">-v1</span>.<span class="number">12.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b.在手机端开启「开发者选项」及「USB 调试」，然后使用数据线将手机和电脑连接并允许 USB 调试，开启手机端口</span></span><br><span class="line">.\adb tcpip <span class="number">5555</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># c.拔出手机数据线，开始无线投屏。(192.168.2.234 为手机端 ip，需更改)</span></span><br><span class="line">.\adb connect <span class="number">192.168</span>.<span class="number">2.234</span>:<span class="number">5555</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># d.启动 scrcpy.exe</span></span><br><span class="line">.\scrcpy</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://zhuanlan.zhihu.com/p/80264357" target="_blank" rel="external nofollow noopener noreferrer">scrcpy - 手机无线投屏到电脑</a></li><li><a href></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用电脑控制-Android-手机&quot;&gt;&lt;a href=&quot;#使用电脑控制-Android-手机&quot; class=&quot;headerlink&quot; title=&quot;使用电脑控制 Android 手机&quot;&gt;&lt;/a&gt;使用电脑控制 Android 手机&lt;/h2&gt;&lt;h3 id=&quot;scrcp
      
    
    </summary>
    
    
      <category term="计算机使用入门学习" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="手机连接电脑" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/"/>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://kn0sky.com/wiki/test/"/>
    <id>http://kn0sky.com/wiki/test/</id>
    <published>2020-04-14T09:40:50.000Z</published>
    <updated>2020-05-13T10:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href></a></li><li><a href></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>汇编基础07：比较指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8007--%E6%AF%94%E8%BE%83%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8007--%E6%AF%94%E8%BE%83%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-11T07:27:19.000Z</published>
    <updated>2020-04-17T22:40:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础07：比较指令"><a href="#汇编基础07：比较指令" class="headerlink" title="汇编基础07：比较指令"></a>汇编基础07：比较指令</h1><p><strong>CMP</strong></p><p>格式：CMP OPRD1,OPRD2</p><p>功能：对两个数进行相减，进行比较</p><p>作用：影响标志位</p><p>测试代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat,stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,5</span><br><span class="line">mov ebx ,4</span><br><span class="line">cmp eax ,ebx</span><br><span class="line">cmp eax ,5</span><br><span class="line">cmp eax ,ebx</span><br><span class="line">cmp eax ,6</span><br><span class="line">cmp eax ,ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>结果：</p><blockquote><p>当OPDR1 &gt; OPDR2 时：PL=0 ，ZR=0，AC=0，CY=0，PE=0</p><p>当OPDR1 = OPDR2 时：PL=0 ，ZR=1，AC=0，CY=0，PE=1</p><p>当OPDR1 &lt; OPDR2 时：PL=1 ，ZR=0，AC=1，CY=1，PE=1</p></blockquote><p><strong>TEST</strong></p><p>格式：TEST OPRD1,OPRD2</p><p>功能：与AND相同，但结果直接抛弃，对标志位进行重新置位</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础07：比较指令&quot;&gt;&lt;a href=&quot;#汇编基础07：比较指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础07：比较指令&quot;&gt;&lt;/a&gt;汇编基础07：比较指令&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;CMP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;格式：CMP
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>前端入门01--HTML和CSS基础</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A801--HTML&amp;CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A801--HTML&amp;CSS%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-06T17:17:33.000Z</published>
    <updated>2020-04-08T09:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端入门-01-–-HTML和CSS基础"><a href="#前端入门-01-–-HTML和CSS基础" class="headerlink" title="前端入门 01 – HTML和CSS基础"></a>前端入门 01 – HTML和CSS基础</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>编辑器：</p><ul><li>VS Code</li></ul><p>插件：</p><ul><li>City Lights Theme</li><li>Live Server</li><li>prettier</li><li>vim</li></ul><h2 id="HTML-最基础的结构"><a href="#HTML-最基础的结构" class="headerlink" title="HTML 最基础的结构"></a>HTML 最基础的结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="引用-CSS-样式"><a href="#引用-CSS-样式" class="headerlink" title="引用 CSS 样式"></a>引用 CSS 样式</h2><p>有三种方式引用CSS：</p><ul><li>内部引用，CSS比较少时，写在一个文件中看起来方便，或者用在复杂的覆盖层级</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>外部引用，写在单独一个文件时比较方便，使用在CSS较多时，或者用他人CSS时</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"./style.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>内联样式，作为元素的style属性，常用于覆盖其他样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:50px;"</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>内部引用样式优先级顺序取决于写在style标签里的先后顺序，写在后面的会覆盖写在前面的样式</p></blockquote><blockquote><p>三种样式引用优先级顺序为：内联样式 &gt; 内部样式 &gt; 外部样式</p></blockquote><h3 id="样式选择器"><a href="#样式选择器" class="headerlink" title="样式选择器"></a>样式选择器</h3><ul><li>id选择器：选取id属性，例如：<code>#red</code></li><li>类选择器：选取class属性，例如：<code>.red</code></li><li>类型选择器：选取元素类型，例如：<code>div</code></li></ul><h3 id="CSS-基本写法"><a href="#CSS-基本写法" class="headerlink" title="CSS 基本写法"></a>CSS 基本写法</h3><p>基本格式：选择器 + {属性;}</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>属性名称中带有<code>-</code> 的为子属性</p></blockquote><p>让元素横着排列：向CSS中添加flex属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:flex</span></span><br></pre></td></tr></table></figure><p>改变元素轴向分布：使用justify-content属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">居中对齐</span><br><span class="line"><span class="selector-tag">justify-content</span><span class="selector-pseudo">:center</span></span><br></pre></td></tr></table></figure><p>加边框：使用border属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-width</span><span class="selector-pseudo">:10px</span>;</span><br><span class="line"><span class="selector-tag">border-style</span><span class="selector-pseudo">:solid</span>;</span><br></pre></td></tr></table></figure><p>使用flex居中：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><p>待补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前端入门-01-–-HTML和CSS基础&quot;&gt;&lt;a href=&quot;#前端入门-01-–-HTML和CSS基础&quot; class=&quot;headerlink&quot; title=&quot;前端入门 01 – HTML和CSS基础&quot;&gt;&lt;/a&gt;前端入门 01 – HTML和CSS基础&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础06：数据传送指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8006--%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8006--%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-04T15:27:19.000Z</published>
    <updated>2020-04-04T15:28:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础06：数据传送指令"><a href="#汇编基础06：数据传送指令" class="headerlink" title="汇编基础06：数据传送指令"></a>汇编基础06：数据传送指令</h1><h2 id="MOV指令"><a href="#MOV指令" class="headerlink" title="MOV指令"></a>MOV指令</h2><p>格式：MOV OPDR1,OPDR2</p><p>功能：将一个源操作数传送到目的操作数中</p><p>OPDR1为目的操作数，可以使寄存器、存储器、累加器</p><p>OPDR2为源操作数，可以使寄存器、存储器、累加器、立即数</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,eax</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h2 id="LEA指令"><a href="#LEA指令" class="headerlink" title="LEA指令"></a>LEA指令</h2><p>有效地址传送指令</p><p>格式：LEA OPDR1,OPDR2</p><p>功能：将源操作数给出的有效地址传送到制定寄存器中</p><p>OPDR1必须是寄存器</p><blockquote><p>将OPDR2的内存地址给了OPDR1</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">lea eax ,dword ptr ss:[esp-4]</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h2 id="XCHG指令"><a href="#XCHG指令" class="headerlink" title="XCHG指令"></a>XCHG指令</h2><p>数据交换指令</p><p>格式：XCHG OPDR1, OPDR2</p><p>功能，两个操作数的值互换</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xchg eax ,dword ptr ss:[esp-4]</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础06：数据传送指令&quot;&gt;&lt;a href=&quot;#汇编基础06：数据传送指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础06：数据传送指令&quot;&gt;&lt;/a&gt;汇编基础06：数据传送指令&lt;/h1&gt;&lt;h2 id=&quot;MOV指令&quot;&gt;&lt;a href=&quot;#MOV指
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础05：堆栈</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8005--%E5%A0%86%E6%A0%88/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8005--%E5%A0%86%E6%A0%88/</id>
    <published>2020-04-04T14:27:19.000Z</published>
    <updated>2020-04-04T14:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础05：堆栈"><a href="#汇编基础05：堆栈" class="headerlink" title="汇编基础05：堆栈"></a>汇编基础05：堆栈</h1><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><ul><li><p>栈是一种后进先出的存储区域，位于堆栈段中，SS段寄存器描述的就是堆栈段的段地址</p></li><li><p>栈的数据出口位于栈顶，也就是esp寄存器指向的位置</p></li><li><p>栈顶是低位，也就是地址较小的一侧，由ebp寄存器指向栈底，不会改变</p></li></ul><p>作用：</p><ul><li>存储少量数据</li><li>保存寄存器环境</li><li>传递参数</li></ul><h2 id="栈操作"><a href="#栈操作" class="headerlink" title="栈操作"></a>栈操作</h2><p>PUSH：压栈指令，32位汇编首先ESP-4，留出一个空间，然后把要压入栈中的内容压入</p><p>POP：出栈指令，32位汇编首先将栈顶的数据弹出给指定目标，然后ESP+4，清理空间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础05：堆栈&quot;&gt;&lt;a href=&quot;#汇编基础05：堆栈&quot; class=&quot;headerlink&quot; title=&quot;汇编基础05：堆栈&quot;&gt;&lt;/a&gt;汇编基础05：堆栈&lt;/h1&gt;&lt;h2 id=&quot;栈&quot;&gt;&lt;a href=&quot;#栈&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础04：循环</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8004--%E5%BE%AA%E7%8E%AF/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8004--%E5%BE%AA%E7%8E%AF/</id>
    <published>2020-04-04T13:27:19.000Z</published>
    <updated>2020-04-04T14:09:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础04：循环"><a href="#汇编基础04：循环" class="headerlink" title="汇编基础04：循环"></a>汇编基础04：循环</h1><p>循环控制指令：LOOP</p><p>格式：LOOP 标号</p><p>功能：(CX) &lt;–（CX）-1，（CX）&lt;&gt;0，则转移至标号处循环执行，直至(CX)=0，继续执行后续指令</p><blockquote><p> LOOP执行一次，cx-1，如果cx=0，则会无限循环</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,1</span><br><span class="line">mov ecx ,3</span><br><span class="line">s:</span><br><span class="line">add eax ,ebx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>练习：1+2+3+…+100</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,0</span><br><span class="line">mov ecx ,100</span><br><span class="line">s:</span><br><span class="line">add eax ,ecx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>练习：1+2+4+8+….+2147483648(0x80000000)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,0</span><br><span class="line">mov ecx ,32</span><br><span class="line">s:</span><br><span class="line">mov edx ,2</span><br><span class="line">add ebx ,eax</span><br><span class="line">mul edx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础04：循环&quot;&gt;&lt;a href=&quot;#汇编基础04：循环&quot; class=&quot;headerlink&quot; title=&quot;汇编基础04：循环&quot;&gt;&lt;/a&gt;汇编基础04：循环&lt;/h1&gt;&lt;p&gt;循环控制指令：LOOP&lt;/p&gt;
&lt;p&gt;格式：LOOP 标号&lt;/p&gt;
&lt;p&gt;功能：(C
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础03：数学运算&amp;逻辑运算</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8003--%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97&amp;%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8003--%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97&amp;%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/</id>
    <published>2020-04-04T12:27:19.000Z</published>
    <updated>2020-04-04T13:32:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础03：数学运算-amp-逻辑运算"><a href="#汇编基础03：数学运算-amp-逻辑运算" class="headerlink" title="汇编基础03：数学运算&amp;逻辑运算"></a>汇编基础03：数学运算&amp;逻辑运算</h1><h2 id="数字运算"><a href="#数字运算" class="headerlink" title="数字运算"></a>数字运算</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>加法指令：ADD</p><p>格式：ADD OPRD1 ,OPRD2</p><p>功能：两数相加</p><p>加法指令运算结果对CF，SF，OF，PF，ZF，AF都有影响，不允许OPRD1 和OPRD2同时为存储器</p><p>带进位的加法指令：ADC</p><p>功能：OPDR1= OPDR1 + OPDR2 + CF</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,5</span><br><span class="line">mov ebx ,5</span><br><span class="line">add eax ,ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>减法指令：SUB</p><p>格式：SUB OPRD1,OPRD2</p><p>功能：两个操作数相减，从OPDR1中减去OPDR2，结果保存在OPDR1中</p><p>立即数不能用于目的操作数，两个存储器之间的操作数之间不能直接相减，操作数可为8位或16位的无符号数或带符号数</p><p>带借位减法指令：SBB</p><p>格式：SBB OPDR1,OPDR2</p><p>功能：OPDR1 = OPDR1 - OPDR2 -CF</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,15</span><br><span class="line">mov ebx ,5</span><br><span class="line">sub eax ,ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>无符号位乘法指令：MUL</p><p>格式：MUL OPDR</p><p>带符号位乘法指令：IMUL</p><p>格式：IMUL OPDR</p><p>功能：乘法操作</p><p>OPDR位通用寄存器或存储器操作数</p><p>本指令影响标志位：CF，OF</p><blockquote><p>乘法指令是将操作数*EAX，并将结果返回EAX，所以只需要一个操作数</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,2</span><br><span class="line">mov ebx ,5</span><br><span class="line">mul ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="除法【待解决疑问】"><a href="#除法【待解决疑问】" class="headerlink" title="除法【待解决疑问】"></a>除法【待解决疑问】</h3><p>无符号位除法指令：DIV</p><p>格式：DIV OPDR</p><p>有符号位除法指令：IDIV</p><p>格式：IDIV OPDR</p><p>功能：实现两个带符号数的二进制除法运算</p><blockquote><p>16bit的被除数，商放在AL，余数放在AH</p><p>32bit的被除数，商放在AX，余数放在DX</p><p>64bit的被除数，商放在EAX，余数放在EDX</p><p>128bit的被除数，商放在RAX，余数放在RDX</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ax,1000</span><br><span class="line">mov bl,50</span><br><span class="line">div bl</span><br><span class="line">mov ah,ah</span><br><span class="line">mov al,al</span><br><span class="line">mov eax,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><blockquote><p>出现的问题：</p><ol><li>vs2015里面不能看到变量的变化</li></ol></blockquote><hr><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>+1指令：INC</p><p>格式：INC OPDR</p><p>功能：OPDR = OPDE +1</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="自减"><a href="#自减" class="headerlink" title="自减"></a>自减</h3><p>-1指令：DEC</p><p>格式：DEC OPDR</p><p>功能：OPDR = OPDE -1</p><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><h3 id="与"><a href="#与" class="headerlink" title="与"></a>与</h3><p>指令：AND</p><p>格式：AND OPDR1，OPDR2</p><p>影响标志位PF、SF、ZF，使CF = 0 ，OF= 0</p><p>主要用于修改操作数或置某些位为零</p><hr><h3 id="或"><a href="#或" class="headerlink" title="或"></a>或</h3><p>指令：OR</p><p>格式：OR OPDR1，OPDR2</p><hr><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p>指令：XOR</p><p>格式：XOR OPDR1，OPDR2</p><hr><h3 id="非"><a href="#非" class="headerlink" title="非"></a>非</h3><p>指令：NOT</p><p>格式：NOT exp</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础03：数学运算-amp-逻辑运算&quot;&gt;&lt;a href=&quot;#汇编基础03：数学运算-amp-逻辑运算&quot; class=&quot;headerlink&quot; title=&quot;汇编基础03：数学运算&amp;amp;逻辑运算&quot;&gt;&lt;/a&gt;汇编基础03：数学运算&amp;amp;逻辑运算&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础02：第一个程序</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8002--%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8002--%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-04-04T11:27:19.000Z</published>
    <updated>2020-04-04T13:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础02：第一个程序"><a href="#汇编基础02：第一个程序" class="headerlink" title="汇编基础02：第一个程序"></a>汇编基础02：第一个程序</h1><h2 id="Visual-Studio-2015-使用："><a href="#Visual-Studio-2015-使用：" class="headerlink" title="Visual Studio 2015 使用："></a>Visual Studio 2015 使用：</h2><p>创建汇编项目：</p><ul><li>新建项目</li><li>模板 ， Visual C++ ， Win32， 控制台程序 </li><li>名称随便起，确定</li><li>选中项目右键“生成自定义”，选择MASM生成规则</li><li>右击右边的资源管理器中的源文件，添加，新建项，新建一个.asm后缀的新文件</li><li>选中项目右键–属性–链接器–系统–子系统选&lt;控制台(SUBSYSTEM:CONSOLE)&gt;</li><li>选中项目右键–属性–链接器–高级–入口点–填写 “main”</li><li>写代码运行即可</li></ul><p>调试汇编程序：</p><ul><li>右击项目名称，选择重新生成，然后点上面工作栏的本地Windows调试器即可</li><li>可进行断点执行</li><li>通过<code>调试</code>的<code>窗口</code>中可将寄存器显示调出来</li></ul><hr><h2 id="第一个程序："><a href="#第一个程序：" class="headerlink" title="第一个程序："></a>第一个程序：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">;指定指令集，工作在386版本的都行</span><br><span class="line"></span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">;使用的内存模式：flat（win32使用的内存模式）</span><br><span class="line">;函数调用约定：stdcall（用于win32 API）</span><br><span class="line"></span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line">;导入库</span><br><span class="line"></span><br><span class="line">ExitProcess PROTO, dwExitCode : DWORD</span><br><span class="line">MessageBoxA PROTO hWnd : DWORD, lpText : BYTE , lpCaption : BYTE, uType : DWORD</span><br><span class="line">;声明的win32API的原型</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">Number DWORD 0</span><br><span class="line">text db &quot;hello world&quot;,0</span><br><span class="line">;数据段，声明多大整多大</span><br><span class="line">;定义数据，可读可写，程序直接放在内存里</span><br><span class="line">;.data?：不会占用exe的大小，是程序运行的时候申请的</span><br><span class="line">;.const：常量，可读不可写</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;函数体，可以加参数</span><br><span class="line">mov eax ,5</span><br><span class="line">mov ebx ,6</span><br><span class="line">add eax ,ebx</span><br><span class="line">add eax ,Number</span><br><span class="line">push 0</span><br><span class="line">push offset text</span><br><span class="line">push offset text</span><br><span class="line">push 0</span><br><span class="line">call MessageBoxA</span><br><span class="line">sub esp ,16</span><br><span class="line">call ExitProcess</span><br><span class="line">main ENDP</span><br><span class="line">;结束函数</span><br><span class="line">END main</span><br><span class="line">;结束程序流程</span><br><span class="line"></span><br><span class="line">;代码段，所有指令都要写在代码段中</span><br><span class="line">;数据段不可执行，代码段可执行</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础02：第一个程序&quot;&gt;&lt;a href=&quot;#汇编基础02：第一个程序&quot; class=&quot;headerlink&quot; title=&quot;汇编基础02：第一个程序&quot;&gt;&lt;/a&gt;汇编基础02：第一个程序&lt;/h1&gt;&lt;h2 id=&quot;Visual-Studio-2015-使用：&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
