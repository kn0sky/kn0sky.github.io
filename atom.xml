<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kn0sky&#39;wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kn0sky.com/"/>
  <updated>2020-04-14T09:41:03.000Z</updated>
  <id>http://kn0sky.com/</id>
  
  <author>
    <name>kn0sky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="http://kn0sky.com/wiki/test/"/>
    <id>http://kn0sky.com/wiki/test/</id>
    <published>2020-04-14T09:40:50.000Z</published>
    <updated>2020-04-14T09:41:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href></a></li><li><a href></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>汇编基础07：比较指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8007--%E6%AF%94%E8%BE%83%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8007--%E6%AF%94%E8%BE%83%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-11T07:27:19.000Z</published>
    <updated>2020-04-12T05:42:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础07：比较指令"><a href="#汇编基础07：比较指令" class="headerlink" title="汇编基础07：比较指令"></a>汇编基础07：比较指令</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础07：比较指令&quot;&gt;&lt;a href=&quot;#汇编基础07：比较指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础07：比较指令&quot;&gt;&lt;/a&gt;汇编基础07：比较指令&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>前端入门01--HTML和CSS基础</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A801--HTML&amp;CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A801--HTML&amp;CSS%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-06T17:17:33.000Z</published>
    <updated>2020-04-08T09:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端入门-01-–-HTML和CSS基础"><a href="#前端入门-01-–-HTML和CSS基础" class="headerlink" title="前端入门 01 – HTML和CSS基础"></a>前端入门 01 – HTML和CSS基础</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>编辑器：</p><ul><li>VS Code</li></ul><p>插件：</p><ul><li>City Lights Theme</li><li>Live Server</li><li>prettier</li><li>vim</li></ul><h2 id="HTML-最基础的结构"><a href="#HTML-最基础的结构" class="headerlink" title="HTML 最基础的结构"></a>HTML 最基础的结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="引用-CSS-样式"><a href="#引用-CSS-样式" class="headerlink" title="引用 CSS 样式"></a>引用 CSS 样式</h2><p>有三种方式引用CSS：</p><ul><li>内部引用，CSS比较少时，写在一个文件中看起来方便，或者用在复杂的覆盖层级</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>外部引用，写在单独一个文件时比较方便，使用在CSS较多时，或者用他人CSS时</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"./style.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>内联样式，作为元素的style属性，常用于覆盖其他样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:50px;"</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>内部引用样式优先级顺序取决于写在style标签里的先后顺序，写在后面的会覆盖写在前面的样式</p></blockquote><blockquote><p>三种样式引用优先级顺序为：内联样式 &gt; 内部样式 &gt; 外部样式</p></blockquote><h3 id="样式选择器"><a href="#样式选择器" class="headerlink" title="样式选择器"></a>样式选择器</h3><ul><li>id选择器：选取id属性，例如：<code>#red</code></li><li>类选择器：选取class属性，例如：<code>.red</code></li><li>类型选择器：选取元素类型，例如：<code>div</code></li></ul><h3 id="CSS-基本写法"><a href="#CSS-基本写法" class="headerlink" title="CSS 基本写法"></a>CSS 基本写法</h3><p>基本格式：选择器 + {属性;}</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>属性名称中带有<code>-</code> 的为子属性</p></blockquote><p>让元素横着排列：向CSS中添加flex属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:flex</span></span><br></pre></td></tr></table></figure><p>改变元素轴向分布：使用justify-content属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">居中对齐</span><br><span class="line"><span class="selector-tag">justify-content</span><span class="selector-pseudo">:center</span></span><br></pre></td></tr></table></figure><p>加边框：使用border属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-width</span><span class="selector-pseudo">:10px</span>;</span><br><span class="line"><span class="selector-tag">border-style</span><span class="selector-pseudo">:solid</span>;</span><br></pre></td></tr></table></figure><p>使用flex居中：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><p>待补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前端入门-01-–-HTML和CSS基础&quot;&gt;&lt;a href=&quot;#前端入门-01-–-HTML和CSS基础&quot; class=&quot;headerlink&quot; title=&quot;前端入门 01 – HTML和CSS基础&quot;&gt;&lt;/a&gt;前端入门 01 – HTML和CSS基础&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前端入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础06：数据传送指令</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8006--%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8006--%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-04T15:27:19.000Z</published>
    <updated>2020-04-04T15:28:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础06：数据传送指令"><a href="#汇编基础06：数据传送指令" class="headerlink" title="汇编基础06：数据传送指令"></a>汇编基础06：数据传送指令</h1><h2 id="MOV指令"><a href="#MOV指令" class="headerlink" title="MOV指令"></a>MOV指令</h2><p>格式：MOV OPDR1,OPDR2</p><p>功能：将一个源操作数传送到目的操作数中</p><p>OPDR1为目的操作数，可以使寄存器、存储器、累加器</p><p>OPDR2为源操作数，可以使寄存器、存储器、累加器、立即数</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,eax</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h2 id="LEA指令"><a href="#LEA指令" class="headerlink" title="LEA指令"></a>LEA指令</h2><p>有效地址传送指令</p><p>格式：LEA OPDR1,OPDR2</p><p>功能：将源操作数给出的有效地址传送到制定寄存器中</p><p>OPDR1必须是寄存器</p><blockquote><p>将OPDR2的内存地址给了OPDR1</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">lea eax ,dword ptr ss:[esp-4]</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h2 id="XCHG指令"><a href="#XCHG指令" class="headerlink" title="XCHG指令"></a>XCHG指令</h2><p>数据交换指令</p><p>格式：XCHG OPDR1, OPDR2</p><p>功能，两个操作数的值互换</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xchg eax ,dword ptr ss:[esp-4]</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础06：数据传送指令&quot;&gt;&lt;a href=&quot;#汇编基础06：数据传送指令&quot; class=&quot;headerlink&quot; title=&quot;汇编基础06：数据传送指令&quot;&gt;&lt;/a&gt;汇编基础06：数据传送指令&lt;/h1&gt;&lt;h2 id=&quot;MOV指令&quot;&gt;&lt;a href=&quot;#MOV指
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门01--LED流水灯</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A801--LED%E6%B5%81%E6%B0%B4%E7%81%AF/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A801--LED%E6%B5%81%E6%B0%B4%E7%81%AF/</id>
    <published>2020-04-04T15:27:19.000Z</published>
    <updated>2020-04-07T10:31:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="51单片机入门01–LED流水灯"><a href="#51单片机入门01–LED流水灯" class="headerlink" title="51单片机入门01–LED流水灯"></a>51单片机入门01–LED流水灯</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><ul><li>Protues</li><li>Keil</li></ul><h2 id="电路图"><a href="#电路图" class="headerlink" title="电路图"></a>电路图</h2><p><img src="51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A801--LED%E6%B5%81%E6%B0%B4%E7%81%AF%5C01.png" alt> </p><p><img src="01.png" alt></p><p>能流过LED的电流大概是20mA，所以需要加大于250Ω的电阻</p><p>仿真软件单片机内部自带复位和时钟电路</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>延时程序</strong>：通过空执行循环来达到延时的效果，120次大概是1ms</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span>  <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;&lt;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>LED流水灯程序：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;i);<span class="comment">//0000 0001 --&gt; 0000 0010  --&gt; 0000 0100</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">P1=<span class="number">0x01</span>&lt;&lt;i;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">P1 = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>led1函数为共阳的8个led进行流水灯操作</p><p>led2函数为共阴的8个led进行流水灯操作</p><p>led2函数执行完之后，P1.7端口依然处于高电平，此处用<code>P1 = 0x00；</code>来熄灭</p></blockquote><hr><p><strong>完整代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"reg51.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span>  <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;i);<span class="comment">//0000 0001 --&gt; 0000 0010  --&gt; 0000 0100</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">P1=<span class="number">0x01</span>&lt;&lt;i;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">P1 = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">P1 = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">led1();</span><br><span class="line">led2();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>主程序里，先将与P1连接的灯全部熄灭再进行16个led的流水灯操作比较好看</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;51单片机入门01–LED流水灯&quot;&gt;&lt;a href=&quot;#51单片机入门01–LED流水灯&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门01–LED流水灯&quot;&gt;&lt;/a&gt;51单片机入门01–LED流水灯&lt;/h1&gt;&lt;h2 id=&quot;实验环境&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础05：堆栈</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8005--%E5%A0%86%E6%A0%88/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8005--%E5%A0%86%E6%A0%88/</id>
    <published>2020-04-04T14:27:19.000Z</published>
    <updated>2020-04-04T14:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础05：堆栈"><a href="#汇编基础05：堆栈" class="headerlink" title="汇编基础05：堆栈"></a>汇编基础05：堆栈</h1><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><ul><li><p>栈是一种后进先出的存储区域，位于堆栈段中，SS段寄存器描述的就是堆栈段的段地址</p></li><li><p>栈的数据出口位于栈顶，也就是esp寄存器指向的位置</p></li><li><p>栈顶是低位，也就是地址较小的一侧，由ebp寄存器指向栈底，不会改变</p></li></ul><p>作用：</p><ul><li>存储少量数据</li><li>保存寄存器环境</li><li>传递参数</li></ul><h2 id="栈操作"><a href="#栈操作" class="headerlink" title="栈操作"></a>栈操作</h2><p>PUSH：压栈指令，32位汇编首先ESP-4，留出一个空间，然后把要压入栈中的内容压入</p><p>POP：出栈指令，32位汇编首先将栈顶的数据弹出给指定目标，然后ESP+4，清理空间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础05：堆栈&quot;&gt;&lt;a href=&quot;#汇编基础05：堆栈&quot; class=&quot;headerlink&quot; title=&quot;汇编基础05：堆栈&quot;&gt;&lt;/a&gt;汇编基础05：堆栈&lt;/h1&gt;&lt;h2 id=&quot;栈&quot;&gt;&lt;a href=&quot;#栈&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础04：循环</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8004--%E5%BE%AA%E7%8E%AF/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8004--%E5%BE%AA%E7%8E%AF/</id>
    <published>2020-04-04T13:27:19.000Z</published>
    <updated>2020-04-04T14:09:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础04：循环"><a href="#汇编基础04：循环" class="headerlink" title="汇编基础04：循环"></a>汇编基础04：循环</h1><p>循环控制指令：LOOP</p><p>格式：LOOP 标号</p><p>功能：(CX) &lt;–（CX）-1，（CX）&lt;&gt;0，则转移至标号处循环执行，直至(CX)=0，继续执行后续指令</p><blockquote><p> LOOP执行一次，cx-1，如果cx=0，则会无限循环</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,1</span><br><span class="line">mov ecx ,3</span><br><span class="line">s:</span><br><span class="line">add eax ,ebx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>练习：1+2+3+…+100</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,0</span><br><span class="line">mov ecx ,100</span><br><span class="line">s:</span><br><span class="line">add eax ,ecx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>练习：1+2+4+8+….+2147483648(0x80000000)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,1</span><br><span class="line">mov ebx ,0</span><br><span class="line">mov ecx ,32</span><br><span class="line">s:</span><br><span class="line">mov edx ,2</span><br><span class="line">add ebx ,eax</span><br><span class="line">mul edx</span><br><span class="line">loop s</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础04：循环&quot;&gt;&lt;a href=&quot;#汇编基础04：循环&quot; class=&quot;headerlink&quot; title=&quot;汇编基础04：循环&quot;&gt;&lt;/a&gt;汇编基础04：循环&lt;/h1&gt;&lt;p&gt;循环控制指令：LOOP&lt;/p&gt;
&lt;p&gt;格式：LOOP 标号&lt;/p&gt;
&lt;p&gt;功能：(C
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础03：数学运算&amp;逻辑运算</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8003--%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97&amp;%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8003--%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97&amp;%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/</id>
    <published>2020-04-04T12:27:19.000Z</published>
    <updated>2020-04-04T13:32:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础03：数学运算-amp-逻辑运算"><a href="#汇编基础03：数学运算-amp-逻辑运算" class="headerlink" title="汇编基础03：数学运算&amp;逻辑运算"></a>汇编基础03：数学运算&amp;逻辑运算</h1><h2 id="数字运算"><a href="#数字运算" class="headerlink" title="数字运算"></a>数字运算</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>加法指令：ADD</p><p>格式：ADD OPRD1 ,OPRD2</p><p>功能：两数相加</p><p>加法指令运算结果对CF，SF，OF，PF，ZF，AF都有影响，不允许OPRD1 和OPRD2同时为存储器</p><p>带进位的加法指令：ADC</p><p>功能：OPDR1= OPDR1 + OPDR2 + CF</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,5</span><br><span class="line">mov ebx ,5</span><br><span class="line">add eax ,ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>减法指令：SUB</p><p>格式：SUB OPRD1,OPRD2</p><p>功能：两个操作数相减，从OPDR1中减去OPDR2，结果保存在OPDR1中</p><p>立即数不能用于目的操作数，两个存储器之间的操作数之间不能直接相减，操作数可为8位或16位的无符号数或带符号数</p><p>带借位减法指令：SBB</p><p>格式：SBB OPDR1,OPDR2</p><p>功能：OPDR1 = OPDR1 - OPDR2 -CF</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,15</span><br><span class="line">mov ebx ,5</span><br><span class="line">sub eax ,ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>无符号位乘法指令：MUL</p><p>格式：MUL OPDR</p><p>带符号位乘法指令：IMUL</p><p>格式：IMUL OPDR</p><p>功能：乘法操作</p><p>OPDR位通用寄存器或存储器操作数</p><p>本指令影响标志位：CF，OF</p><blockquote><p>乘法指令是将操作数*EAX，并将结果返回EAX，所以只需要一个操作数</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov eax ,2</span><br><span class="line">mov ebx ,5</span><br><span class="line">mul ebx</span><br><span class="line">mov eax ,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><hr><h3 id="除法【待解决疑问】"><a href="#除法【待解决疑问】" class="headerlink" title="除法【待解决疑问】"></a>除法【待解决疑问】</h3><p>无符号位除法指令：DIV</p><p>格式：DIV OPDR</p><p>有符号位除法指令：IDIV</p><p>格式：IDIV OPDR</p><p>功能：实现两个带符号数的二进制除法运算</p><blockquote><p>16bit的被除数，商放在AL，余数放在AH</p><p>32bit的被除数，商放在AX，余数放在DX</p><p>64bit的被除数，商放在EAX，余数放在EDX</p><p>128bit的被除数，商放在RAX，余数放在RDX</p></blockquote><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ax,1000</span><br><span class="line">mov bl,50</span><br><span class="line">div bl</span><br><span class="line">mov ah,ah</span><br><span class="line">mov al,al</span><br><span class="line">mov eax,eax</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><blockquote><p>出现的问题：</p><ol><li>vs2015里面不能看到变量的变化</li></ol></blockquote><hr><h3 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h3><p>+1指令：INC</p><p>格式：INC OPDR</p><p>功能：OPDR = OPDE +1</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="自减"><a href="#自减" class="headerlink" title="自减"></a>自减</h3><p>-1指令：DEC</p><p>格式：DEC OPDR</p><p>功能：OPDR = OPDE -1</p><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><h3 id="与"><a href="#与" class="headerlink" title="与"></a>与</h3><p>指令：AND</p><p>格式：AND OPDR1，OPDR2</p><p>影响标志位PF、SF、ZF，使CF = 0 ，OF= 0</p><p>主要用于修改操作数或置某些位为零</p><hr><h3 id="或"><a href="#或" class="headerlink" title="或"></a>或</h3><p>指令：OR</p><p>格式：OR OPDR1，OPDR2</p><hr><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p>指令：XOR</p><p>格式：XOR OPDR1，OPDR2</p><hr><h3 id="非"><a href="#非" class="headerlink" title="非"></a>非</h3><p>指令：NOT</p><p>格式：NOT exp</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础03：数学运算-amp-逻辑运算&quot;&gt;&lt;a href=&quot;#汇编基础03：数学运算-amp-逻辑运算&quot; class=&quot;headerlink&quot; title=&quot;汇编基础03：数学运算&amp;amp;逻辑运算&quot;&gt;&lt;/a&gt;汇编基础03：数学运算&amp;amp;逻辑运算&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础02：第一个程序</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8002--%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8002--%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-04-04T11:27:19.000Z</published>
    <updated>2020-04-04T13:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础02：第一个程序"><a href="#汇编基础02：第一个程序" class="headerlink" title="汇编基础02：第一个程序"></a>汇编基础02：第一个程序</h1><h2 id="Visual-Studio-2015-使用："><a href="#Visual-Studio-2015-使用：" class="headerlink" title="Visual Studio 2015 使用："></a>Visual Studio 2015 使用：</h2><p>创建汇编项目：</p><ul><li>新建项目</li><li>模板 ， Visual C++ ， Win32， 控制台程序 </li><li>名称随便起，确定</li><li>选中项目右键“生成自定义”，选择MASM生成规则</li><li>右击右边的资源管理器中的源文件，添加，新建项，新建一个.asm后缀的新文件</li><li>选中项目右键–属性–链接器–系统–子系统选&lt;控制台(SUBSYSTEM:CONSOLE)&gt;</li><li>选中项目右键–属性–链接器–高级–入口点–填写 “main”</li><li>写代码运行即可</li></ul><p>调试汇编程序：</p><ul><li>右击项目名称，选择重新生成，然后点上面工作栏的本地Windows调试器即可</li><li>可进行断点执行</li><li>通过<code>调试</code>的<code>窗口</code>中可将寄存器显示调出来</li></ul><hr><h2 id="第一个程序："><a href="#第一个程序：" class="headerlink" title="第一个程序："></a>第一个程序：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">;指定指令集，工作在386版本的都行</span><br><span class="line"></span><br><span class="line">.MODEL flat, stdcall</span><br><span class="line">;使用的内存模式：flat（win32使用的内存模式）</span><br><span class="line">;函数调用约定：stdcall（用于win32 API）</span><br><span class="line"></span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line">;导入库</span><br><span class="line"></span><br><span class="line">ExitProcess PROTO, dwExitCode : DWORD</span><br><span class="line">MessageBoxA PROTO hWnd : DWORD, lpText : BYTE , lpCaption : BYTE, uType : DWORD</span><br><span class="line">;声明的win32API的原型</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">Number DWORD 0</span><br><span class="line">text db &quot;hello world&quot;,0</span><br><span class="line">;数据段，声明多大整多大</span><br><span class="line">;定义数据，可读可写，程序直接放在内存里</span><br><span class="line">;.data?：不会占用exe的大小，是程序运行的时候申请的</span><br><span class="line">;.const：常量，可读不可写</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;函数体，可以加参数</span><br><span class="line">mov eax ,5</span><br><span class="line">mov ebx ,6</span><br><span class="line">add eax ,ebx</span><br><span class="line">add eax ,Number</span><br><span class="line">push 0</span><br><span class="line">push offset text</span><br><span class="line">push offset text</span><br><span class="line">push 0</span><br><span class="line">call MessageBoxA</span><br><span class="line">sub esp ,16</span><br><span class="line">call ExitProcess</span><br><span class="line">main ENDP</span><br><span class="line">;结束函数</span><br><span class="line">END main</span><br><span class="line">;结束程序流程</span><br><span class="line"></span><br><span class="line">;代码段，所有指令都要写在代码段中</span><br><span class="line">;数据段不可执行，代码段可执行</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础02：第一个程序&quot;&gt;&lt;a href=&quot;#汇编基础02：第一个程序&quot; class=&quot;headerlink&quot; title=&quot;汇编基础02：第一个程序&quot;&gt;&lt;/a&gt;汇编基础02：第一个程序&lt;/h1&gt;&lt;h2 id=&quot;Visual-Studio-2015-使用：&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>常用工具备忘录</title>
    <link href="http://kn0sky.com/wiki/%E5%A4%87%E5%BF%98%E5%BD%95/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/"/>
    <id>http://kn0sky.com/wiki/%E5%A4%87%E5%BF%98%E5%BD%95/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</id>
    <published>2020-04-04T03:21:13.000Z</published>
    <updated>2020-04-04T03:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用工具备忘录"><a href="#常用工具备忘录" class="headerlink" title="常用工具备忘录"></a>常用工具备忘录</h2><h3 id="编程类"><a href="#编程类" class="headerlink" title="编程类"></a>编程类</h3><h4 id="Visual-Studio-2015"><a href="#Visual-Studio-2015" class="headerlink" title="Visual Studio 2015"></a>Visual Studio 2015</h4><p>适用平台：Windows</p><p>下载地址：<a href="https://msdn.itellyou.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://msdn.itellyou.cn/</a></p><p>选择功能：在默认配置的基础上，</p><ul><li>勾选<code>编程语言中 的 Visual C++</code>和<code>针对 Visual Studio 的 Python 工具</code></li><li>勾选<code>通用Windows应用开发工具</code></li></ul><hr><h3 id="做图类："><a href="#做图类：" class="headerlink" title="做图类："></a>做图类：</h3><h4 id="ProcessOn"><a href="#ProcessOn" class="headerlink" title="ProcessOn"></a>ProcessOn</h4><p>适用平台：全平台</p><p>Web在线工具：<a href="https://www.processon.com/" target="_blank" rel="external nofollow noopener noreferrer">https://www.processon.com/</a></p><hr><h3 id="高效办公类："><a href="#高效办公类：" class="headerlink" title="高效办公类："></a>高效办公类：</h3><h4 id="Spackdesk"><a href="#Spackdesk" class="headerlink" title="Spackdesk"></a>Spackdesk</h4><p>适用平台：Windows，macOS</p><p>官网：<a href="https://spacedesk.net/" target="_blank" rel="external nofollow noopener noreferrer">https://spacedesk.net/</a></p><p>简介：Windows下的软件扩展桌面解决方案</p><h4 id="Microsoft-To-Do"><a href="#Microsoft-To-Do" class="headerlink" title="Microsoft To Do"></a>Microsoft To Do</h4><p>适用平台：Windows，Android</p><p>下载地址：Microsoft应用商店</p><p>简介：挺好用的清单软件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用工具备忘录&quot;&gt;&lt;a href=&quot;#常用工具备忘录&quot; class=&quot;headerlink&quot; title=&quot;常用工具备忘录&quot;&gt;&lt;/a&gt;常用工具备忘录&lt;/h2&gt;&lt;h3 id=&quot;编程类&quot;&gt;&lt;a href=&quot;#编程类&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="备忘录" scheme="http://kn0sky.com/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>内存</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E5%86%85%E5%AD%98/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E5%86%85%E5%AD%98/</id>
    <published>2020-04-02T12:27:19.000Z</published>
    <updated>2020-04-04T03:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>冯诺依曼中用来存储程序和数据的部件叫做存储器，存储器分为主存储器（内存储器）和辅助存储器，主存储器也叫内存</p><h3 id="内存的寻址范围"><a href="#内存的寻址范围" class="headerlink" title="内存的寻址范围"></a>内存的寻址范围</h3><p>32位系统内存的寻址范围是0x00000000-0xFFFFFFFF</p><p>最大寻址范围：0xFFFFFFFF+1(4294967296)</p><blockquote><p>1 Byte = 8 bit</p><p>1 KB = 1024 Byte</p><p>1 MB = 1024 KB</p><p>1 GB = 1024 MB</p></blockquote><p>4294967296 Byte = 4 GB （32位系统最大内存是4 GB） </p><p>64位系统内存寻址范围：0x0000000000000000 – 0xFFFFFFFFFFFFFFFF</p><h3 id="内存和寄存器的区别"><a href="#内存和寄存器的区别" class="headerlink" title="内存和寄存器的区别"></a>内存和寄存器的区别</h3><p>内存：数量庞大，便宜，速度较慢</p><p>寄存器：数量少，昂贵，速度极快，位于CPU内部</p><h3 id="内存的5种表现形式"><a href="#内存的5种表现形式" class="headerlink" title="内存的5种表现形式"></a>内存的5种表现形式</h3><p>立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX,DWORD PTR DS:0x????????]</span><br></pre></td></tr></table></figure><p>把后面这个内存给EAX</p><hr><p>寄存器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV EBX ,0x????????</span><br><span class="line">MOV EAX ,DWORD PTR DS:[EBX]</span><br></pre></td></tr></table></figure><hr><p>寄存器+立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV EBX ,0x????????</span><br><span class="line">MOV EAX ,DWORD PTR DS:[EBX + 4]</span><br></pre></td></tr></table></figure><hr><p>比例因子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[REG + REG * &#123;1,2,4,8&#125;]</span><br></pre></td></tr></table></figure><hr><p>数组元素地址 = 数组首地址 + 元素索引 * 数组元素占用空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX ,0x????????</span><br><span class="line">MOV EBX ,0x2</span><br><span class="line">MOV ECX ,DWORD PTR DS:[EAX+EBX*4]</span><br></pre></td></tr></table></figure><hr><p>比例因子+立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX,0x????????</span><br><span class="line">MOV EBX,0x2</span><br><span class="line">MOV ECX,DWORDPTRDS:[EAX + EBX*4 +1]</span><br></pre></td></tr></table></figure><h2 id="数据存储模式"><a href="#数据存储模式" class="headerlink" title="数据存储模式"></a>数据存储模式</h2><p>大端序：数据高位在内存低位，数据低位在内存高位，常用于ARM架构</p><p>小端序：数据高位在内存高位，数据低位在内存低位，常用于x86、AMD64架构</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;内存&quot;&gt;&lt;a href=&quot;#内存&quot; class=&quot;headerlink&quot; title=&quot;内存&quot;&gt;&lt;/a&gt;内存&lt;/h2&gt;&lt;p&gt;冯诺依曼中用来存储程序和数据的部件叫做存储器，存储器分为主存储器（内存储器）和辅助存储器，主存储器也叫内存&lt;/p&gt;
&lt;h3 id=&quot;内存的寻
      
    
    </summary>
    
    
      <category term="计算机使用基础概念" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>寄存器逻辑结构</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E5%AF%84%E5%AD%98%E5%99%A8%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E5%AF%84%E5%AD%98%E5%99%A8%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84/</id>
    <published>2020-03-31T05:21:13.000Z</published>
    <updated>2020-03-31T05:51:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="寄存器逻辑结构"><a href="#寄存器逻辑结构" class="headerlink" title="寄存器逻辑结构"></a>寄存器逻辑结构</h1><p>EAX：累加器，操作数和结果数据累加器，返回值运算结果一般都存在这里</p><blockquote><p>64:<code>RAX</code></p><p>32:<code>EAX</code></p><p>16:<code>AX</code></p><p>8:<code>AH+AL</code></p></blockquote><hr><p>EBX：基地址，DS段的数据指针，在内存寻址的时候存放基地址</p><blockquote><p>64:<code>RBX</code></p><p>32:<code>EBX</code></p><p>16:<code>BX</code></p><p>8:<code>BH+BL</code></p></blockquote><hr><p>ECX：计数器，字符串和循环操作的计数器</p><blockquote><p>64:<code>RCX</code></p><p>32:<code>ECX</code></p><p>16:<code>CX</code></p><p>8:<code>CH+CL</code></p></blockquote><hr><p>EDX：存储部分乘法结果和部分除法被除数</p><blockquote><p>64:<code>RDX</code></p><p>32:<code>EDX</code></p><p>16:<code>DX</code></p><p>8:<code>DH+DL</code></p></blockquote><hr><p>EBP：基址指针，SS段的数据指针</p><blockquote><p>64:<code>RBP</code></p><p>32:<code>EBP</code></p><p>16:<code>BP</code></p></blockquote><hr><p>ESP：栈帧指针，指向栈顶，也叫栈顶指针</p><blockquote><p>64:<code>RSP</code></p><p>32:<code>ESP</code></p><p>16:<code>SP</code></p></blockquote><hr><p>EDI：字符串操作的目标指针，ES段的数据指针</p><blockquote><p>64:<code>RDI</code></p><p>32:<code>EDI</code></p><p>16:<code>DI</code></p></blockquote><hr><p>ESI：字符串操作的原始指针，SS段的数据指针</p><blockquote><p>64:<code>RSI</code></p><p>32:<code>ESI</code></p><p>16:<code>SI</code></p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;寄存器逻辑结构&quot;&gt;&lt;a href=&quot;#寄存器逻辑结构&quot; class=&quot;headerlink&quot; title=&quot;寄存器逻辑结构&quot;&gt;&lt;/a&gt;寄存器逻辑结构&lt;/h1&gt;&lt;p&gt;EAX：累加器，操作数和结果数据累加器，返回值运算结果一般都存在这里&lt;/p&gt;
&lt;blockquote
      
    
    </summary>
    
    
      <category term="计算机使用基础概念" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础01：基础概念</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8001--%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8001--%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2020-03-30T06:27:19.000Z</published>
    <updated>2020-04-07T10:32:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础01：基础概念"><a href="#汇编基础01：基础概念" class="headerlink" title="汇编基础01：基础概念"></a>汇编基础01：基础概念</h1><h2 id="16-32-64位汇编的区别"><a href="#16-32-64位汇编的区别" class="headerlink" title="16/32/64位汇编的区别"></a>16/32/64位汇编的区别</h2><ul><li>16位汇编：实模式，16位处理器内部，最多处理存储长度为16位</li><li>32位汇编：保护模式，32位处理器内部，最多处理存储长度为32位</li><li>64位汇编：保护模式，64位处理器内部，最多处理存储长度为64位</li></ul><blockquote><p>16位处理器只能运行16位汇编，</p><p>64位处理器可以运行64和32位汇编，</p><p>32位处理器不能运行16位汇编，</p><p>因为模式不一样</p></blockquote><h2 id="基本执行环境"><a href="#基本执行环境" class="headerlink" title="基本执行环境"></a>基本执行环境</h2><p>32位：</p><ul><li><p>8个32位通用寄存器</p></li><li><p>标志寄存器：EFLAGS</p></li><li><p>指令指针寄存器：EIP（记录下一条执行的地址）</p></li></ul><p>64位：</p><ul><li><p>8个64位通用寄存器</p></li><li><p>标志寄存器：RFLAGS</p></li><li><p>指令指针寄存器：RIP（记录下一条执行的地址）</p></li></ul><h3 id="EFLAGS-寄存器"><a href="#EFLAGS-寄存器" class="headerlink" title="EFLAGS 寄存器"></a>EFLAGS 寄存器</h3><p>包含了独立的二进制位，用于控制CPU操作，或反应CPU执行的结果</p><p><img src="%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8001--%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%5CEFLAGS.png" alt></p><p><img src="EFLAGS.png" alt></p><h3 id="MMX-寄存器"><a href="#MMX-寄存器" class="headerlink" title="MMX 寄存器"></a>MMX 寄存器</h3><p>MMX 寄存器实际上是浮点单元中使用的同样寄存器的别名</p><h3 id="XMM-寄存器"><a href="#XMM-寄存器" class="headerlink" title="XMM 寄存器"></a>XMM 寄存器</h3><p>SIMD的扩展指令集</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li><p>Ollydbg</p></li><li><p>Visual Studio 2015</p><blockquote><ol><li>新建空项目</li><li>选中项目右键“生成自定义”，选择MASM生成规则</li><li>新建一个.asm后缀的新文件</li><li>选中项目右键–属性–链接器–系统–子系统选&lt;控制台(SUBSYSTEM:CONSOLE)&gt;</li><li>选中项目右键–属性–链接器–高级–入口点–填写 “main”</li></ol></blockquote></li></ul><h2 id="寄存器逻辑结构"><a href="#寄存器逻辑结构" class="headerlink" title="寄存器逻辑结构"></a>寄存器逻辑结构</h2><p>EAX：累加器，操作数和结果数据累加器，返回值运算结果一般都存在这里</p><blockquote><p>64:<code>RAX</code></p><p>32:<code>EAX</code></p><p>16:<code>AX</code></p><p>8:<code>AH+AL</code></p></blockquote><p>EBX：基地址，DS段的数据指针，在内存寻址的时候存放基地址</p><blockquote><p>64:<code>RBX</code></p><p>32:<code>EBX</code></p><p>16:<code>BX</code></p><p>8:<code>BH+BL</code></p></blockquote><p>ECX：计数器，字符串和循环操作的计数器</p><blockquote><p>64:<code>RCX</code></p><p>32:<code>ECX</code></p><p>16:<code>CX</code></p><p>8:<code>CH+CL</code></p></blockquote><p>EDX：存储部分乘法结果和部分除法被除数</p><blockquote><p>64:<code>RDX</code></p><p>32:<code>EDX</code></p><p>16:<code>DX</code></p><p>8:<code>DH+DL</code></p></blockquote><p>EBP：基址指针，SS段的数据指针</p><blockquote><p>64:<code>RBP</code></p><p>32:<code>EBP</code></p><p>16:<code>BP</code></p></blockquote><p>ESP：栈帧指针，指向栈顶，也叫栈顶指针</p><blockquote><p>64:<code>RSP</code></p><p>32:<code>ESP</code></p><p>16:<code>SP</code></p></blockquote><p>EDI：字符串操作的目标指针，ES段的数据指针</p><blockquote><p>64:<code>RDI</code></p><p>32:<code>EDI</code></p><p>16:<code>DI</code></p></blockquote><p>ESI：字符串操作的原始指针，SS段的数据指针</p><blockquote><p>64:<code>RSI</code></p><p>32:<code>ESI</code></p><p>16:<code>SI</code></p></blockquote><h2 id="冯·诺依曼体系结构"><a href="#冯·诺依曼体系结构" class="headerlink" title="冯·诺依曼体系结构"></a>冯·诺依曼体系结构</h2><p>分为5个部分</p><p>输入设备–存储器–输出设备，运算器–控制器</p><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>冯诺依曼中用来存储程序和数据的部件叫做存储器，存储器分为主存储器（内存储器）和辅助存储器，主存储器也叫内存</p><h3 id="内存的寻址范围"><a href="#内存的寻址范围" class="headerlink" title="内存的寻址范围"></a>内存的寻址范围</h3><p>32位系统内存的寻址范围是0x00000000-0xFFFFFFFF</p><p>最大寻址范围：0xFFFFFFFF+1(4294967296)</p><blockquote><p>1 Byte = 8 bit</p><p>1 KB = 1024 Byte</p><p>1 MB = 1024 KB</p><p>1 GB = 1024 MB</p></blockquote><p>4294967296 Byte = 4 GB （32位系统最大内存是4 GB） </p><p>64位系统内存寻址范围：0x0000000000000000 – 0xFFFFFFFFFFFFFFFF</p><h3 id="内存和寄存器的区别"><a href="#内存和寄存器的区别" class="headerlink" title="内存和寄存器的区别"></a>内存和寄存器的区别</h3><p>内存：数量庞大，便宜，速度较慢</p><p>寄存器：数量少，昂贵，速度极快，位于CPU内部</p><h3 id="内存的5种表现形式"><a href="#内存的5种表现形式" class="headerlink" title="内存的5种表现形式"></a>内存的5种表现形式</h3><p>立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX,DWORD PTR DS:0x????????]</span><br></pre></td></tr></table></figure><p>把后面这个内存给EAX</p><hr><p>寄存器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV EBX ,0x????????</span><br><span class="line">MOV EAX ,DWORD PTR DS:[EBX]</span><br></pre></td></tr></table></figure><hr><p>寄存器+立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV EBX ,0x????????</span><br><span class="line">MOV EAX ,DWORD PTR DS:[EBX + 4]</span><br></pre></td></tr></table></figure><hr><p>比例因子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[REG + REG * &#123;1,2,4,8&#125;]</span><br></pre></td></tr></table></figure><hr><p>数组元素地址 = 数组首地址 + 元素索引 * 数组元素占用空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX ,0x????????</span><br><span class="line">MOV EBX ,0x2</span><br><span class="line">MOV ECX ,DWORD PTR DS:[EAX+EBX*4]</span><br></pre></td></tr></table></figure><hr><p>比例因子+立即数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOV EAX,0x????????</span><br><span class="line">MOV EBX,0x2</span><br><span class="line">MOV ECX,DWORDPTRDS:[EAX + EBX*4 +1]</span><br></pre></td></tr></table></figure><h2 id="数据存储模式"><a href="#数据存储模式" class="headerlink" title="数据存储模式"></a>数据存储模式</h2><p>大端序：数据高位在内存低位，数据低位在内存高位，常用于ARM架构</p><p>小端序：数据高位在内存高位，数据低位在内存低位，常用于x86、AMD64架构</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://blog.csdn.net/astrotycoon/article/details/76241443" target="_blank" rel="external nofollow noopener noreferrer">EFLAGS寄存器中状态标志（Status Flags）小结</a></li><li><a href="https://blog.csdn.net/jn1158359135/article/details/7761011" target="_blank" rel="external nofollow noopener noreferrer">x86—EFLAGS寄存器详解</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础01：基础概念&quot;&gt;&lt;a href=&quot;#汇编基础01：基础概念&quot; class=&quot;headerlink&quot; title=&quot;汇编基础01：基础概念&quot;&gt;&lt;/a&gt;汇编基础01：基础概念&lt;/h1&gt;&lt;h2 id=&quot;16-32-64位汇编的区别&quot;&gt;&lt;a href=&quot;#16-
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>借助云服务器实现hexo全自动部署</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%80%9F%E5%8A%A9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0hexo%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%80%9F%E5%8A%A9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0hexo%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2020-03-15T14:36:10.000Z</published>
    <updated>2020-04-14T10:13:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="借助云服务器实现hexo全自动部署"><a href="#借助云服务器实现hexo全自动部署" class="headerlink" title="借助云服务器实现hexo全自动部署"></a>借助云服务器实现hexo全自动部署</h1><p>大家好，我是kn0sky，上一篇我们用hexo搭建了wiki主题个人博客，这次我们来讲讲部署hexo文章我们可以如何偷懒。不想直接把站点文件都传到github上，那自己发布hexo文章需要依次执行3条命令，懒惰的我觉得太麻烦了，于是简单写了个脚本将三条hexo命令简化成一条执行脚本命令，但发布文章还是要执行一条命令啊，还是太麻烦了，后来就在想啊，能不能一条命令也不用输入，完全自动发布文章呢，于是有了本文。</p><p>本文的实现思路如下：通过云服务器的定时任务以及和云服务器的实时同步文件来实现全自动部署工作。</p><p><img src="./%E5%80%9F%E5%8A%A9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0hexo%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/1.jpg" alt></p><p><img src="1.jpg" alt></p><p>本文内容分为如下几部分：</p><ul><li>云服务器安装hexo</li><li>实现与云服务器的文件实时同步</li><li>云服务器定时部署到github page</li></ul><h2 id="云服务器安装Hexo"><a href="#云服务器安装Hexo" class="headerlink" title="云服务器安装Hexo"></a>云服务器安装Hexo</h2><h3 id="安装git和Node-JS"><a href="#安装git和Node-JS" class="headerlink" title="安装git和Node.JS"></a>安装git和Node.JS</h3><p>首先通过ssh连接到云服务器，具体操作自行百度</p><p>我这里使用的云服务器系统是Ubuntu Linux系统，所以本文以Ubuntu Linux为例进行讲解</p><p>Ubuntu Linux默认自带git，所以我们还需要自行安装一下Node.JS：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz</span><br><span class="line">$ tar -xvf node-v12.16.1-linux-x64.tar.xz </span><br><span class="line">$ sudo mv node-v12.16.1-linux-x64 /usr/<span class="built_in">local</span>/node-v12</span><br><span class="line">$ sudo ln -s /usr/<span class="built_in">local</span>/node-v12/bin/node /bin/node</span><br><span class="line">$ sudo ln -s /usr/<span class="built_in">local</span>/node-v12/bin/npm /bin/npm</span><br><span class="line"><span class="comment"># 可使用如下命令检测node是否安装成功</span></span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>如果该云服务器是第一次使用git，记得添加一下名称和邮箱</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"email@example.com"</span></span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ sudo ln -s /usr/<span class="built_in">local</span>/node-v12/bin/hexo /bin/hexo</span><br><span class="line"><span class="comment"># 检测hexo是否安装成功</span></span><br><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><h3 id="运行Hexo"><a href="#运行Hexo" class="headerlink" title="运行Hexo"></a>运行Hexo</h3><p>我们需要先初始化一个hexo目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;floder name&gt;</span><br></pre></td></tr></table></figure><p>初始化完成后，文件夹结构如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>其中<code>_config.yml</code>为站点配置文件，<code>themes</code>为主题文件目录</p><p>要运行hexo,在hexo的目录下使用如下命令即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>启动服务器后，默认在4000端口启动web服务，此时访问<code>&lt;ip&gt;:4000</code>即可访问到当前hexo站点，此时站点里默认会有一篇快速入门的文章帮助你快速熟悉hexo的使用</p><p><img src="/home/kn0sky/hexo-wiki/source/_posts/%E5%8D%9A%E5%AE%A2%E7%AF%87/%E5%80%9F%E5%8A%A9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0hexo%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/2.png" alt="image-20200316153018470"></p><p><img src="2.png" alt="image-20200316153018470"></p><p>想将自己的hexo博客设置成wiki样式，可参考我的上篇文章《使用hexo搭建wiki》进行配置</p><h3 id="将本地配置好的wiki移动到云服务器"><a href="#将本地配置好的wiki移动到云服务器" class="headerlink" title="将本地配置好的wiki移动到云服务器"></a>将本地配置好的wiki移动到云服务器</h3><p>将本地配置好的服务器打包，上传到云服务器，然后解压即可直接使用，有的插件可能要再次npm装一下</p><h2 id="实现到云服务器之间的文件实时同步"><a href="#实现到云服务器之间的文件实时同步" class="headerlink" title="实现到云服务器之间的文件实时同步"></a>实现到云服务器之间的文件实时同步</h2><p>为了方便我们写文章在本地保存完就直接同步到服务器上，我们可以想办法实现一下文件实时同步，将本地文件夹的修改实时同步到云服务器上，这里有一个现成的解决方案：使用坚果云实时同步文件夹。</p><p>这里我们使用<a href="https://www.jianguoyun.com/" target="_blank" rel="external nofollow noopener noreferrer">坚果云软件</a>，我们的主机上下载好坚果云软件，注册登录，建立一个同步文件夹，这里操作很无脑，就不演示了，接下来讲讲没有图形界面的Linux命令行如何同步坚果云：</p><p>坚果云提供<code>WebDav</code>接口，这里可以使用<code>davfs</code>工具去挂载<code>WebDav</code>目录</p><blockquote><p>WebDav:WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 <a href="https://baike.baidu.com/item/HTTP" target="_blank" rel="external nofollow noopener noreferrer">HTTP</a> 1.1协议的通信协议。它扩展了HTTP 1.1，在<a href="https://baike.baidu.com/item/GET/2306180" target="_blank" rel="external nofollow noopener noreferrer">GET</a>、<a href="https://baike.baidu.com/item/POST" target="_blank" rel="external nofollow noopener noreferrer">POST</a>、<a href="https://baike.baidu.com/item/HEAD" target="_blank" rel="external nofollow noopener noreferrer">HEAD</a>等几个HTTP标准方法以外添加了一些新的方法，使应用程序可对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的<a href="https://baike.baidu.com/item/版本控制/3311252" target="_blank" rel="external nofollow noopener noreferrer">版本控制</a>。有利于用户间协同编辑和管理存储在万维网服务器文档</p><p>总之，就是常用于网盘的一种网络协议。</p></blockquote><blockquote><p>davfs:一种连接WebDav网盘的工具</p></blockquote><h3 id="安装davfs2"><a href="#安装davfs2" class="headerlink" title="安装davfs2"></a>安装davfs2</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install davfs2</span><br></pre></td></tr></table></figure><h3 id="配置-amp-挂载davfs2"><a href="#配置-amp-挂载davfs2" class="headerlink" title="配置&amp;挂载davfs2"></a>配置&amp;挂载davfs2</h3><p>编辑配置文件<code>/etc/davfs2/davfs2.conf</code>，找到如下内容将注释去掉，将0改成1</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ignore_dav_header 0</span></span><br></pre></td></tr></table></figure><p>编辑配置文件<code>/etc/davfs2/secrets</code>，在配置文件最后添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dav.jianguoyun.com&#x2F;dav　你的坚果云账户　你的webdav应用密码</span><br></pre></td></tr></table></figure><blockquote><p>坚果云WebDav应用密码获取方式：</p><ol><li><a href="https://www.jianguoyun.com/" target="_blank" rel="external nofollow noopener noreferrer">坚果云官网</a>登录你的坚果云账号</li><li>依次点击<code>账户信息</code>—<code>安全选项</code>，即可看到添加WebDav应用的按钮</li><li>点击<code>添加应用</code>，名称随意输入，然后就会自动生成一个密码</li></ol></blockquote><p>然后进行挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  mount.davfs https://dav.jianguoyun.com/dav　你想要挂载的目录</span><br></pre></td></tr></table></figure><p>接下来访问该目录即可发现目录里的内容已经和我们坚果云账号创建的实时同步文件夹同步了</p><p><img src="/home/kn0sky/hexo-wiki/source/_posts/%E5%8D%9A%E5%AE%A2%E7%AF%87/%E5%80%9F%E5%8A%A9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0hexo%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/3.png" alt></p><p><img src="3.png" alt></p><p>接下来，我们将我们的hexo主目录source文件下的_post目录放到我们的坚果云实时同步文件夹下，然后在云服务器软链接（<code>ln -s</code>）到云服务器hexo目录的该位置即可，过于简单就不演示了</p><p>到此为止，我们在本地写完文章保存后，云服务器会自动同步文章，接下来在云服务器后台启动<code>hexo s</code>即可实时展示博客更新的内容了：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> 你的hexo的目录</span><br><span class="line">$ nohup /bin/hexo server &gt;&gt; ~/hexo.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>命令含义详见参考资料</p></blockquote><h3 id="通过脚本生成新的文章模板"><a href="#通过脚本生成新的文章模板" class="headerlink" title="通过脚本生成新的文章模板"></a>通过脚本生成新的文章模板</h3><p>每次创建新的文章都需要通过命令<code>hexo new name</code>进行，hexo程序为我们生成一个文章模板，但是如果我想只在远程服务器上安装hexo，不想在本地安装hexo呢，这里我们通过一个脚本来实现<code>hexo new</code>的功能，这样即使本地没有hexo，也能写hexo的文章，这里直接给出代码了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> sys.argv[<span class="number">1</span>]:</span><br><span class="line">    print(<span class="string">"请输入文章标题"</span>)</span><br><span class="line">    print(<span class="string">"例如：python hexonew.py title"</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line">title = sys.argv[<span class="number">1</span>]</span><br><span class="line">time = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,time.localtime())</span><br><span class="line"></span><br><span class="line">header = <span class="string">f"""</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">title: <span class="subst">&#123;title&#125;</span> </span></span><br><span class="line"><span class="string">toc: true</span></span><br><span class="line"><span class="string">date: <span class="subst">&#123;time&#125;</span></span></span><br><span class="line"><span class="string">tags:</span></span><br><span class="line"><span class="string">categories:</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">footer = <span class="string">"""</span></span><br><span class="line"><span class="string">## 参考资料</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt; - []()</span></span><br><span class="line"><span class="string">&gt; - []()</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">text = header + <span class="string">'\n'</span> + footer</span><br><span class="line">url = os.getcwd() + <span class="string">'/'</span> + title + <span class="string">'.md'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(url,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(text)</span><br></pre></td></tr></table></figure><h2 id="通过脚本和命令实现全自动化部署到Github-Page"><a href="#通过脚本和命令实现全自动化部署到Github-Page" class="headerlink" title="通过脚本和命令实现全自动化部署到Github Page"></a>通过脚本和命令实现全自动化部署到Github Page</h2><p>为了全自动部署到Github Page，我们可以使用Linux的定时任务，比如每天晚上12点进行一次部署，部署的命令我们写成脚本方便一键执行，这样一来，我们只需要写完内容，然后保存，就能全自动部署到我们的博客上了，而且我们可以在任何机器上写文章，甚至不需要安装任何环境，非常方便。</p><h3 id="配置云服务器ssh秘钥连接github"><a href="#配置云服务器ssh秘钥连接github" class="headerlink" title="配置云服务器ssh秘钥连接github"></a>配置云服务器ssh秘钥连接github</h3><p>生成ssh秘钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"github邮箱账号"</span></span><br></pre></td></tr></table></figure><p>找到生成的秘钥，将公钥内容复制，在github上<code>个人设置</code>–<code>SSH and GPG keys</code>–<code>New SSH key</code>添加秘钥</p><p>添加完秘钥可使用如下命令测试:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><blockquote><p>这里我遇到了一个错误：<a href="mailto:git@github.com" rel="external nofollow noopener noreferrer" target="_blank">git@github.com</a>: Permission denied (publickey)，解决方案我放在参考资料里了。</p></blockquote><p>连接成功的话，会返回类似如下字样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi kn0sky! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>此时我们到hexo主目录使用一下<code>hexo d</code>命令试一试，此时我们无需输入账号密码即可成功部署</p><h3 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h3><p>使用一键部署脚本便于定时任务的设置，这里使用shell脚本进行部署</p><p>不知道什么原因，云服务器的<code>hexo s</code>启动服务器不会因为坚果云同步目录的变更而更新内容，所以这里也定时重启好了</p><p>PS：目录地址需要根据自己的情况进行修改</p><p>重启脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> ~/hexo-wiki</span><br><span class="line">num=`ps -elf | grep hexo | grep -v grep | wc -l`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;num&#125;</span> -ne 0 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">ps -elf | grep hexo | grep -v grep | awk <span class="string">'&#123;print $4&#125;'</span> | xargs <span class="built_in">kill</span> -9</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[+]已杀死进程"</span> &gt;&gt; ~/hexo.log</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"--------------"</span> &gt;&gt; ~/hexo.log</span><br><span class="line"><span class="built_in">echo</span> `date -d now` &gt;&gt; ~/hexo.log</span><br><span class="line">nohup /bin/hexo server -p 30808 &gt;&gt; ~/hexo.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>部署脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> ~/hexo-wiki</span><br><span class="line">nohup hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &gt;&gt; ~/crontab_script/hexo_auto_depoly.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'-----------------------'</span></span><br><span class="line"><span class="built_in">echo</span> `date -d <span class="string">'now'</span>` &gt;&gt; ~/crontab_script/blog_auto_deploy.log</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[+]完成部署！"</span> &gt;&gt; ~/crontab_script/blog_auto_deploy.log</span><br></pre></td></tr></table></figure><p>这里使用git进行自动部署，git会自动检测提交的内容同上次提交相比是否有变更，如果有，就部署，反之，不部署。</p><h3 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h3><p>使用<code>crontab</code>工具设置定时任务，使用如下命令进入编辑页面</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure><p>在配置的最底下添加如下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天9点12分的时候运行部署脚本</span></span><br><span class="line">12       9       *       *       *       bash ~/crontab_script/blog_auto_deploy.sh</span><br><span class="line"><span class="comment"># 每15分钟运行一次hexo 服务重启脚本</span></span><br><span class="line">*/15    *       *       *       *       bash ~/crontab_script/blog_auto_server.sh</span><br></pre></td></tr></table></figure><p>到此，基本实现hexo全自动部署功能！</p><p>希望对读完的你有所帮助。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="[https://kn0sky.com/wiki/%E5%8D%9A%E5%AE%A2%E7%AF%87/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BAwiki/](https://kn0sky.com/wiki/博客篇/使用hexo搭建wiki/)">使用hexo搭建个人wiki</a></li><li><a href="https://ywnz.com/linuxjc/3362.html" target="_blank" rel="external nofollow noopener noreferrer">备份Linux操作系统的数据到坚果云的方法</a></li><li><a href="https://cloud.tencent.com/developer/labs/lab/10040" target="_blank" rel="external nofollow noopener noreferrer">搭建 Node.js 环境</a></li><li><a href="https://www.cnblogs.com/zhenghongxin/p/7029173.html" target="_blank" rel="external nofollow noopener noreferrer">linux shell中”2&gt;&amp;1”含义</a></li><li><a href="https://www.cnblogs.com/baby123/p/6477429.html" target="_blank" rel="external nofollow noopener noreferrer">nohup和&amp;后台运行，进程查看及终止</a></li><li><a href="https://blog.csdn.net/qq_32786873/article/details/80947195" target="_blank" rel="external nofollow noopener noreferrer">git@github.com: Permission denied (publickey)</a></li><li><a href="https://www.runoob.com/linux/linux-comm-crontab.html" target="_blank" rel="external nofollow noopener noreferrer">Linux crontab 命令</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;借助云服务器实现hexo全自动部署&quot;&gt;&lt;a href=&quot;#借助云服务器实现hexo全自动部署&quot; class=&quot;headerlink&quot; title=&quot;借助云服务器实现hexo全自动部署&quot;&gt;&lt;/a&gt;借助云服务器实现hexo全自动部署&lt;/h1&gt;&lt;p&gt;大家好，我是kn0s
      
    
    </summary>
    
    
      <category term="计算机使用入门学习" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="博客搭建" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows系统下进行屏幕扩展</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B/%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/Windows%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B/%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/Windows%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/</id>
    <published>2020-03-13T10:38:51.000Z</published>
    <updated>2020-03-13T10:27:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows系统下进行屏幕扩展"><a href="#Windows系统下进行屏幕扩展" class="headerlink" title="Windows系统下进行屏幕扩展"></a>Windows系统下进行屏幕扩展</h2><p>多屏幕协同工作可以有效提高工作效率，在一定程度上摆脱窗口反复切换的问题，下面将分别介绍常规和非常规的解决方案。</p><h2 id="常规解决方案"><a href="#常规解决方案" class="headerlink" title="常规解决方案"></a>常规解决方案</h2><p>最常规的方法是整一个显示设备（显示器、投影仪等），HDMI线缆连接，然后显示设置里选择扩展屏幕（也有复制选项）</p><h2 id="非常规解决方案"><a href="#非常规解决方案" class="headerlink" title="非常规解决方案"></a>非常规解决方案</h2><h3 id="通过局域网使用手机-平板-其他Windows电脑进行屏幕扩展"><a href="#通过局域网使用手机-平板-其他Windows电脑进行屏幕扩展" class="headerlink" title="通过局域网使用手机/平板/其他Windows电脑进行屏幕扩展"></a>通过局域网使用手机/平板/其他Windows电脑进行屏幕扩展</h3><p>这里需要通过<code>spacedesk</code>软件实现，下载地址参考：<a href="https://spacedesk.net/" target="_blank" rel="external nofollow noopener noreferrer">spacedesk官网</a></p><p>软件分为主机端和扩展端，主机端只能是Windows系统，扩展端可以是Android、Windows、iOS等</p><p>软件的安装较为无脑，直接点下一步即可，这里不多啰嗦，Android端apk打不开Google Play商店可通过其他下载站进行下载，例如<a href="https://freeapk.mobi/spacedesk/" target="_blank" rel="external nofollow noopener noreferrer">Freeapk</a></p><p>软件安装完之后，主机和用于扩展屏幕的设备需处于同一局域网下，主机端打开软件，扩展端也打开软件，扩展端会直接在局域网内搜索主机，然后选中要使用扩展的主机即可</p><p>PS： Windows系统查看 IP 地址可通过 cmd 命令进行查询：</p><ol><li>快捷键<code>Windows + R</code>打开<code>运行</code></li><li>输入 cmd 敲击回车，弹出黑框框</li><li>输入<code>ipconfig</code>命令敲击回车，即可查询当前IP</li></ol><p><strong>注意：如果手机和电脑分辨率不一样会导致扩展屏的使用体验很糟糕！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Windows系统下进行屏幕扩展&quot;&gt;&lt;a href=&quot;#Windows系统下进行屏幕扩展&quot; class=&quot;headerlink&quot; title=&quot;Windows系统下进行屏幕扩展&quot;&gt;&lt;/a&gt;Windows系统下进行屏幕扩展&lt;/h2&gt;&lt;p&gt;多屏幕协同工作可以有效提高工
      
    
    </summary>
    
    
      <category term="计算机使用入门学习" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Windows系统下" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B/"/>
    
      <category term="屏幕扩展" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B/%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/"/>
    
    
  </entry>
  
  <entry>
    <title>使用hexo搭建个人wiki</title>
    <link href="http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BAwiki/"/>
    <id>http://kn0sky.com/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BAwiki/</id>
    <published>2020-03-12T11:38:51.000Z</published>
    <updated>2020-03-16T08:55:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo及其环境的安装"><a href="#Hexo及其环境的安装" class="headerlink" title="Hexo及其环境的安装"></a>Hexo及其环境的安装</h2><p>安装Hexo需要<code>Node.js</code>和<code>Git</code>环境，Hexo安装方法和过程参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a></p><h2 id="初始化hexo文件夹："><a href="#初始化hexo文件夹：" class="headerlink" title="初始化hexo文件夹："></a>初始化hexo文件夹：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;floder_name&gt;</span><br></pre></td></tr></table></figure><p>初始化完成后，文件夹结构如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>其中<code>_config.yml</code>为站点配置文件，<code>themes</code>为主题文件目录</p><h2 id="hexo的快速入门"><a href="#hexo的快速入门" class="headerlink" title="hexo的快速入门"></a>hexo的快速入门</h2><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p><p>PS：Hexo建站各种基本使用方法请参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a></p><h2 id="Hexo安装Wikitten主题："><a href="#Hexo安装Wikitten主题：" class="headerlink" title="Hexo安装Wikitten主题："></a>Hexo安装Wikitten主题：</h2><p><strong>PS:这里主题使用相关内容均来自<a href="https://github.com/zthxxx/hexo-theme-Wikitten" target="_blank" rel="external nofollow noopener noreferrer">Wikitten主题的文档</a></strong></p><p>安装过程如下：</p><ol><li><p>进入你的hexo文件夹，将主题克隆到themes/路径下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-directory</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten</span><br></pre></td></tr></table></figure></li><li><p>覆盖站点目录中的默认页面模板</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp -rf themes/Wikitten/_source/* <span class="built_in">source</span>/</span><br><span class="line">$ cp -rf themes/Wikitten/_scaffolds/* scaffolds/</span><br></pre></td></tr></table></figure></li><li><p>重命名主题中的 <code>_config.yml.example</code> 到 <code>_config.yml</code>，然后可以使用配置文件配置主题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cp -f themes/Wikitten/_config.yml.example themes/Wikitten/_config.yml</span><br><span class="line"><span class="comment"># 编辑配置文件，定制你的配置项</span></span><br><span class="line">$ vim themes/Wikitten/_config.yml</span><br></pre></td></tr></table></figure></li><li><p>安装插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo-autonofollow    // 打开非本站链接时自动开启新标签页</span><br><span class="line">hexo-directory-category // 根据文章文件目录自动为文章添加分类</span><br><span class="line">hexo-generator-feed    // 生成 RSS 源</span><br><span class="line">hexo-generator-json-content// 生成全站文章 json 内容，用于全文搜索</span><br><span class="line">hexo-generator-sitemap// 生成全站站点地图 sitemap</span><br></pre></td></tr></table></figure><p>安装命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i -S hexo-autonofollow hexo-directory-category hexo-generator-feed hexo-generator-json-content hexo-generator-sitemap</span><br></pre></td></tr></table></figure></li></ol><p>到这里我们的个人wiki版的hexo站点已经可以运行了，接下来我们需要做一些定制化的配置：</p><ol><li><p>添加插件的配置内容：向站点配置文件（hexo根目录下的<code>_config.yml</code>文件）最后添加如下内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Markdown</span></span><br><span class="line"><span class="comment">## https://github.com/hexojs/hexo-renderer-marked</span></span><br><span class="line">marked:</span><br><span class="line">  gfm: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">### JsonContent</span></span><br><span class="line">jsonContent:</span><br><span class="line">  meta: <span class="literal">false</span></span><br><span class="line">  pages:</span><br><span class="line">    title: <span class="literal">true</span></span><br><span class="line">    date: <span class="literal">true</span></span><br><span class="line">    path: <span class="literal">true</span></span><br><span class="line">    text: <span class="literal">true</span></span><br><span class="line">  posts:</span><br><span class="line">    title: <span class="literal">true</span></span><br><span class="line">    date: <span class="literal">true</span></span><br><span class="line">    path: <span class="literal">true</span></span><br><span class="line">    text: <span class="literal">true</span></span><br><span class="line">    tags: <span class="literal">true</span></span><br><span class="line">    categories: <span class="literal">true</span></span><br><span class="line">  ignore:</span><br><span class="line">    - 404.html</span><br><span class="line">    </span><br><span class="line"><span class="comment">### Creat sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line"></span><br><span class="line"><span class="comment">### Adds nofollow attribute to all external links in your hexo blog posts automatically.</span></span><br><span class="line">nofollow:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    - &lt;your site url domain&gt; <span class="comment"># eg: zthxxx.me</span></span><br></pre></td></tr></table></figure></li></ol><p>到这里，我们的wikitten主题的hexo站点已经成功搭建完成</p><h2 id="一些个人定制化配置（可选）"><a href="#一些个人定制化配置（可选）" class="headerlink" title="一些个人定制化配置（可选）"></a>一些个人定制化配置（可选）</h2><h3 id="修改代码块颜色"><a href="#修改代码块颜色" class="headerlink" title="修改代码块颜色"></a>修改代码块颜色</h3><p>这个主题启用之后，默认代码块的背景颜色是黑色，纯白色的背景配纯黑的代码块背景颜色有点看着不舒服，所以我想将代码块颜色进行修改。</p><ol><li><p>找到主题配置文件找到如下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight: monokai</span><br></pre></td></tr></table></figure></li><li><p>将monokai改成自己想要的主题即可，本站使用的风格是``</p></li></ol><p>PS：可用主题名称可于<code>Wikitten/source/css/_highlight</code>目录下找到，<a href="https://highlightjs.org/static/demo/" target="_blank" rel="external nofollow noopener noreferrer">highlightjs网站</a>可进行在线预览。</p><h3 id="启用资源文件夹"><a href="#启用资源文件夹" class="headerlink" title="启用资源文件夹"></a>启用资源文件夹</h3><p>编写<code>.md</code>格式文档过程中，图片的插入是个问题，我们可以引用外部链接，也可以使用本地图片，如果不想使用远程图床的话，这里启用资源文件夹更加便于在文档中插入图片</p><p>在站点配置文件夹中，找到如下配置选项，将<code>false</code>改为<code>true</code>即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>接下来使用命令(<code>hexo new title</code>)创建新文档的时候，就会自动创建一个资源文件夹</p><p>PS：由于之前开启了自动以文件夹来创建分类，所以我们使用资源文件夹的时候，文件夹里不要出现<code>.md</code>文件，不然文件夹也会被认为是一个文章分类</p><h3 id="部署到Github-Page"><a href="#部署到Github-Page" class="headerlink" title="部署到Github Page"></a>部署到Github Page</h3><h4 id="手动部署"><a href="#手动部署" class="headerlink" title="手动部署"></a>手动部署</h4><p>这里有两个地方要操作，一个是github，一个是本地配置文件</p><h5 id="github创建github-page仓库"><a href="#github创建github-page仓库" class="headerlink" title="github创建github page仓库"></a>github创建github page仓库</h5><ol><li>创建github账号</li><li>创建个人仓库，仓库名为<code>用户名.github.io</code></li></ol><h5 id="配置部署到github"><a href="#配置部署到github" class="headerlink" title="配置部署到github"></a>配置部署到github</h5><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>编辑站点配置文件，找到如下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">''</span></span><br></pre></td></tr></table></figure><p>按照如下格式进行修改：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: &lt;repository url&gt; </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>repo：github仓库的url（例如:<a href="https://github.com/username/username.github.io.git）" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/username/username.github.io.git）</a></p><p>branch：分支名称(一般是master)</p></li><li><p>然后使用如下命令进行部署</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>命令执行完成后会提示你输入github账号密码，输入完即完成了提交</p></li></ol><p>接下来可从<code>username.github.io</code>访问到自己的博客了</p><h4 id="免密码部署设置"><a href="#免密码部署设置" class="headerlink" title="免密码部署设置"></a>免密码部署设置</h4><ol><li><p>创建SSH密匙</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"GitHub 邮箱"</span></span><br></pre></td></tr></table></figure></li><li><p>复制公钥（生成的<code>.pub</code>的文件）的内容到github–setting–SSH and GPG keys中（标题随便起）</p></li><li><p>修改站点配置文件，将前面我们的repo改成ssh地址，格式例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:myname/myname.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>然后我们再次使用<code>hexo d</code>进行部署，就不再需要我们填写用户名和密码了</p></li></ol><h4 id="使用脚本一键部署"><a href="#使用脚本一键部署" class="headerlink" title="使用脚本一键部署"></a>使用脚本一键部署</h4><p>每次部署都需要三条命令，过于麻烦，我们可以写个脚本将三条命令进行简化</p><p>以下脚本均放在站点主目录下</p><p>shell脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">'hexo clean'</span>)</span><br><span class="line">os.system(<span class="string">'hexo g'</span>)</span><br><span class="line">os.system(<span class="string">'hexo d'</span>)</span><br></pre></td></tr></table></figure><h4 id="设置自定义域名"><a href="#设置自定义域名" class="headerlink" title="设置自定义域名"></a>设置自定义域名</h4><p>我们也可以使用我们自己的域名来访问我们的博客，首先，我们需要先注册一个域名（比如，可以去腾讯云注册）</p><p>然后在我们博客的github仓库设置自定义域名为我们想要访问解析的域名，同时在我们注册域名的地方设置CNAME解析地址为:<code>username.github.io.</code></p><p>稍等片刻即可通过自定义域名访问博客了</p><p>不过这里会出现一个问题就是每次部署都会导致CNAME信息需要重新设置，这里我们需要在站点主目录的source目录下创建个CNAME文件，里面写上自己要解析的地址即可</p><h4 id="自动化部署到Github-Page"><a href="#自动化部署到Github-Page" class="headerlink" title="自动化部署到Github Page"></a>自动化部署到Github Page</h4><p> 使用<a href="https://travis-ci.com/" target="_blank" rel="external nofollow noopener noreferrer">Travis CI</a> 将 Hexo 博客部署到 GitHub Pages 上可实现自动化部署，只需要我们将站点文件push到github上，即可自动部署成博客</p><p>如果不希望自己的站点文件公开的话，还是建议使用上面的手动部署方法</p><p>详细教程请参考<a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="external nofollow noopener noreferrer">hexo相关文档</a></p><p>More info: <a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="external nofollow noopener noreferrer">deploy to github page</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://github.com/zthxxx/hexo-theme-Wikitten/blob/master/README_zh-CN.md" target="_blank" rel="external nofollow noopener noreferrer">Hexo-Theme-Wikitten中文文档</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer">Hexo文档</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo及其环境的安装&quot;&gt;&lt;a href=&quot;#Hexo及其环境的安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo及其环境的安装&quot;&gt;&lt;/a&gt;Hexo及其环境的安装&lt;/h2&gt;&lt;p&gt;安装Hexo需要&lt;code&gt;Node.js&lt;/code&gt;和&lt;code
      
    
    </summary>
    
    
      <category term="计算机使用入门学习" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="博客搭建" scheme="http://kn0sky.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
</feed>
